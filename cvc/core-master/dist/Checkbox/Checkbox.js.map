{"version":3,"sources":["../../src/Checkbox/Checkbox.js"],"names":["CustomCheckbox","checked","label","classes","onChange","inverted","disabled","onHandleChange","checkBoxClasses","root","checkboxInverted","checkbox","formControlClasses","rootInverted","checkboxColor","propTypes","PropTypes","object","isRequired","bool","oneOfType","string","func","styles","withTheme"],"mappings":"mLAAA,oDACA,4EACA,4FACA,uFACA,6DACA,gCAEA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAEjB,IADFC,CAAAA,OACE,MADFA,OACE,CADOC,KACP,MADOA,KACP,CADcC,OACd,MADcA,OACd,CADuBC,QACvB,MADuBA,QACvB,CADiCC,QACjC,MADiCA,QACjC,CAD2CC,QAC3C,MAD2CA,QAC3C,CACF,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,GAAIH,QAAJ,CAAcA,QAAQ,CAAC,CAACH,OAAF,CACzB,CAFD,CAIA,GAAMO,CAAAA,eAAe,CAAG,CACpBC,IAAI,CAAEJ,QAAQ,CAAGF,OAAO,CAACO,gBAAX,CAA8BP,OAAO,CAACQ,QADhC,CAEpBL,QAAQ,CAAEH,OAAO,CAACG,QAFE,CAAxB,CAKA,GAAMM,CAAAA,kBAAkB,CAAG,CACvBH,IAAI,CAAEJ,QAAQ,CAAGF,OAAO,CAACU,YAAX,CAA0BV,OAAO,CAACM,IADzB,CAA3B,CAIA,GAAMK,CAAAA,aAAa,CAAGT,QAAQ,CAAG,WAAH,CAAiB,SAA/C,CAEA,mBACI,gCAAC,4BAAD,EACI,OAAO,CAAEO,kBADb,CAEI,OAAO,cAAE,gCAAC,oBAAD,EAAU,KAAK,CAAEE,aAAjB,CAAgC,QAAQ,CAAEP,cAA1C,CAA0D,OAAO,CAAEC,eAAnE,CAAoF,OAAO,CAAEP,OAA7F,CAAsG,QAAQ,CAAEK,QAAhH,EAFb,CAGI,KAAK,CAAEJ,KAHX,EAMP,CAzBD,CA2BAF,cAAc,CAACe,SAAf,CAA2B,CACvBZ,OAAO,CAAEa,sBAAUC,MAAV,CAAiBC,UADH,CAEvBjB,OAAO,CAAEe,sBAAUG,IAFI,CAGvBjB,KAAK,CAAEc,sBAAUI,SAAV,CAAoB,CAACJ,sBAAUC,MAAX,CAAmBD,sBAAUK,MAA7B,CAApB,EAA0DH,UAH1C,CAIvBd,QAAQ,CAAEY,sBAAUM,IAJG,CAKvBjB,QAAQ,CAAEW,sBAAUG,IALG,CAMvBb,QAAQ,CAAEU,sBAAUG,IANG,CAA3B,C,aASe,2BAAWI,cAAX,CAAmB,CAAEC,SAAS,CAAE,IAAb,CAAnB,EAAwCxB,cAAxC,C","sourcesContent":["import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport { styles } from \"./styles\";\n\nconst CustomCheckbox = ({\n    checked, label, classes, onChange, inverted, disabled\n}) => {\n    const onHandleChange = () => {\n        if (onChange) onChange(!checked);\n    };\n\n    const checkBoxClasses = {\n        root: inverted ? classes.checkboxInverted : classes.checkbox,\n        disabled: classes.disabled,\n    };\n\n    const formControlClasses = {\n        root: inverted ? classes.rootInverted : classes.root,\n    };\n\n    const checkboxColor = inverted ? \"secondary\" : \"primary\";\n\n    return (\n        <FormControlLabel\n            classes={formControlClasses}\n            control={<Checkbox color={checkboxColor} onChange={onHandleChange} classes={checkBoxClasses} checked={checked} disabled={disabled} />}\n            label={label}\n        />\n    );\n};\n\nCustomCheckbox.propTypes = {\n    classes: PropTypes.object.isRequired,\n    checked: PropTypes.bool,\n    label: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    onChange: PropTypes.func,\n    inverted: PropTypes.bool,\n    disabled: PropTypes.bool\n};\n\nexport default withStyles(styles, { withTheme: true })(CustomCheckbox);\n"],"file":"Checkbox.js"}