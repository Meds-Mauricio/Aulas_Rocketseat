declare var _default: React.ComponentType<Pick<Pick<PropTypes.InferProps<{
    classes: PropTypes.Requireable<string | object>;
    onApply: PropTypes.Requireable<(...args: any[]) => any>;
    onReset: PropTypes.Requireable<(...args: any[]) => any>;
    noModal: PropTypes.Requireable<boolean>;
    onChange: PropTypes.Requireable<(...args: any[]) => any>;
    className: PropTypes.Requireable<string | object>;
    isMobile: PropTypes.Requireable<boolean>;
    step: PropTypes.Requireable<number>;
    open: PropTypes.Requireable<boolean>;
    onOpen: PropTypes.Requireable<(...args: any[]) => any>;
    onClose: PropTypes.Requireable<(...args: any[]) => any>;
    handleFocus: PropTypes.Requireable<(...args: any[]) => any>;
    handleBlur: PropTypes.Requireable<(...args: any[]) => any>;
    handleChange: PropTypes.Requireable<(...args: any[]) => any>;
}>, never> & Partial<Pick<PropTypes.InferProps<{
    classes: PropTypes.Requireable<string | object>;
    onApply: PropTypes.Requireable<(...args: any[]) => any>;
    onReset: PropTypes.Requireable<(...args: any[]) => any>;
    noModal: PropTypes.Requireable<boolean>;
    onChange: PropTypes.Requireable<(...args: any[]) => any>;
    className: PropTypes.Requireable<string | object>;
    isMobile: PropTypes.Requireable<boolean>;
    step: PropTypes.Requireable<number>;
    open: PropTypes.Requireable<boolean>;
    onOpen: PropTypes.Requireable<(...args: any[]) => any>;
    onClose: PropTypes.Requireable<(...args: any[]) => any>;
    handleFocus: PropTypes.Requireable<(...args: any[]) => any>;
    handleBlur: PropTypes.Requireable<(...args: any[]) => any>;
    handleChange: PropTypes.Requireable<(...args: any[]) => any>;
}>, "classes" | "className" | "open" | "isMobile" | "onChange" | "onReset" | "onClose" | "step" | "noModal" | "onOpen" | "onApply" | "handleChange" | "handleFocus" | "handleBlur">> & Partial<Pick<{
    classes: undefined;
    onApply: undefined;
    onReset: undefined;
    noModal: boolean;
    onChange: undefined;
    className: undefined;
    isMobile: boolean;
    step: number;
    open: boolean;
    onOpen: undefined;
    onClose: undefined;
    handleFocus: undefined;
    handleBlur: undefined;
    handleChange: undefined;
}, never>>, "className" | "open" | "isMobile" | "onChange" | "onReset" | "onClose" | "step" | "noModal" | "onOpen" | "onApply" | "handleChange" | "handleFocus" | "handleBlur"> & import("@material-ui/core/styles").StyledComponentProps<"text" | "input" | "highlight" | "inputContainer">>;
export default _default;
import PropTypes from "prop-types";
import React from "react";
