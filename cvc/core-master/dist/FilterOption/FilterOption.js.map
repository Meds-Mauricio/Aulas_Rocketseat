{"version":3,"sources":["../../src/FilterOption/FilterOption.js"],"names":["FilterOption","filter","items","sufix","onChange","isMobile","className","noModal","label","open","onOpen","onClose","onApply","onReset","onActive","height","getSelectedValues","el","checked","map","value","toString","change","option","index","isChecked","Object","assign","length","isActive","disabled","cleanFilterOnClose","applied","newItems","defaultProps","undefined","propTypes","PropTypes","bool","oneOfType","object","string","arrayOf","isRequired","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Checkbox from \"../Checkbox\";\nimport Filter from \"../Filter\";\n\nconst FilterOption = ({\n    filter,\n    items,\n    sufix,\n    onChange,\n    isMobile,\n    className,\n    noModal,\n    label,\n    open,\n    onOpen,\n    onClose,\n    onApply,\n    onReset,\n    onActive,\n    height,\n}) => {\n    const getSelectedValues = () =>\n        items.filter(el => el.checked).map(el => {\n            if (el.label != null && typeof el.label === \"object\")\n                return el.value.toString();\n            return el.label.toString();\n        });\n\n    const change = (option, index, isChecked) => {\n        Object.assign(option, { checked: isChecked });\n        Object.assign(items[index], { checked: isChecked });\n        if (onChange) onChange(option, items);\n        if (onActive) onActive(getSelectedValues().length > 0);\n    };\n\n    const isActive = () => !!getSelectedValues().length && !noModal;\n\n    const disabled = getSelectedValues().length <= 0;\n\n    const cleanFilterOnClose = () => {\n        if (!filter.applied) {\n            const newItems = items\n                .filter(el => el.checked)\n                .map(el => {\n                    el.checked = false;\n                    return el;\n                });\n            if (onChange) onChange(items, newItems);\n            if (onActive) onActive(false);\n        }\n    };\n\n    return (\n        <Filter\n            sufix={sufix}\n            type=\"list\"\n            isMobile={isMobile}\n            className={className}\n            noModal={noModal}\n            label={label}\n            height={height}\n            items={items.map((option, index) => {\n                return (\n                    <Checkbox\n                        key={option}\n                        disabled={option.disabled}\n                        checked={option.checked}\n                        onChange={isChecked => change(option, index, isChecked)}\n                        label={option.label}\n                    />\n                );\n            })}\n            onOpen={() => onOpen()}\n            isOpen={open}\n            onApply={() => onApply()}\n            onReset={() => onReset()}\n            onClose={() => { cleanFilterOnClose(); onClose(); }}\n            isActive={isActive() && !open}\n            value={getSelectedValues().length ? getSelectedValues() : [\"\"]}\n            disabled={disabled}\n        />\n    );\n};\n\nFilterOption.defaultProps = {\n    open: false,\n    className: undefined,\n    isMobile: false,\n    sufix: \"\",\n    items: [],\n    noModal: false,\n    onOpen: () => { },\n    onApply: () => { },\n    onReset: () => { },\n    onChange: () => { },\n};\n\nFilterOption.propTypes = {\n    open: PropTypes.bool,\n    className: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    items: PropTypes.arrayOf(PropTypes.object),\n    isMobile: PropTypes.bool,\n    sufix: PropTypes.string,\n    noModal: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n    onOpen: PropTypes.func,\n    onApply: PropTypes.func,\n    onReset: PropTypes.func,\n    onChange: PropTypes.func,\n};\n\nexport default FilterOption;\n"],"file":"FilterOption.js"}