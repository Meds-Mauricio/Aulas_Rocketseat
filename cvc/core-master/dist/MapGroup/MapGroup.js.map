{"version":3,"sources":["../../src/MapGroup/MapGroup.js"],"names":["clusterStyles","url","map","height","width","textColor","MapGroup","defaultData","data","zoom","active","handleSelect","handleMarkerCluster","gridSize","maxZoom","minimumClusterSize","onZoomChanged","mapRefs","onMarkerCluster","cluster","getMarkers","handleOnZoomChanged","current","lat","coords","lng","streetViewControl","fullscreenControl","mapTypeControl","children","item","JSON","stringify","id","location","coordinates","latitude","longitude","closeBoxURL","enableEventPropagation","get","toFixed"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport {\n    GoogleMap,\n    Marker,\n    withGoogleMap,\n    withScriptjs\n} from \"react-google-maps\";\nimport MarkerClusterer from \"react-google-maps/lib/components/addons/MarkerClusterer\";\nimport map from \"../assets/img/map.png\";\nimport { Bubbly, CustomInfoBox } from \"./styles\";\nimport \"./styles.css\";\n\nconst clusterStyles = [\n    {\n        url: map,\n        height: 40,\n        width: 40,\n        textColor: \"#97007C\",\n    },\n];\n\nconst MapGroup = withScriptjs(withGoogleMap(({\n    defaultData,\n    data,\n    zoom,\n    active,\n    handleSelect,\n    handleMarkerCluster,\n    gridSize,\n    maxZoom,\n    minimumClusterSize,\n    onZoomChanged,\n}) => {\n    const mapRefs = useRef(null);\n\n    const onMarkerCluster = cluster => {\n        if (handleMarkerCluster) handleMarkerCluster(cluster.getMarkers());\n    };\n\n    const handleOnZoomChanged = () => {\n        if (onZoomChanged) onZoomChanged(mapRefs.current);\n    };\n\n    return data ? (\n        <>\n            <GoogleMap\n                zoom={zoom}\n                center={{\n                    lat: defaultData.coords.lat,\n                    lng: defaultData.coords.lng,\n                }}\n                options={{\n                    streetViewControl: false,\n                    fullscreenControl: false,\n                    mapTypeControl: false,\n                }}\n                ref={mapRefs}\n                onZoomChanged={handleOnZoomChanged}\n            >\n                <MarkerClusterer\n                    averageCenter\n                    enableRetinaIcons\n                    gridSize={gridSize}\n                    maxZoom={maxZoom}\n                    minimumClusterSize={minimumClusterSize}\n                    defaultStyles={clusterStyles}\n                    onClick={cluster => onMarkerCluster(cluster)}\n                >\n\n                    {children ? (\n                        <>\n                            {children}\n                        </>\n                    ) : (\n                        <>\n                            {data &&\n                                data.map(item => {\n                                    return (\n                                        <Marker\n                                            title={JSON.stringify(item)}\n                                            name={item.id}\n                                            key={item.id}\n                                            position={{\n                                                lat: item.location.coordinates.latitude,\n                                                lng: item.location.coordinates.longitude,\n                                            }}\n                                            visible={false}\n                                        >\n                                            <InfoBox\n                                                options={{\n                                                    closeBoxURL: \"\",\n                                                    enableEventPropagation: true,\n                                                }}\n                                            >\n                                                <Bubbly\n                                                    active={active === item.id}\n                                                    onClick={() => handleSelect(item)}\n                                                >\n                                                    <>\n                                                        R${\" \"}\n                                                        {get(item,\n                                                            [\"room\", \"rate\", \"pricePerDayWithTax\"],\n                                                            {}).toFixed()}\n                                                    </>\n                                                </Bubbly>\n                                            </InfoBox>\n                                        </Marker>\n                                    );\n                                })}\n                        </>\n                    )}\n                </MarkerClusterer>\n            </GoogleMap>\n        </>\n    ) : null;\n}));\n\nexport default MapGroup;\n"],"file":"MapGroup.js"}