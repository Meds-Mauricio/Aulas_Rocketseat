{"version":3,"sources":["../../src/NextBase/index.tsx"],"names":["GTMNoScript","ctx","BrandContext","__html","gtm","withNextBasePage","Header","App","Page","brand","hostname","otherProps","buildContextApiUrl","process","env","CONTEXTAPI","withNextGetServerSideProps","contextApiUrl","fnAdditionalProps","qd","context","addit","req","brandResolver","getContextData","props","getServerSideProps"],"mappings":"+xBAAA,qDACA,mFACA,0EACA,6CACA,oD,2zDAEO,QAASA,CAAAA,WAAT,EAAuB,CAC1B,GAAMC,CAAAA,GAAG,CAAG,sBAAWC,0BAAX,CAAZ,CACA,mBAAO,4CAAU,uBAAuB,CAAE,CAAEC,MAAM,qEAA8DF,GAAG,CAACG,GAAlE,mFAAR,CAAnC,EACV,CAED;AACA;AACe,QAASC,CAAAA,gBAAT,CAA0BC,MAA1B,CAAkCC,GAAlC,CAAuC,CAClD,MAAO,SAASC,CAAAA,IAAT,MAAkD,IAAlCC,CAAAA,KAAkC,MAAlCA,KAAkC,CAA3BC,QAA2B,MAA3BA,QAA2B,CAAdC,UAAc,0DACrD,GAAIF,KAAK,EAAI,IAAb,CACI,KAAM,sBAAN,CAEJ,mBACI,gCAAC,0CAAD,EAAsB,KAAK,CAAEA,KAA7B,CAAoC,QAAQ,CAAEC,QAA9C,eACI,gCAAC,+BAAD,mBACI,gCAAC,4CAAD,mBACI,gCAAC,WAAD,MADJ,cAEI,gCAAC,MAAD,2BAAQ,QAAQ,CAAEA,QAAlB,EAAgCC,UAAhC,EAFJ,cAGI,gCAAC,GAAD,2BAAK,QAAQ,CAAED,QAAf,EAA6BC,UAA7B,EAHJ,CADJ,CADJ,CAUP,CACJ,CAED,QAASC,CAAAA,kBAAT,EAA8B,CAC1B,uBAAkBC,OAAD,CAAiBC,GAAjB,CAAqBC,UAAtC,gBACH,CACD;AACO,QAASC,CAAAA,0BAAT,CAAoCC,aAApC,CAA4DC,iBAA5D,CAA8F,CACjG,GAAMC,CAAAA,EAAE,CAAG,0CAAoBF,aAApB,SAAoBA,aAApB,UAAoBA,aAApB,CAAqCL,kBAAkB,EAAvD,CAAX,CAEA,kIAAO,iBAAkCQ,OAAlC,mJACWF,iBADX,8CACqCA,CAAAA,iBAAiB,CAACE,OAAD,CADtD,2EACkE,EADlE,QACGC,KADH,aAEGX,QAFH,CAEc,sCAAYU,OAAO,CAACE,GAApB,EAAyBZ,QAFvC,aAGWa,mCAHX,wBAG+BJ,CAAAA,EAAE,CAACK,cAAH,EAH/B,+CAGoDd,QAHpD,CAGGD,KAHH,0EAII,CACHgB,KAAK,gBAAIhB,KAAK,CAALA,KAAJ,CAAWC,QAAQ,CAARA,QAAX,EAAwBW,KAAxB,CADF,CAJJ,wDAAP,WAAsBK,CAAAA,kBAAtB,4DAAsBA,CAAAA,kBAAtB,GAQH","sourcesContent":["import React, { useContext } from \"react\";\nimport ThemeProviderCustom from \"../ThemeProviderCustom\";\nimport { BrandContextProvider, getHostName, brandResolver, UserDataProviderCustom } from \"../BrandContext/BrandContextProvider\";\nimport { BrandContext } from \"../BrandContext\";\nimport { getQueryContextData } from \"./QueryContextData\";\n\nexport function GTMNoScript() {\n    const ctx = useContext(BrandContext);\n    return <noscript dangerouslySetInnerHTML={{ __html: `<iframe src=\"https://www.googletagmanager.com/ns.html?id=${ctx.gtm}\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden;\"></iframe>` }} />;\n}\n\n//Todo o conteúdo de nossas páginas devem estar dentro de BrandContextProvider. Assim, na raiz do componente que é exportado na página do Next,\n//devemos atachar o método getInitialProps, que, por sua vez, chamará a função getHostName passando o parâmetro correspondente à requisição do server.\nexport default function withNextBasePage(Header, App) {\n    return function Page({ brand, hostname, ...otherProps }) {\n        if (brand == null)\n            throw \"brand is not loaded!\";\n\n        return (\n            <BrandContextProvider brand={brand} hostname={hostname}>\n                <ThemeProviderCustom>\n                    <UserDataProviderCustom>\n                        <GTMNoScript />\n                        <Header hostname={hostname} {...otherProps} />\n                        <App hostname={hostname} {...otherProps} />\n                    </UserDataProviderCustom>\n                </ThemeProviderCustom>\n            </BrandContextProvider>\n        );\n    }\n}\n\nfunction buildContextApiUrl() {\n    return `http://${(process as any).env.CONTEXTAPI}/api/Context`;\n}\n//Este HOC deve gerar uma função que deve ser exportada pela página do Next.\nexport function withNextGetServerSideProps(contextApiUrl?: string, fnAdditionalProps?: (ctx) => any) {\n    const qd = getQueryContextData(contextApiUrl ?? buildContextApiUrl());\n\n    return async function getServerSideProps(context) {\n        const addit = fnAdditionalProps ? await fnAdditionalProps(context) : {};\n        const hostname = getHostName(context.req).hostname;\n        const brand = brandResolver(await qd.getContextData(), hostname);\n        return {\n            props: { brand, hostname, ...addit }\n        };\n    };\n};\n"],"file":"index.js"}