"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _typeof=require("@babel/runtime/helpers/typeof");Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=void 0;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _styles=require("@material-ui/core/styles");var _moment2=_interopRequireDefault(require("moment"));var _propTypes=_interopRequireDefault(require("prop-types"));var _react=_interopRequireWildcard(require("react"));var _DayPickerRangeController=_interopRequireDefault(require("react-dates/lib/components/DayPickerRangeController"));var _styles2=require("../styles");function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap;var cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(obj===null||_typeof(obj)!=="object"&&typeof obj!=="function"){return{"default":obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj["default"]=obj;if(cache){cache.set(obj,newObj)}return newObj}var NUMBER_OF_MONTHS_SHOWN_ON_DESKTOP=2;var MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE=13;// precisa ser 13 pra contemplar um ano inteiro
var Calendar=function Calendar(_ref){var minDate=_ref.minDate,maxDate=_ref.maxDate,startDate=_ref.startDate,endDate=_ref.endDate,_onDatesChange=_ref.onDatesChange,isMobile=_ref.isMobile,classes=_ref.classes,_onFocusChange=_ref.onFocusChange,focus=_ref.focus,isOutsideRange=_ref.isOutsideRange;var _useState=(0,_react.useState)(focus),_useState2=(0,_slicedToArray2["default"])(_useState,2),focusedInput=_useState2[0],setFocusedInput=_useState2[1];var _useState3=(0,_react.useState)(startDate),_useState4=(0,_slicedToArray2["default"])(_useState3,2),dStart=_useState4[0],setStart=_useState4[1];var _useState5=(0,_react.useState)(endDate),_useState6=(0,_slicedToArray2["default"])(_useState5,2),dEnd=_useState6[0],setEnd=_useState6[1];var _useState7=(0,_react.useState)(NUMBER_OF_MONTHS_SHOWN_ON_DESKTOP),_useState8=(0,_slicedToArray2["default"])(_useState7,2),numberOfMonths=_useState8[0],setNumberOfMonths=_useState8[1];var setNumberOfMonthsBasedOnScreenTypeAndStartAndEndDates=(0,_react.useCallback)(function(isMobile,startDate,endDate){var todayMoment=(0,_moment2["default"])();if(isMobile){var startDateMoment=(0,_moment2["default"])(startDate);var startDateIsBeforeToday=startDateMoment.isBefore(todayMoment);if(startDateIsBeforeToday){var startDateDay=startDateMoment.date();var todayDay=todayMoment.date();var daysOffset=startDateDay>todayDay?1:0;var totalMonthsDistancePassed=todayMoment.diff(startDateMoment,"months");var totalNumberOfMonthsUsingPreviousStartDate=totalMonthsDistancePassed+MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE+daysOffset;setNumberOfMonths(totalNumberOfMonthsUsingPreviousStartDate)}else{var endDateMoment=(0,_moment2["default"])(endDate);var totalMonthsDistance=endDateMoment.diff(todayMoment,"months");var totalNumberOfMonthsUsingFutureEndDate=totalMonthsDistance>=MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE?totalMonthsDistance+1:MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE;setNumberOfMonths(totalNumberOfMonthsUsingFutureEndDate)}}else{setNumberOfMonths(NUMBER_OF_MONTHS_SHOWN_ON_DESKTOP)}},[]);var getInitialVisibleMonthByStartDate=(0,_react.useCallback)(function(){if(isMobile){return minDate||(0,_moment2["default"])()}if(startDate){var todayMoment=(0,_moment2["default"])();var result=todayMoment.isBefore(startDate)?startDate:todayMoment;return result}return minDate||(0,_moment2["default"])()},[startDate]);var isOutsideRangeVerification=(0,_react.useCallback)(function(day){var _moment,_defaultMinDate;var onlyStartDateIsFilled=startDate&&!endDate;var todayMoment=(0,_moment2["default"])();var startDateIsNotBeforeToday=((_moment=(0,_moment2["default"])(startDate))===null||_moment===void 0?void 0:_moment.diff(todayMoment))>=0;if(onlyStartDateIsFilled&&startDateIsNotBeforeToday){var defaultOutsideRange=330;if(isOutsideRange===undefined||isOutsideRange===null){isOutsideRange=defaultOutsideRange}var maxDateBasedOnStartDate=(0,_moment2["default"])(startDate).add(isOutsideRange,"days");var isNotAfterStartDate=(day===null||day===void 0?void 0:day.diff(startDate))<=0;var isAfterMaxDateBasedOnStartDate=(maxDateBasedOnStartDate===null||maxDateBasedOnStartDate===void 0?void 0:maxDateBasedOnStartDate.diff(day))<0;return isNotAfterStartDate||isAfterMaxDateBasedOnStartDate}var defaultMinDate=(0,_moment2["default"])().add(1,"days").startOf("day");if(minDate!==undefined){defaultMinDate=minDate}var isBeforeMinDate=((_defaultMinDate=defaultMinDate)===null||_defaultMinDate===void 0?void 0:_defaultMinDate.diff(day))>0;var isAfterMaxDate=(maxDate===null||maxDate===void 0?void 0:maxDate.diff(day))<0;return isBeforeMinDate||isAfterMaxDate},[minDate,maxDate,startDate,endDate]);var renderDay=function renderDay(day){var tomorrowDay=(0,_moment2["default"])().add(1,"days").format("YYYY-MM-DD");var currentDay=day.format("YYYY-MM-DD");var startDateIsNotBeforeToday=tomorrowDay===currentDay;return startDateIsNotBeforeToday?/*#__PURE__*/_react["default"].createElement("div",{className:"DayPicker__firstDayUnlockedMobileContainer"},/*#__PURE__*/_react["default"].createElement("div",{className:"DayPicker__firstDayUnlockedMobile"},day.format("D"))):day.format("D")};(0,_react.useEffect)(function(){setNumberOfMonthsBasedOnScreenTypeAndStartAndEndDates(isMobile,startDate,endDate)},[isMobile,startDate,endDate,setNumberOfMonthsBasedOnScreenTypeAndStartAndEndDates]);(0,_react.useEffect)(function(){setStart(startDate);setEnd(endDate)},[startDate,endDate]);(0,_react.useEffect)(function(){setStart(startDate);setEnd(endDate)},[startDate,endDate]);return/*#__PURE__*/_react["default"].createElement("div",{className:classes.root},/*#__PURE__*/_react["default"].createElement(_DayPickerRangeController["default"],{renderDayContents:renderDay,minDate:minDate,maxDate:maxDate,startDate:dStart,endDate:dEnd,onDatesChange:function onDatesChange(_ref2){var startDate=_ref2.startDate,endDate=_ref2.endDate;setStart(startDate);setEnd(endDate);_onDatesChange({startDate:startDate,endDate:endDate})},focusedInput:focusedInput,onFocusChange:function onFocusChange(e){var focus=!e?"startDate":"endDate";setFocusedInput(focus);_onFocusChange(focus)},numberOfMonths:numberOfMonths,initialVisibleMonth:getInitialVisibleMonthByStartDate,orientation:isMobile?"verticalScrollable":"horizontal",isOutsideRange:isOutsideRangeVerification})," ")};Calendar.propTypes={onDateChange:_propTypes["default"].func,isMobile:_propTypes["default"].bool,startDate:_propTypes["default"].date,endDate:_propTypes["default"].date,isOutsideRange:_propTypes["default"].number};var _default=(0,_styles.withStyles)(_styles2.styles,{withTheme:true})(Calendar);exports["default"]=_default;
//# sourceMappingURL=Calendar2days.js.map