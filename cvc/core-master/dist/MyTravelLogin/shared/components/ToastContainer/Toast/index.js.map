{"version":3,"sources":["../../../../../../src/MyTravelLogin/shared/components/ToastContainer/Toast/index.tsx"],"names":["TransitionLeft","props","Toast","message","key","width","removeToast","open","setOpen","isMobile","undefined","transition","setTransition","timer","setTimeout","id","clearTimeout","classes","type","container","toastWrapper","title","description","closeButton","withWidth"],"mappings":"oZAAA,qDACA,iDACA,wDACA,oFACA,4EACA,sEACA,+E,o/BAQA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAA4B,CAC/C,mBAAO,gCAAC,iBAAD,6BAAWA,KAAX,EAAkB,SAAS,CAAC,MAA5B,GACV,CAFD,CAIA,GAAMC,CAAAA,KAA2B,CAAG,QAA9BA,CAAAA,KAA8B,MAAyC,IAAtCC,CAAAA,OAAsC,MAAtCA,OAAsC,CAA7BC,GAA6B,MAA7BA,GAA6B,CAAvBC,KAAuB,MAAvBA,KAAuB,CACzE,cAAwB,qBAAxB,CAAQC,WAAR,WAAQA,WAAR,CACA,cAAwB,oBAAS,KAAT,CAAxB,wDAAOC,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,QAAQ,CAAG,2BAAY,IAAZ,CAAiBJ,KAAjB,CAAjB,CACA,eAAoC,oBAA2DK,SAA3D,CAApC,yDAAOC,UAAP,eAAmBC,aAAnB,eAEA,qBAAU,UAAM,CACZ,GAAIT,OAAJ,CAAa,CACTS,aAAa,CAAC,iBAAMZ,CAAAA,cAAN,CAAD,CAAb,CACAQ,OAAO,CAAC,IAAD,CAAP,CACA,GAAMK,CAAAA,KAAK,CAAGC,UAAU,CAAC,UAAM,CAC3BR,WAAW,CAACH,OAAO,CAACY,EAAT,CAAX,CACAP,OAAO,CAAC,KAAD,CACV,CAHuB,CAGrB,IAHqB,CAAxB,CAKA,MAAO,WAAM,CACTQ,YAAY,CAACH,KAAD,CACf,CACJ,CACJ,CAbD,CAaG,CAACP,WAAD,CAAcH,OAAO,CAACY,EAAtB,CAbH,EAeA,GAAME,CAAAA,OAAO,CAAG,uBAAU,CAACC,IAAI,CAAEf,OAAO,CAACe,IAAR,EAAgB,SAAvB,CAAkCT,QAAQ,CAACA,QAA3C,CAAV,CAAhB,CAEA,mBACI,gCAAC,oBAAD,EACI,GAAG,CAAEL,GADT,CAEI,IAAI,CAAEG,IAFV,CAGI,mBAAmB,CAAEI,UAHzB,CAII,gBAAgB,CAAE,IAJtB,eAMI,uCAAK,SAAS,CAAEM,OAAO,CAACE,SAAxB,eACI,uCAAK,SAAS,CAAEF,OAAO,CAACG,YAAxB,eACI,8CAASjB,OAAO,CAACkB,KAAjB,CADJ,CAEKlB,OAAO,CAACmB,WAAR,eAAuB,qCAAG,SAAS,CAAEL,OAAO,CAACK,WAAtB,MAAqCnB,OAAO,CAACmB,WAA7C,CAF5B,CADJ,cAMI,0CACI,SAAS,CAAEL,OAAO,CAACM,WADvB,CAEI,OAAO,CAAE,yBAAMjB,CAAAA,WAAW,CAACH,OAAO,CAACY,EAAT,CAAjB,CAFb,CAGI,IAAI,CAAC,QAHT,eAII,gCAAC,2BAAD,MAJJ,CANJ,CANJ,CAqBP,CA7CD,C,aA+Ce,GAACS,qBAAD,iBAAc,gBAAKtB,KAAL,CAAd,C","sourcesContent":["import React, { useEffect, useState, memo } from \"react\";\nimport { ToastMessage, useToast } from \"../../../../contexts/Toast\";\nimport useStyles from \"./styles\";\nimport CloseButtonIcon from \"../../icons/CloseButtonIcon\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Slide, { SlideProps } from \"@material-ui/core/Slide\";\nimport withWidth, { isWidthDown, WithWidth } from \"@material-ui/core/withWidth\";\ninterface ToastProps extends WithWidth{\n    message: ToastMessage;\n    key: string;\n}\n\ntype TransitionProps = Omit<SlideProps, \"direction\">;\n\nconst TransitionLeft = (props: TransitionProps) => {\n    return <Slide {...props} direction=\"left\" />;\n};\n\nconst Toast: React.FC<ToastProps> = ({ message, key , width}: ToastProps) => {\n    const { removeToast } = useToast();\n    const [open, setOpen] = useState(false);\n    const isMobile = isWidthDown(\"sm\",width);\n    const [transition, setTransition] = useState<React.ComponentType<TransitionProps> | undefined>(undefined);\n\n    useEffect(() => {\n        if (message) {\n            setTransition(() => TransitionLeft);\n            setOpen(true);\n            const timer = setTimeout(() => {\n                removeToast(message.id);\n                setOpen(false);\n            }, 6000);\n\n            return () => {\n                clearTimeout(timer);\n            };\n        }\n    }, [removeToast, message.id]);\n\n    const classes = useStyles({type: message.type || \"success\", isMobile:isMobile});\n\n    return (\n        <Snackbar\n            key={key}\n            open={open}\n            TransitionComponent={transition}\n            autoHideDuration={6000}\n        >\n            <div className={classes.container}>\n                <div className={classes.toastWrapper}>\n                    <strong>{message.title}</strong>\n                    {message.description && <p className={classes.description}> {message.description}</p>}\n                </div>\n\n                <button\n                    className={classes.closeButton}\n                    onClick={() => removeToast(message.id)}\n                    type=\"button\">\n                    <CloseButtonIcon />\n                </button>\n            </div>\n        </Snackbar>\n    );\n};\n\nexport default (withWidth)()(memo(Toast));\n"],"file":"index.js"}