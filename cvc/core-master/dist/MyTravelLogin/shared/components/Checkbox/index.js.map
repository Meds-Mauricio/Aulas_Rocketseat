{"version":3,"sources":["../../../../../src/MyTravelLogin/shared/components/Checkbox/index.tsx"],"names":["Checkbox","name","value","label","rest","classes","errorMessageRef","inputRef","fieldName","defaultValue","registerField","error","defaultChecked","ref","getValue","current","checked","clearValue","setValue","display","marginTop","textCheckbox"],"mappings":"waAAA,qDACA,gFACA,kCACA,+EACA,wD,2hCAOA,GAAMA,CAAAA,QAAiC,CAAG,QAApCA,CAAAA,QAAoC,MAAsC,IAAnCC,CAAAA,IAAmC,MAAnCA,IAAmC,CAA7BC,KAA6B,MAA7BA,KAA6B,CAAtBC,KAAsB,MAAtBA,KAAsB,CAAZC,IAAY,0DAC5E,GAAMC,CAAAA,OAAO,CAAG,wBAAhB,CACA,GAAMC,CAAAA,eAAe,CAAG,kBAAyB,IAAzB,CAAxB,CACA,GAAMC,CAAAA,QAAQ,CAAG,kBAAY,IAAZ,CAAjB,CACA,cAA0D,mBAASN,IAAT,CAA1D,CAAQO,SAAR,WAAQA,SAAR,CAAmBC,YAAnB,WAAmBA,YAAnB,CAAiCC,aAAjC,WAAiCA,aAAjC,CAAgDC,KAAhD,WAAgDA,KAAhD,CAEA,GAAMC,CAAAA,cAAc,CAAGH,YAAY,GAAKP,KAAxC,CAEA,qBAAU,UAAM,CACZQ,aAAa,CAAC,CACVT,IAAI,CAAEO,SADI,CAEVK,GAAG,CAAEN,QAFK,CAGVO,QAAQ,CAAE,kBAACD,GAAD,CAAS,CACf,MAAOA,CAAAA,GAAG,CAACE,OAAJ,CAAYC,OACtB,CALS,CAMVC,UAAU,CAAE,oBAACJ,GAAD,CAAS,CACjBA,GAAG,CAACE,OAAJ,CAAYC,OAAZ,CAAsBJ,cACzB,CARS,CASVM,QAAQ,CAAE,kBAACL,GAAD,CAAMX,KAAN,CAAgB,CACtBW,GAAG,CAACE,OAAJ,CAAYC,OAAZ,CAAsBd,KACzB,CAXS,CAAD,CAahB,CAdD,CAcG,CAACO,YAAD,CAAeD,SAAf,CAA0BE,aAA1B,CAAyCE,cAAzC,CAdH,EAgBA,mBACI,uCAAK,KAAK,CAAE,CAACO,OAAO,CAAE,MAAV,CAAmBC,SAAS,CAAE,EAA9B,CAAZ,eACI,kEACI,cAAc,CAAER,cADpB,CAEI,GAAG,CAAEL,QAFT,CAGI,KAAK,CAAEL,KAHX,CAII,IAAI,CAAC,UAJT,CAKI,EAAE,CAAEM,SALR,EAMQJ,IANR,EADJ,cAUI,gCAAC,sBAAD,EAAY,OAAO,CAAC,WAApB,CAAgC,SAAS,CAAEC,OAAO,CAACgB,YAAnD,CAAiE,GAAG,CAAEb,SAAtE,EACKL,KADL,CAEKQ,KAAK,eACF,gCAAC,6BAAD,EAAmB,GAAG,CAAEL,eAAxB,CAAyC,OAAO,KAAhD,CAAiD,OAAO,CAAEK,KAA1D,EAHR,CAVJ,cAgBI,2CAhBJ,CAoBP,CA7CD,C,aA+CeX,Q","sourcesContent":["import React, { ReactNode, useEffect, useRef } from \"react\"\nimport Typography from \"@material-ui/core/Typography\";\nimport { useField } from \"@unform/core\";\nimport MessageValidation from \"../MessageValidation\";\nimport useStyles from  \"./styles\"\n\ninterface CheckboxProps {\n    name: string\n    value: any\n    label: string | ReactNode\n}\nconst Checkbox: React.FC<CheckboxProps> = ({ name, value, label, ...rest }) =>  {\n    const classes = useStyles()\n    const errorMessageRef = useRef<HTMLInputElement>(null);\n    const inputRef = useRef<any>(null)\n    const { fieldName, defaultValue, registerField, error } = useField(name)\n\n    const defaultChecked = defaultValue === value\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef,\n            getValue: (ref) => {\n                return ref.current.checked\n            },\n            clearValue: (ref) => {\n                ref.current.checked = defaultChecked\n            },\n            setValue: (ref, value) => {\n                ref.current.checked = value\n            },\n        })\n    }, [defaultValue, fieldName, registerField, defaultChecked])\n\n    return (\n        <div style={{display: \"flex\",  marginTop: 10 }}>\n            <input\n                defaultChecked={defaultChecked}\n                ref={inputRef}\n                value={value}\n                type=\"checkbox\"\n                id={fieldName}\n                {...rest}\n            />\n\n            <Typography variant=\"subtitle2\" className={classes.textCheckbox} key={fieldName}>\n                {label}\n                {error && (\n                    <MessageValidation ref={errorMessageRef} isError message={error} />\n                )}\n            </Typography>\n            <div />\n\n        </div>\n    )\n}\n\nexport default Checkbox\n"],"file":"index.js"}