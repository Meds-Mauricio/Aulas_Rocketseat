{"version":3,"sources":["../../../../../src/MyTravelLogin/shared/components/ModalLogin/index.tsx"],"names":["ModalLogin","newLogin","textBtnLogin","isMobile","open","setOpen","props","saveOnGa","classes","isRegisterUserProfileStep","setIsRegisterUserProfileStepToggle","logout","closeModal","event","reason","category","action","label","window","hj","noReload","openModal","login","loginBtn","newLoginBtn","loginBtnTxt"],"mappings":"mlBACA,qDACA,uCACA,+DAEA,kDACA,0DACA,oDACA,uEACA,wD,o/BATA,sDAuBA,GAAMA,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAA0C,IAAvCC,CAAAA,QAAuC,MAAvCA,QAAuC,CAA7BC,YAA6B,MAA7BA,YAA6B,CAAfC,QAAe,MAAfA,QAAe,CACpF,cAAwB,oBAAS,KAAT,CAAxB,wDAAOC,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,KAAK,CAAG,CAAEH,QAAQ,CAARA,QAAF,CAAd,CACA,WAAqB,wBAArB,CAAQI,QAAR,QAAQA,QAAR,CACA,GAAMC,CAAAA,OAAO,CAAG,uBAAUF,KAAV,CAAhB,CACA,uBAA0E,uCAA1E,CAAQG,yBAAR,oBAAQA,yBAAR,CAAmCC,kCAAnC,oBAAmCA,kCAAnC,CACA,wBAAmB,qCAAnB,CAAQC,MAAR,qBAAQA,MAAR,CAEA,GAAMC,CAAAA,UAAU,CAAG,qIAAY,iBAAMC,KAAN,CAAaC,MAAb,kIAC3BP,QAAQ,CAAC,CACLM,KAAK,CAAE,cADF,CAELE,QAAQ,CAAE,SAFL,CAGLC,MAAM,CAAE,yBAHH,CAILC,KAAK,CAAE,+BAJF,CAAD,CAAR,CAMA,GAAIb,IAAI,WAAIc,MAAJ,4BAAI,QAAQC,EAApB,CAAwB,CACpBD,MAAM,CAACC,EAAP,CAAU,OAAV,CAAmB,6BAAnB,CACH,CAT0B,KAUvBL,MAAM,GAAK,eAVY,8BAWpBL,yBAXoB,8CAYbE,CAAAA,MAAM,CAAC,CACTS,QAAQ,CAAE,IADD,CAAD,CAZO,QAenBV,kCAAkC,CAAC,KAAD,CAAlC,CACAL,OAAO,CAAC,CAACD,IAAF,CAAP,CAhBmB,sCAmBvBC,OAAO,CAAC,CAACD,IAAF,CAAP,CAnBuB,sDAAZ,kEAsBhB,CAACA,IAAD,CAAOK,yBAAP,CAtBgB,CAAnB,CAwBA,GAAMY,CAAAA,SAAS,CAAG,uBAAY,UAAM,CAChChB,OAAO,CAAC,IAAD,CACV,CAFiB,CAEf,EAFe,CAAlB,CAIA,mBACI,6EACI,uCAAK,SAAS,WAAKG,OAAO,CAACc,KAAb,CAAd,eACI,qCAAG,OAAO,CAAED,SAAZ,CAAuB,SAAS,CAAE,4BAAWb,OAAO,CAACe,QAAnB,oCAC7Bf,OAAO,CAACgB,WADqB,CACPvB,QADO,EAAlC,eAGI,gCAAC,gBAAD,EAAY,SAAS,CAAEO,OAAO,CAACiB,WAA/B,EACKvB,YADL,CAHJ,CADJ,CADJ,cAUI,gCAAC,WAAD,EAAO,IAAI,CAAEE,IAAb,CAAmB,OAAO,CAAEQ,UAA5B,CAAwC,mBAAiB,aAAzD,eACI,6EACI,gCAAC,YAAD,EAAe,YAAY,CAAE,8BAAMP,CAAAA,OAAO,CAAC,CAACD,IAAF,CAAb,CAA7B,CAAmD,OAAO,KAA1D,EADJ,CADJ,CAVJ,CAkBP,CAvDD,C,aAyDeJ,U","sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport React, { useCallback, useState } from \"react\";\nimport { Modal, Typography } from \"@material-ui/core\";\nimport classnames from \"classnames\"\nimport Cookies from \"universal-cookie\";\nimport MyTravelLogin from \"../../..\";\nimport { useProfileContext } from \"../../../../ProfileContext\";\nimport { useUserDataContext } from \"../../../../UserContext\";\nimport useGa from \"../../../../utils/useGa\";\nimport useStyles from \"./styles\";\n\ninterface ModalLoginProps {\n    newLogin?: string;\n    children?: React.ReactNode;\n    textBtnLogin: string;\n    isMobile?: boolean;\n}\ndeclare global {\n    interface Window {\n        hj: any;\n    }\n}\n\nconst ModalLogin: React.FC<ModalLoginProps> = ({ newLogin, textBtnLogin, isMobile }) => {\n    const [open, setOpen] = useState(false);\n    const props = { isMobile };\n    const { saveOnGa } = useGa();\n    const classes = useStyles(props);\n    const { isRegisterUserProfileStep, setIsRegisterUserProfileStepToggle } = useProfileContext();\n    const { logout } = useUserDataContext();\n\n    const closeModal = useCallback(async(event, reason) => {\n        saveOnGa({\n            event: \"header_event\",\n            category: \"Account\",\n            action: \"Click on header options\",\n            label: \"click on header item :: login\"\n        })\n        if (open && window?.hj) {\n            window.hj(\"event\", \"viewed_homepage_modal_login\");\n        }\n        if (reason === \"backdropClick\" ) {\n            if(isRegisterUserProfileStep) {\n                await logout({\n                    noReload: true\n                })\n                setIsRegisterUserProfileStepToggle(false)\n                setOpen(!open);\n            }\n        }else {\n            setOpen(!open);\n        }\n\n    }, [open, isRegisterUserProfileStep]);\n\n    const openModal = useCallback(() => {\n        setOpen(true)\n    }, [])\n\n    return (\n        <>\n            <div className={`${classes.login}`}>\n                <a onClick={openModal} className={classnames(classes.loginBtn, {\n                    [classes.newLoginBtn]: newLogin\n                })}>\n                    <Typography className={classes.loginBtnTxt}>\n                        {textBtnLogin}\n                    </Typography>\n                </a>\n            </div>\n            <Modal open={open} onClose={closeModal} aria-describedby=\"modal-login\">\n                <>\n                    <MyTravelLogin onCloseClick={() => setOpen(!open)} isModal />\n                </>\n\n            </Modal>\n        </>\n    )\n}\n\nexport default ModalLogin;\n"],"file":"index.js"}