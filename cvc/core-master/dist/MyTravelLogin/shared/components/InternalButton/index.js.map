{"version":3,"sources":["../../../../../src/MyTravelLogin/shared/components/InternalButton/index.tsx"],"names":["InternalButton","text","isSocialNetwork","type","Icon","icon","handlerClick","classes","isLoading","setIsLoading","handlerOnClick","socialButton","btnLogin"],"mappings":"qfAAA,qDACA,wDACA,uCACA,kE,o/BAUA,GAAMA,CAAAA,cAAqC,CAAG,QAAxCA,CAAAA,cAAwC,MAM3B,IALfC,CAAAA,IAKe,MALfA,IAKe,CAJfC,eAIe,MAJfA,eAIe,CAHfC,IAGe,MAHfA,IAGe,CAFTC,IAES,MAFfC,IAEe,CADfC,YACe,MADfA,YACe,CACf,GAAMC,CAAAA,OAAO,CAAG,uBAAU,EAAV,CAAhB,CACA,cAAkC,oBAAS,KAAT,CAAlC,wDAAOC,SAAP,eAAkBC,YAAlB,eACA,GAAMC,CAAAA,cAAc,+GAAG,uIACnBD,YAAY,CAAC,IAAD,CAAZ,CADmB,IAEfH,YAFe,8CAGTA,CAAAA,YAAY,EAHH,QAKnBG,YAAY,CAAC,KAAD,CAAZ,CALmB,qDAAH,kBAAdC,CAAAA,cAAc,yCAApB,CAQA,GAAIR,eAAe,EAAIE,IAAvB,CAA6B,CACzB,mBACI,wDACI,gCAAC,kBAAD,EACI,SAAS,CAAEG,OAAO,CAACI,YADvB,CAEI,KAAK,CAAEH,SAAS,CAAG,EAAH,CAAQP,IAF5B,CAGI,IAAI,CAAC,QAHT,CAII,OAAO,CAAC,UAJZ,CAKI,IAAI,CAAEO,SAAS,cAAG,gCAAC,sBAAD,EAAkB,IAAI,CAAE,EAAxB,CAA4B,KAAK,CAAC,SAAlC,EAAH,cAAoD,gCAAC,IAAD,MALvE,CAMI,YAAY,CAAC,QANjB,CAOI,SAAS,KAPb,CAQI,OAAO,CAAEE,cARb,EADJ,CAaP,CAfD,IAeO,CACH,mBACI,gCAAC,YAAD,EACI,SAAS,CAAEH,OAAO,CAACK,QADvB,CAEI,IAAI,CAAC,QAFT,CAGI,KAAK,CAAC,SAHV,CAII,OAAO,CAAC,WAJZ,CAKI,SAAS,KALb,CAMI,IAAI,CAAET,IAAI,EAAI,QANlB,CAOI,IAAI,CAAC,EAPT,CAQI,OAAO,CAAEO,cARb,EASEF,SAAS,cAAG,gCAAC,sBAAD,EAAkB,IAAI,CAAE,EAAxB,CAA4B,KAAK,CAAC,SAAlC,EAAH,CAAoDP,IAT/D,CAYP,CACJ,CA/CD,C,aAiDeD,c","sourcesContent":["import React, { useState } from \"react\";\nimport useStyles from \"./styles\";\nimport { Button as MaterialButton, CircularProgress } from \"@material-ui/core\";\nimport Button from \"../../../../Button\";\n\ninterface ButtonProps {\n    text: any;\n    type?: string;\n    isSocialNetwork?: boolean;\n    icon?: React.FC;\n    handlerClick?: () => Promise<any> | undefined | void;\n}\n\nconst InternalButton: React.FC<ButtonProps> = ({\n    text,\n    isSocialNetwork,\n    type,\n    icon: Icon,\n    handlerClick,\n}: ButtonProps) => {\n    const classes = useStyles({});\n    const [isLoading, setIsLoading] = useState(false);\n    const handlerOnClick = async () => {\n        setIsLoading(true);\n        if (handlerClick) {\n            await handlerClick()\n        }\n        setIsLoading(false);\n    };\n\n    if (isSocialNetwork && Icon) {\n        return (\n            <div>\n                <Button\n                    className={classes.socialButton}\n                    label={isLoading ? \"\" : text}\n                    size=\"medium\"\n                    variant=\"outlined\"\n                    icon={isLoading ? <CircularProgress size={24} color=\"primary\" /> : <Icon />}\n                    iconPosition=\"before\"\n                    fullWidth\n                    onClick={handlerOnClick}\n                />\n            </div>\n        );\n    } else {\n        return (\n            <MaterialButton\n                className={classes.btnLogin}\n                size=\"medium\"\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth\n                type={type || \"button\"}\n                href=\"\"\n                onClick={handlerOnClick}\n            >{isLoading ? <CircularProgress size={24} color=\"inherit\" /> : text}</MaterialButton>\n        );\n\n    }\n};\n\nexport default InternalButton;\n\n\n\n"],"file":"index.js"}