{"version":3,"sources":["../../../src/MyTravelLogin/contexts/AmplifyContext.tsx"],"names":["AuthAmplifyContext","AuthAmplifyProvider","children","authAmplify","setAuthAmplify","amplifyPwd","setAmplifyPwd","temp","crypto","randomBytes","toString","ctx","BrandContext","amplifyTempPwd","brand","useAuthAmplifyContext","context"],"mappings":"iYAAA,sDACA,qDACA,gD,o/BAUA,GAAMA,CAAAA,kBAAkB,cAAG,yBAAmC,EAAnC,CAA3B,CAEA,GAAMC,CAAAA,mBAA6B,CAAG,QAAhCA,CAAAA,mBAAgC,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACpD,cAAsC,oBAAiB,EAAjB,CAAtC,wDAAOC,WAAP,eAAoBC,cAApB,eACA,eAAoC,oBAAiB,EAAjB,CAApC,yDAAOC,UAAP,eAAmBC,aAAnB,eACA,GAAMC,CAAAA,IAAI,CAAGC,mBAAOC,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,CAAb,CACA,GAAMC,CAAAA,GAAG,CAAG,sBAAWC,0BAAX,CAAZ,CACA,GAAMC,CAAAA,cAAc,WAAON,IAAP,aAAeI,GAAG,CAACG,KAAnB,CAApB,CACA,mBACI,gCAAC,kBAAD,CAAoB,QAApB,EAA6B,KAAK,CAAE,CAAEX,WAAW,CAAXA,WAAF,CAAeC,cAAc,CAAdA,cAAf,CAA+BS,cAAc,CAAdA,cAA/B,CAA+CR,UAAU,CAAVA,UAA/C,CAA2DC,aAAa,CAAbA,aAA3D,CAApC,EACKJ,QADL,CAIP,CAXD,C,gDAaA,QAASa,CAAAA,qBAAT,EAAsD,CAClD,GAAMC,CAAAA,OAAO,CAAG,sBAAWhB,kBAAX,CAAhB,CACA,MAAOgB,CAAAA,OACV","sourcesContent":["import crypto from \"crypto\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { BrandContext } from \"../../BrandContext\";\n\ninterface IAuthAmplifyContext {\n    authAmplify: string;\n    setAuthAmplify(isAuthAmplify: string): void;\n    amplifyTempPwd: string;\n    amplifyPwd?: string;\n    setAmplifyPwd(pwd: string): void;\n}\n\nconst AuthAmplifyContext = createContext<IAuthAmplifyContext>({} as IAuthAmplifyContext);\n\nconst AuthAmplifyProvider: React.FC = ({ children }) => {\n    const [authAmplify, setAuthAmplify] = useState<string>(\"\");\n    const [amplifyPwd, setAmplifyPwd] = useState<string>(\"\");\n    const temp = crypto.randomBytes(10).toString(\"hex\");\n    const ctx = useContext(BrandContext);\n    const amplifyTempPwd = (`${temp}@${ctx.brand}`);\n    return (\n        <AuthAmplifyContext.Provider value={{ authAmplify, setAuthAmplify, amplifyTempPwd, amplifyPwd, setAmplifyPwd }}>\n            {children}\n        </AuthAmplifyContext.Provider>\n    );\n};\n\nfunction useAuthAmplifyContext(): IAuthAmplifyContext {\n    const context = useContext(AuthAmplifyContext);\n    return context;\n}\n\nexport { AuthAmplifyProvider, useAuthAmplifyContext };\n"],"file":"AmplifyContext.js"}