{"version":3,"sources":["../../../src/MyTravelLogin/contexts/index.tsx"],"names":["LoginContext","LoginProvider","modal","closeClick","children","currentStep","isModal","setIsModal","onCloseClick","useLoginContext","context","AppProvider"],"mappings":"4WAAA,qDACA,wDACA,gDACA,gDACA,0CACA,8B,o/BAMA,GAAMA,CAAAA,YAAY,cAAG,yBAA6B,EAA7B,CAArB,CAEA,GAAMC,CAAAA,aAA4B,CAAG,QAA/BA,CAAAA,aAA+B,MAAmC,IAAhCC,CAAAA,KAAgC,MAAhCA,KAAgC,CAA1BC,UAA0B,MAA1BA,UAA0B,CAAfC,QAAe,MAAfA,QAAe,CACpE,oBAAsB,iCAAtB,CAAOC,WAAP,iBAAOA,WAAP,CACA,cAA8B,oBAAkBH,KAAlB,CAA9B,wDAAOI,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,YAAY,CAAG,uBAAY,UAAI,CACjC,GAAGH,WAAW,GAAK,aAAnB,CAAiC,CAC7BF,UAAU,EACb,CACJ,CAJoB,CAInB,CAACA,UAAD,CAAaE,WAAb,CAJmB,CAArB,CAKA,mBACI,gCAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAEC,OAAO,CAAPA,OAAF,CAAWE,YAAY,CAAZA,YAAX,CAA9B,EACKJ,QADL,CAIP,CAbD,CAeO,QAASK,CAAAA,eAAT,EAAyC,CAC5C,GAAMC,CAAAA,OAAO,CAAG,sBAAWV,YAAX,CAAhB,CACA,MAAOU,CAAAA,OACV,CAED,GAAMC,CAAAA,WAA0B,CAAG,QAA7BA,CAAAA,WAA6B,WAAGL,CAAAA,OAAH,OAAGA,OAAH,CAAWE,YAAX,OAAWA,YAAX,CAAwBJ,QAAxB,OAAwBA,QAAxB,oBAC/B,gCAAC,6BAAD,mBACI,gCAAC,+BAAD,mBACI,gCAAC,mCAAD,mBACI,gCAAC,gCAAD,mBACI,gCAAC,aAAD,EAAe,KAAK,CAAEE,OAAtB,CAA+B,UAAU,CAAEE,YAA3C,eACI,gCAAC,oBAAD,MACKJ,QADL,CADJ,CADJ,CADJ,CADJ,CADJ,CAD+B,CAAnC,C,aAiBeO,W","sourcesContent":["import React, { createContext, useCallback, useContext, useState } from \"react\";\nimport { UserDataProvider } from \"../shared/hooks/UserContext\";\nimport { AuthAmplifyProvider } from \"./AmplifyContext\";\nimport { LoadingProvider } from \"./LoadingContext\";\nimport { RenderStepsProvider, useRenderSteps } from \"./renderSteps\";\nimport { ToastProvider } from \"./Toast\";\n\ninterface iLoginContext{\n    isModal:boolean;\n    onCloseClick():void\n}\nconst LoginContext = createContext<iLoginContext>({} as iLoginContext);\n\nconst LoginProvider: React.FC<any> = ({ modal,closeClick,children }) => {\n    const {currentStep} = useRenderSteps()\n    const [isModal, setIsModal] = useState<boolean>(modal);\n    const onCloseClick = useCallback(()=>{\n        if(currentStep !== \"AlmostThere\"){\n            closeClick();\n        }\n    },[closeClick, currentStep]);\n    return (\n        <LoginContext.Provider value={{ isModal, onCloseClick }}>\n            {children}\n        </LoginContext.Provider>\n    );\n};\n\nexport function useLoginContext():iLoginContext {\n    const context = useContext(LoginContext);\n    return context;\n}\n\nconst AppProvider: React.FC<any> = ({ isModal,onCloseClick,children }) => (\n    <UserDataProvider>\n        <LoadingProvider>\n            <AuthAmplifyProvider>\n                <RenderStepsProvider>\n                    <LoginProvider modal={isModal} closeClick={onCloseClick}>\n                        <ToastProvider>\n                            {children}\n                        </ToastProvider>\n                    </LoginProvider>\n                </RenderStepsProvider>\n            </AuthAmplifyProvider>\n        </LoadingProvider>\n    </UserDataProvider>\n\n);\n\nexport default AppProvider;\n"],"file":"index.js"}