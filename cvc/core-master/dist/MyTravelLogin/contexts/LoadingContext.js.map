{"version":3,"sources":["../../../src/MyTravelLogin/contexts/LoadingContext.tsx"],"names":["LoadingContext","LoadingProvider","children","loading","setloading","setLoading","isLoading","useLoadingContext","context"],"mappings":"qXAAA,qD,o/BAOA,GAAMA,CAAAA,cAAc,cAAG,yBAA+B,EAA/B,CAAvB,CAEA,GAAMC,CAAAA,eAAyB,CAAG,QAA5BA,CAAAA,eAA4B,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAChD,cAA8B,oBAAkB,KAAlB,CAA9B,wDAAOC,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,UAAU,CAAG,uBAAY,SAACC,SAAD,CAAa,CACxCF,UAAU,CAACE,SAAD,CACb,CAFkB,CAEjB,EAFiB,CAAnB,CAIA,mBACI,gCAAC,cAAD,CAAgB,QAAhB,EAAyB,KAAK,CAAE,CAAEH,OAAO,CAAPA,OAAF,CAAWE,UAAU,CAAVA,UAAX,CAAhC,EACKH,QADL,CAIP,CAZD,C,wCAcA,QAASK,CAAAA,iBAAT,EAA8C,CAC1C,GAAMC,CAAAA,OAAO,CAAG,sBAAWR,cAAX,CAAhB,CACA,MAAOQ,CAAAA,OACV","sourcesContent":["import React, { createContext , useCallback, useContext, useState } from \"react\";\n\ninterface ILoadingContext {\n    loading: boolean;\n    setLoading( isLoading: boolean ): void;\n}\n\nconst LoadingContext = createContext<ILoadingContext>({} as ILoadingContext);\n\nconst LoadingProvider: React.FC = ({ children }) => {\n    const [loading, setloading] = useState<boolean>(false);\n\n    const setLoading = useCallback((isLoading)=>{\n        setloading(isLoading);\n    },[]);\n\n    return (\n        <LoadingContext.Provider value={{ loading, setLoading }}>\n            {children}\n        </LoadingContext.Provider>\n    );\n};\n\nfunction useLoadingContext(): ILoadingContext {\n    const context = useContext(LoadingContext);\n    return context;\n}\n\nexport { LoadingProvider, useLoadingContext };\n"],"file":"LoadingContext.js"}