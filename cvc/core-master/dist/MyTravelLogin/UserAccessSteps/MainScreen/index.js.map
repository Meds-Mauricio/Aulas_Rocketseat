{"version":3,"sources":["../../../../src/MyTravelLogin/UserAccessSteps/MainScreen/index.tsx"],"names":["MainScreen","intl","onCloseClick","isModal","placeHolderEmail","id","placeHolderErrorEmail","formatMessage","placeHolderEmailRequired","errorWarningTitle","errorWarningDescription","formRef","saveOnGa","renderNewStep","setPreviousStep","setAuthAmplify","setUser","setLoading","loading","ctx","BrandContext","addToast","classes","deleteCognitoServiceProvider","setProfileData","submitForm","formData","current","setErrors","schema","Yup","object","shape","email","string","required","validate","abortEarly","event","category","action","label","encodeURIComponent","api","get","brand","response","user","data","found","nextStep","emailConfirmed","type","title","description","ValidationError","root","inputWrapper","orSeparateWrapper","orSeparate"],"mappings":"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","sourcesContent":["import React, { useRef, useContext, useCallback, useEffect } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { FormHandles } from \"@unform/core\";\nimport { injectIntl, IntlShape } from \"react-intl\";\nimport * as Yup from \"yup\";\nimport { BrandContext } from \"../../../BrandContext\";\nimport { useProfileContext } from \"../../../ProfileContext\";\nimport { IProfileData } from \"../../../ProfileContext/types\";\nimport useCognitoIdTokenUpdate from \"../../../UserArea/CognitoIdTokenUpdate\";\nimport useGa from \"../../../utils/useGa\";\nimport { useAuthAmplifyContext } from \"../../contexts/AmplifyContext\";\nimport { useLoadingContext } from \"../../contexts/LoadingContext\";\nimport { useRenderSteps } from \"../../contexts/renderSteps\";\nimport { useToast } from \"../../contexts/Toast\";\nimport BtnsSocialLogin from \"../../shared/components/BtnsSocialLogin\";\nimport Form from \"../../shared/components/Form\";\nimport HeaderLogin from \"../../shared/components/HeaderLogin\";\nimport Input from \"../../shared/components/Input\";\nimport InternalButton from \"../../shared/components/InternalButton\";\nimport Loading from \"../../shared/components/Loading\";\nimport SubTitle from \"../../shared/components/SubTitle\";\nimport Terms from \"../../shared/components/Terms\";\nimport Title from \"../../shared/components/Title\";\nimport { useUserData, IUserData } from \"../../shared/hooks/UserContext\";\nimport translate from \"../../shared/i18n/translate\";\nimport api from \"../../shared/services/api\";\nimport getValidationErrors from \"../../shared/utils/getValidationErrors\";\nimport useStyles from \"./styles\";\nimport { usersInProvider } from \"./utils\";\n\ninterface SubmitFormData {\n    email: string;\n    name?: string;\n    lastName?: string;\n    userExists: boolean;\n}\n\ninterface IInternalLogin {\n    intl: IntlShape;\n}\n\ninterface MainScreenProps extends IInternalLogin {\n    onCloseClick?(): void;\n    isModal?: boolean;\n}\n\nconst MainScreen: React.FC<MainScreenProps> = ({ intl, onCloseClick, isModal }) => {\n    const placeHolderEmail = translate({ id: \"MainScreen.placeholderEmail\" });\n    const placeHolderErrorEmail = intl.formatMessage({ id: \"MainScreen.placeHolderErrorEmail\" });\n    const placeHolderEmailRequired = intl.formatMessage({ id: \"MainScreen.placeHolderEmailRequired\" });\n    const errorWarningTitle = intl.formatMessage({ id: \"MainScreen.errorWarningTitle\" });\n    const errorWarningDescription = intl.formatMessage({ id: \"MainScreen.errorWarningDescription\" });\n    const formRef = useRef<FormHandles>(null);\n    const { saveOnGa } = useGa();\n\n    const { renderNewStep, setPreviousStep } = useRenderSteps();\n    const { setAuthAmplify } = useAuthAmplifyContext();\n    const { setUser } = useUserData();\n    const { setLoading, loading } = useLoadingContext();\n    const ctx = useContext(BrandContext);\n    const { addToast } = useToast();\n    const classes = useStyles({});\n    const { deleteCognitoServiceProvider } = useCognitoIdTokenUpdate();\n    const { setProfileData } = useProfileContext();\n    useEffect(() => {\n        deleteCognitoServiceProvider();\n        setProfileData({} as IProfileData)\n    }, []);\n\n    const submitForm = useCallback(async (formData: SubmitFormData) => {\n        try {\n            formRef.current?.setErrors({});\n\n            const schema = Yup.object().shape({\n                email: Yup.string()\n                    .email(placeHolderErrorEmail)\n                    .required(placeHolderEmailRequired)\n            });\n\n            await schema.validate(formData, {\n                abortEarly: false\n            });\n\n            saveOnGa({\n                event: \"login_event\",\n                category: \"Account\",\n                action: \"Form Login\",\n                label: \"login :: email\"\n            });\n\n            setUser(formData as IUserData);\n            setLoading(true);\n\n            let response;\n            try {\n                const email = encodeURIComponent(formData.email);\n                response = await api.get<SubmitFormData>(`/apigw/authentication/${ctx.brand}/user-exists?email=${email}`);\n                const user = usersInProvider(response.data.found);\n\n                setPreviousStep(\"MainScreen\");\n                if (user?.nextStep) {\n                    if (!user.emailConfirmed) {\n                        setAuthAmplify(\"confirmSignUp\");\n                    }\n\n                    renderNewStep(user.nextStep);\n                } else {\n                    renderNewStep(\"ConfirmMainScreen\");\n                }\n            } catch (err) {\n                saveOnGa({\n                    event: \"fluxo_de_cadastro\",\n                    category: \"Account\",\n                    action: \"Registration\",\n                    label: \"alert :: email validation\"\n                });\n                addToast({\n                    type: \"error\",\n                    title: errorWarningTitle,\n                    description: errorWarningDescription\n                });\n            }\n\n            setLoading(false);\n        } catch (err) {\n            if (err instanceof Yup.ValidationError) {\n                formRef.current?.setErrors(getValidationErrors(err));\n\n            }\n        }\n    },\n    [addToast, ctx.brand, errorWarningDescription, errorWarningTitle, placeHolderEmailRequired, placeHolderErrorEmail, renderNewStep, setAuthAmplify, setLoading, setUser]);\n\n    return loading ? (\n        <Loading />\n    ) : (\n        <>\n            <HeaderLogin isModal={isModal} previousStep=\"MainScreen\" onCloseClick={onCloseClick} />\n            <div className={classes.root}>\n                <Form ref={formRef} handleSubmit={submitForm}>\n                    <Title>{translate({ id: \"MainScreen.title\" })}</Title>\n                    <SubTitle>{translate({ id: \"MainScreen.subtitle\" })}</SubTitle>\n                    <div className={classes.inputWrapper}>\n                        <Input name=\"email\" placeholderText={placeHolderEmail} />\n                    </div>\n\n                    <InternalButton type=\"submit\" text={translate({ id: \"MainScreen.btnLogin\" })} />\n\n                    <div className={classes.orSeparateWrapper}>\n                        <Typography variant=\"caption\" className={classes.orSeparate}>\n                            ou\n                        </Typography>\n                    </div>\n                    <BtnsSocialLogin />\n                </Form>\n            </div>\n            <Terms />\n        </>\n    );\n};\n\nexport default injectIntl(MainScreen);\n"],"file":"index.js"}