{"version":3,"sources":["../../../../src/MyTravelLogin/UserAccessSteps/ChangePassword/index.tsx"],"names":["ChangePassword","intl","onCloseClick","isModal","saveOnGa","classes","formRef","user","ctx","BrandContext","amplifyTempPwd","addToast","setPreviousStep","successToastMessageTitle","formatMessage","id","successToastMessageDescription","handleSubmit","data","event","category","action","label","current","setErrors","schema","Yup","object","shape","password","string","matches","confirmPassword","validate","abortEarly","Auth","signIn","email","then","response","changePassword","type","title","description","window","location","href","hosts","signOut","root","subTitle"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useEffect, useContext } from \"react\";\nimport { FormHandles } from \"@unform/core\";\nimport { Auth } from \"aws-amplify\";\nimport { IntlShape, injectIntl } from \"react-intl\";\nimport * as Yup from \"yup\";\nimport { BrandContext } from \"../../../BrandContext\";\nimport { Redirect } from \"../../../BrandContext/amplify/aws.config\"\nimport { getParam } from \"../../../utils\";\nimport useGa from \"../../../utils/useGa\";\nimport { useAuthAmplifyContext } from \"../../contexts/AmplifyContext\";\nimport { useRenderSteps } from \"../../contexts/renderSteps\";\nimport { useToast } from \"../../contexts/Toast\";\nimport Form from \"../../shared/components/Form\";\nimport HeaderLogin from \"../../shared/components/HeaderLogin\";\nimport Input from \"../../shared/components/Input\";\nimport InternalButton from \"../../shared/components/InternalButton\";\nimport SubTitle from \"../../shared/components/SubTitle\";\nimport Terms from \"../../shared/components/Terms\";\nimport Title from \"../../shared/components/Title\";\nimport { useUserData } from \"../../shared/hooks/UserContext\";\nimport translate from \"../../shared/i18n/translate\";\nimport getValidationErrors from \"../../shared/utils/getValidationErrors\";\nimport useStyles from \"./styles\";\ninterface IChangePasswrod {\n    password: string;\n    confirmPassword: string;\n}\n\ninterface TChangePassword {\n    intl: IntlShape;\n    onCloseClick?(): void;\n    isModal?: boolean;\n}\n\nconst ChangePassword: React.FC<TChangePassword> = ({ intl, onCloseClick, isModal }) => {\n    const { saveOnGa } = useGa();\n    const classes = useStyles({});\n    const formRef = useRef<FormHandles>(null);\n    const { user } = useUserData();\n    const ctx = useContext(BrandContext);\n    const { amplifyTempPwd } = useAuthAmplifyContext();\n    const { addToast } = useToast();\n\n    const { setPreviousStep } = useRenderSteps();\n    const successToastMessageTitle = intl.formatMessage({ id: \"ChangePassword.successToastMessageTitle\" });\n    const successToastMessageDescription = intl.formatMessage({ id: \"ChangePassword.successToastMessageDescription\" });\n\n    useEffect(() => {\n        setPreviousStep(\"ValidationCode\");\n\n    }, [setPreviousStep]);\n\n    const handleSubmit = useCallback(async (data: IChangePasswrod): Promise<void> => {\n        try {\n            saveOnGa({\n                event: \"login_event\",\n                category: \"Account\",\n                action: \"Recovery Password\",\n                label: \"step 3 | update password\"\n            });\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                password: Yup.string().matches(/^(?=.*[0-9|#?!@$%^&*-]).{8,}$/, intl.formatMessage({ id: \"ChangePassword.errorMessage\" })),\n                confirmPassword: Yup.string().matches(/^(?=.*[0-9|#?!@$%^&*-]).{8,}$/, intl.formatMessage({ id: \"ChangePassword.errorMessage\" })),\n            });\n\n            await schema.validate(data, {\n                abortEarly: false\n            });\n            const { password, confirmPassword } = data;\n\n            if (password !== confirmPassword) {\n                formRef.current?.setErrors({ confirmPassword: intl.formatMessage({ id: \"ChangePassword.errorMessageNotEqual\" }) });\n            }\n            else {\n                Auth.signIn(user.email, amplifyTempPwd).then(async (response) => {\n                    try {\n                        await Auth.changePassword(response, amplifyTempPwd, password);\n                        addToast({ type: \"success\", title: successToastMessageTitle, description: successToastMessageDescription });\n                        saveOnGa({\n                            event: \"login_event\",\n                            category: \"Account\",\n                            action: \"Recovery Password\",\n                            label: \"updatesenha ok\"\n                        });\n\n                        if (getParam(\"path\")) {\n                            window.location.href = `${Redirect(ctx.hosts)}${getParam(\"path\")}`\n                            return\n                        }\n                        window.location.href = `${Redirect(ctx.hosts)}/mytravels/reservations`;\n                    } catch (error) {\n                        Auth.signOut();\n                        // exibir erro servidor ao trocar senha\n                    }\n                });\n            }\n\n        } catch (error) {\n            formRef.current?.setErrors(getValidationErrors(error));\n        }\n    }, [addToast, amplifyTempPwd, intl, successToastMessageDescription, successToastMessageTitle, user.email]);\n\n    return (\n        <>\n            <HeaderLogin isModal={isModal} previousStep=\"ValidationCode\" onCloseClick={onCloseClick} />\n            <div className={classes.root}>\n                <Title>\n                    {translate({ id: \"ChangePassword.title\" })}\n                </Title>\n                <SubTitle className={classes.subTitle}>\n                    {translate({\n                        id: \"ChangePassword.subTitle\",\n                    })}\n                </SubTitle>\n                <Form ref={formRef} handleSubmit={handleSubmit} >\n                    <Input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholderText={translate({ id: \"ChangePassword.passwordPlaceHolder\" })}\n                        showTip\n                    />\n                    <Input\n                        type=\"password\"\n                        name=\"confirmPassword\"\n                        placeholderText={translate({ id: \"ChangePassword.confirPassword\" })}\n                        showTip\n                    />\n                    <InternalButton type=\"submit\" text={intl.formatMessage({ id: \"ChangePassword.actionButton\" })} />\n                </Form>\n\n            </div>\n            <Terms />\n        </>\n    );\n};\n\n\nexport default injectIntl(ChangePassword);\n"],"file":"index.js"}