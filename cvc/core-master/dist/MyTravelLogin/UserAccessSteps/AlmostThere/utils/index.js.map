{"version":3,"sources":["../../../../../src/MyTravelLogin/UserAccessSteps/AlmostThere/utils/index.ts"],"names":["IProviders","usersInProvider","usersExists","user","updateUserNextStep","COGNITO","LEGACY","FACEBOOK","GOOGLE","APPLE","nextStep","emailConfirmed","providerArray","filterUserByProviders","users","providers","usersFilter","filter","find","el","provider","sort","a","b","indexOf"],"mappings":"iHACKA,CAAAA,U,WAAAA,U,EAAAA,U,sBAAAA,U,oBAAAA,U,wBAAAA,U,kBAAAA,U,sBAAAA,U,GAAAA,U,MAcE,QAASC,CAAAA,eAAT,CAAyBC,WAAzB,CAA8E,CACjF,GAAIC,CAAAA,IAAI,CAAGC,kBAAkB,CAACF,WAAD,CAAc,CAACF,UAAU,CAACK,OAAZ,CAAqBL,UAAU,CAACM,MAAhC,CAAd,CAAuD,UAAvD,CAA7B,CACA,GAAI,CAACH,IAAL,CAAW,CACPA,IAAI,CAAGC,kBAAkB,CAACF,WAAD,CAAc,CAACF,UAAU,CAACO,QAAZ,CAAsBP,UAAU,CAACQ,MAAjC,CAAyCR,UAAU,CAACS,KAApD,CAAd,CAA0E,oBAA1E,CAC5B,CAFD,IAEO,CACHN,IAAI,CAACO,QAAL,CAAgBP,IAAI,CAACQ,cAAL,CAAsBR,IAAI,CAACO,QAA3B,CAAsC,mBACzD,CACD,MAAOP,CAAAA,IAEV,CACD,QAASC,CAAAA,kBAAT,CAA4BF,WAA5B,CAAwDU,aAAxD,CAAqFF,QAArF,CAAgI,CAC5H,GAAMP,CAAAA,IAAI,CAAGU,qBAAqB,CAACX,WAAD,CAAcU,aAAd,CAAlC,CACA,GAAIT,IAAJ,CAAU,CACNA,IAAI,CAACO,QAAL,CAAgBA,QAAhB,CACA,MAAOP,CAAAA,IACV,CACJ,CAED,QAASU,CAAAA,qBAAT,CAA+BC,KAA/B,CAAqDC,SAArD,CAA2F,CACvF,GAAMC,CAAAA,WAAW,CAAGF,KAAK,CAACG,MAAN,CAAa,SAACd,IAAD,CAAuB,CACpD,MAAOY,CAAAA,SAAS,CAACG,IAAV,CAAe,SAAAC,EAAE,QAAIA,CAAAA,EAAE,EAAIhB,IAAI,CAACiB,QAAf,CAAjB,CACV,CAFmB,EAEjBC,IAFiB,CAEZ,SAACC,CAAD,CAAIC,CAAJ,QAAWR,CAAAA,SAAS,CAACS,OAAV,CAAkBF,CAAC,CAACF,QAApB,EAAgCL,SAAS,CAACS,OAAV,CAAkBD,CAAC,CAACH,QAApB,CAAjC,CAAkE,CAAlE,CAAsE,CAAC,CAAjF,CAFY,CAApB,CAGA,MAAOJ,CAAAA,WAAW,CAAC,CAAD,CACrB","sourcesContent":["\nenum IProviders {\n    COGNITO = \"cognito\",\n    LEGACY = \"legacy\",\n    FACEBOOK = \"facebook\",\n    APPLE = \"apple\",\n    GOOGLE = \"google\"\n}\nexport interface IUserExists {\n    emailConfirmed: boolean;\n    isSocial: boolean;\n    provider: IProviders;\n    nextStep?: string;\n}\n\nexport function usersInProvider(usersExists: IUserExists[]): IUserExists | undefined {\n    let user = updateUserNextStep(usersExists, [IProviders.COGNITO, IProviders.LEGACY], \"Password\");\n    if (!user) {\n        user = updateUserNextStep(usersExists, [IProviders.FACEBOOK, IProviders.GOOGLE, IProviders.APPLE], \"SocialLoginAccount\");\n    } else {\n        user.nextStep = user.emailConfirmed ? user.nextStep : \"UnverifiedAccount\";\n    }\n    return user;\n\n}\nfunction updateUserNextStep(usersExists: IUserExists[], providerArray: IProviders[], nextStep: string): IUserExists | undefined {\n    const user = filterUserByProviders(usersExists, providerArray);\n    if (user) {\n        user.nextStep = nextStep;\n        return user;\n    }\n}\n\nfunction filterUserByProviders(users: IUserExists[], providers: IProviders[]): IUserExists {\n    const usersFilter = users.filter((user: IUserExists) => {\n        return providers.find(el => el == user.provider);\n    }).sort((a, b) => (providers.indexOf(a.provider) > providers.indexOf(b.provider)) ? 1 : -1);\n    return usersFilter[0];\n}\n"],"file":"index.js"}