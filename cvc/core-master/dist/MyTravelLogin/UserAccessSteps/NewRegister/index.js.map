{"version":3,"sources":["../../../../src/MyTravelLogin/UserAccessSteps/NewRegister/index.tsx"],"names":["NewRegister","intl","onCloseClick","isModal","user","renderNewStep","setPreviousStep","setAuthAmplify","setAmplifyPwd","title","id","placeHolderPwd","placeHolderConfirmPwd","errorPasswordRequired","formatMessage","errorPasswordMatch","errorMatchPwds","successToastMessageTitle","successToastMessageDescription","errorToastMessageTitle","errorToastMessageDescription","saveOnGa","setIsRegisterUserProfileStepToggle","formRef","addToast","submitForm","formData","Promise","resolve","current","setErrors","password","confirmPassword","schema","Yup","object","shape","string","matches","required","validate","abortEarly","email","pwd","SignUp","event","category","action","label","ValidationError","Auth","signUp","username","type","description"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef } from \"react\";\nimport { FormHandles } from \"@unform/core\";\nimport { Auth } from \"aws-amplify\";\nimport { injectIntl, IntlShape } from \"react-intl\";\nimport * as Yup from \"yup\";\nimport {useProfileContext} from \"../../../ProfileContext\"\nimport useGa from \"../../../utils/useGa\";\nimport { useAuthAmplifyContext } from \"../../contexts/AmplifyContext\";\nimport { useRenderSteps } from \"../../contexts/renderSteps\";\nimport { useToast } from \"../../contexts/Toast\";\nimport Form from \"../../shared/components/Form\";\nimport HeaderLogin from \"../../shared/components/HeaderLogin\";\nimport Input from \"../../shared/components/Input\";\nimport InternalButton from \"../../shared/components/InternalButton\";\nimport SubTitle from \"../../shared/components/SubTitle\";\nimport Terms from \"../../shared/components/Terms\";\nimport Title from \"../../shared/components/Title\";\nimport { useUserData } from \"../../shared/hooks/UserContext\";\nimport translate from \"../../shared/i18n/translate\";\nimport getValidationErrors from \"../../shared/utils/getValidationErrors\";\n\ninterface INewRegister {\n    intl: IntlShape;\n    onCloseClick?(): void;\n    isModal?: boolean;\n}\n\ninterface SubmitFormData {\n    name?: string;\n    surName?: string;\n    password: string;\n    confirmPassword: string;\n}\n\nconst NewRegister: React.FC<INewRegister> = ({ intl, onCloseClick, isModal }) => {\n    const { user } = useUserData();\n    const { renderNewStep, setPreviousStep } = useRenderSteps();\n    const { setAuthAmplify, setAmplifyPwd } = useAuthAmplifyContext();\n    const title = translate({ id: \"NewRegister.title\" });\n    const placeHolderPwd = translate({ id: \"NewRegister.placeHolderPwd\" });\n    const placeHolderConfirmPwd = translate({ id: \"NewRegister.placeHolderConfirmPwd\" });\n    const errorPasswordRequired = intl.formatMessage({ id: \"NewRegister.errorPasswordRequired\" });\n    const errorPasswordMatch = intl.formatMessage({ id: \"NewRegister.errorPasswordMatch\" });\n    const errorMatchPwds = intl.formatMessage({ id: \"NewRegister.errorMatchPwds\" });\n    const successToastMessageTitle = intl.formatMessage({ id: \"NewRegister.successToastMessageTitle\" });\n    const successToastMessageDescription = intl.formatMessage({ id: \"NewRegister.successToastMessageDescription\" });\n    const errorToastMessageTitle = intl.formatMessage({ id: \"NewRegister.errorToastMessageTitle\" });\n    const errorToastMessageDescription = intl.formatMessage({ id: \"NewRegister.errorToastMessageDescription\" });\n    const { saveOnGa } = useGa();\n    const {setIsRegisterUserProfileStepToggle} = useProfileContext()\n\n    const formRef = useRef<FormHandles>(null);\n    const { addToast } = useToast();\n\n    useEffect(() => {\n        setPreviousStep(\"ConfirmMainScreen\");\n        setIsRegisterUserProfileStepToggle(true)\n    }, [setIsRegisterUserProfileStepToggle, setPreviousStep]);\n\n    const submitForm = useCallback(async (formData: SubmitFormData) => new Promise(async (resolve) => {\n        try {\n            formRef.current?.setErrors({});\n            const { password, confirmPassword } = formData;\n\n            const schema = Yup.object().shape({\n                password: Yup.string().matches(/^(?=.*[0-9|#?!@$%^&*-]).{8,}$/, errorPasswordMatch).required(errorPasswordRequired),\n            });\n\n            await schema.validate(formData, {\n                abortEarly: false,\n            });\n\n            if (password !== confirmPassword) {\n                formRef.current?.setErrors({ confirmPassword: errorMatchPwds });\n                return;\n            }\n            formRef.current?.setErrors({ confirmPassword: \"\" });\n\n            const {email} = user;\n            const pwd = formData.password;\n\n            await SignUp(email, pwd);\n\n            resolve(\"Success\");\n            setAuthAmplify(\"confirmSignUp\");\n            saveOnGa({\n                event: \"login_event\",\n                category: \"Account\",\n                action: \"Registration\",\n                label: \"step 2 | password registration\"\n            });\n            renderNewStep(\"ValidationCode\");\n        } catch (err) {\n            if (err instanceof Yup.ValidationError) {\n                formRef.current?.setErrors(getValidationErrors(err));\n\n            }\n        }\n\n    }), []);\n\n    const SignUp = (email, pwd) => new Promise(async (resolve) => {\n        try {\n            await Auth.signUp({\n                username: email,\n                password: pwd\n            });\n            setAmplifyPwd(pwd);\n            resolve(\"Success\");\n            addToast({\n                type: \"success\",\n                title: successToastMessageTitle,\n                description: successToastMessageDescription\n            });\n        } catch (error) {\n            addToast({\n                type: \"error\",\n                title: errorToastMessageTitle,\n                description: errorToastMessageDescription\n            });\n        }\n    });\n\n    return (\n        <>\n            <HeaderLogin isModal={isModal} previousStep=\"ConfirmMainScreen\" onCloseClick={onCloseClick} />\n            <Form ref={formRef} handleSubmit={submitForm}>\n                <Title>{title}</Title>\n                <Input\n                    name=\"password\"\n                    placeholderText={placeHolderPwd}\n                    type=\"password\"\n                    showTip\n                    infoMessage={errorPasswordMatch}\n                />\n                <Input\n                    name=\"confirmPassword\"\n                    placeholderText={placeHolderConfirmPwd}\n                    type=\"password\"\n                    showTip\n                    infoMessage={errorPasswordMatch}\n                />\n\n                <InternalButton text=\"Entrar\" type=\"submit\" />\n                <Terms />\n            </Form>\n\n        </>\n    );\n};\n\nexport default injectIntl(NewRegister);\n"],"file":"index.js"}