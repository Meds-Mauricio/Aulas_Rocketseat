{"version":3,"sources":["../../../../src/MyTravelLogin/UserAccessSteps/CodeNonReceived/index.tsx"],"names":["CodeNonReceived","intl","onCloseClick","isModal","classes","renderNewStep","setPreviousStep","authAmplify","saveOnGa","user","setUser","handleSendCode","Promise","event","category","action","label","Auth","resendSignUp","email","forgotPassword","handleMainScreen","root","id","subTitle","value","cautionText","changeEmail","subTitleLinkChangeEmail","buttonContainer","formatMessage"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link } from \"@material-ui/core\";\nimport { Auth } from \"aws-amplify\";\nimport { injectIntl, IntlShape } from \"react-intl\";\nimport Typography from \"../../../Typography\";\nimport useGa from \"../../../utils/useGa\";\nimport { useAuthAmplifyContext } from \"../../contexts/AmplifyContext\";\nimport { useRenderSteps } from \"../../contexts/renderSteps\";\nimport HeaderLogin from \"../../shared/components/HeaderLogin\";\nimport InternalButton from \"../../shared/components/InternalButton\";\nimport SubTitle from \"../../shared/components/SubTitle\";\nimport Terms from \"../../shared/components/Terms\";\nimport Title from \"../../shared/components/Title\";\nimport { useUserData } from \"../../shared/hooks/UserContext\";\nimport translate from \"../../shared/i18n/translate\";\nimport useStyles from \"./styles\";\ninterface ICodeNonReceived {\n    intl: IntlShape;\n    onCloseClick?(): void;\n    isModal?: boolean;\n}\n\nconst CodeNonReceived: React.FC<ICodeNonReceived> = ({ intl, onCloseClick, isModal }) => {\n    const classes = useStyles({});\n    const { renderNewStep, setPreviousStep } = useRenderSteps();\n    const { authAmplify } = useAuthAmplifyContext();\n    const { saveOnGa } = useGa();\n    const { user, setUser } = useUserData();\n\n    useEffect(() => {\n        setPreviousStep(\"ValidationCode\");\n\n    }, []);\n\n    const handleSendCode = () => new Promise(async () => {\n        saveOnGa({\n            event: \"login_event\",\n            category: \"Account\",\n            action: \"Validation code\",\n            label: \"action :: forwarding recovery code\"\n        });\n\n        try {\n            if (authAmplify === \"confirmSignUp\") {\n                await Auth.resendSignUp(user.email);\n                renderNewStep(\"ValidationCode\");\n            } else {\n                await Auth.forgotPassword(user.email);\n                renderNewStep(\"ValidationCode\");\n            }\n        } catch (err) {\n            // exibir erro servidor\n        }\n    });\n    const handleMainScreen = () => {\n        saveOnGa({\n            event: \"login_event\",\n            category: \"Account\",\n            action: \"Change email\",\n            label: \"action :: change email\"\n        });\n        setUser({\n            ...user,\n            email: \"\"\n        });\n        renderNewStep(\"MainScreen\");\n    };\n    return (\n        <>\n            <HeaderLogin isModal={isModal} previousStep=\"ValidationCode\" onCloseClick={onCloseClick} />\n            <div className={classes.root}>\n                <Title>\n                    {translate({ id: \"CodeNonReceived.title\" })}\n                </Title>\n                <Typography type=\"body2regular\" className={classes.subTitle}>\n                    {translate({\n                        id: \"CodeNonReceived.subTitle\",\n                        value: {\n                            email: <strong>{user ? user.email : \"\"}</strong>,\n                        },\n                    })}\n                </Typography>\n                <Typography type=\"body2regular\" className={classes.cautionText}>\n                    {translate({ id: \"CodeNonReceived.caution\" })}\n                </Typography>\n                <Link onClick={(handleMainScreen)} className={classes.changeEmail}>\n                    <SubTitle variant=\"caption\" className={classes.subTitleLinkChangeEmail}>\n                        {translate({ id: \"CodeNonReceived.linkChangeEmail\" })}\n                    </SubTitle>\n                </Link>\n                <div className={classes.buttonContainer}>\n                    <InternalButton\n                        text={intl.formatMessage({ id: \"CodeNonReceived.actionButton\" })}\n                        handlerClick={handleSendCode}\n                    />\n                </div>\n\n            </div>\n            <Terms />\n        </>\n    );\n};\n\nexport default injectIntl(CodeNonReceived);\n"],"file":"index.js"}