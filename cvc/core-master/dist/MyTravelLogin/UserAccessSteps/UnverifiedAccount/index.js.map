{"version":3,"sources":["../../../../src/MyTravelLogin/UserAccessSteps/UnverifiedAccount/index.tsx"],"names":["UnverifiedAccount","intl","onCloseClick","isModal","user","renderNewStep","setPreviousStep","loading","saveOnGa","authAmplify","classes","handleClick","Auth","resendSignUp","email","event","category","action","label","forgotPassword","root","id","value","fontWeight","marginBottom","fontSize","formatMessage"],"mappings":"yZAAA,qDACA,uCACA,uCACA,qCACA,oEACA,6DACA,6DACA,uDACA,wFACA,8FACA,gFACA,kFACA,4EACA,4EACA,2DACA,8EACA,wD,o/BAeA,GAAMA,CAAAA,iBAA2C,CAAG,QAA9CA,CAAAA,iBAA8C,MAAqC,IAAlCC,CAAAA,IAAkC,MAAlCA,IAAkC,CAA5BC,YAA4B,MAA5BA,YAA4B,CAAdC,OAAc,MAAdA,OAAc,CACrF,iBAAiB,8BAAjB,CAAQC,IAAR,cAAQA,IAAR,CACA,oBAA2C,iCAA3C,CAAQC,aAAR,iBAAQA,aAAR,CAAuBC,eAAvB,iBAAuBA,eAAvB,CACA,uBAAoB,uCAApB,CAAQC,OAAR,oBAAQA,OAAR,CACA,WAAqB,wBAArB,CAAQC,QAAR,QAAQA,QAAR,CACA,0BAAwB,2CAAxB,CAAQC,WAAR,uBAAQA,WAAR,CAEA,GAAMC,CAAAA,OAAO,CAAG,uBAAU,EAAV,CAAhB,CAEA,qBAAU,UAAM,CACZJ,eAAe,CAAC,YAAD,CAClB,CAFD,CAEG,EAFH,EAIA,GAAMK,CAAAA,WAAW,+GAAG,4JAERF,WAAW,EAAI,eAFP,+CAGFG,kBAAKC,YAAL,CAAkBT,IAAI,CAACU,KAAvB,CAHE,QAIRT,aAAa,CAAC,gBAAD,CAAb,CACAG,QAAQ,CAAC,CACLO,KAAK,CAAE,aADF,CAELC,QAAQ,CAAE,SAFL,CAGLC,MAAM,CAAE,cAHH,CAILC,KAAK,CAAE,uBAJF,CAAD,CAAR,CAMAb,aAAa,CAAC,gBAAD,CAAb,CAXQ,qDAaFO,kBAAKO,cAAL,CAAoBf,IAAI,CAACU,KAAzB,CAbE,SAcRT,aAAa,CAAC,gBAAD,CAAb,CAdQ,iGAmBhBG,QAAQ,CAAC,CACLO,KAAK,CAAE,aADF,CAELC,QAAQ,CAAE,SAFL,CAGLC,MAAM,CAAE,cAHH,CAILC,KAAK,CAAE,uBAJF,CAAD,CAAR,CAMAb,aAAa,CAAC,gBAAD,CAAb,CAzBgB,oEAAH,kBAAXM,CAAAA,WAAW,yCAAjB,CA4BA,MACIJ,CAAAA,OAAO,cAAG,gCAAC,mBAAD,MAAH,cACH,6EACA,gCAAC,uBAAD,EAAa,OAAO,CAAEJ,OAAtB,CAA+B,YAAY,CAAC,YAA5C,CAAyD,YAAY,CAAED,YAAvE,EADA,cAEA,uCAAK,SAAS,CAAEQ,OAAO,CAACU,IAAxB,eACQ,gCAAC,iBAAD,MACC,0BAAU,CACHC,EAAE,CAAE,yBADD,CAAV,CADD,CADR,cAMQ,gCAAC,oBAAD,MACC,0BAAU,CACHA,EAAE,CAAE,4BADD,CAEHC,KAAK,CAAE,CACHR,KAAK,cAAE,8CAASV,IAAI,CAAGA,IAAI,CAACU,KAAR,CAAgB,EAA7B,CADJ,CAFJ,CAAV,CADD,CANR,cAeQ,gCAAC,gBAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,KAAK,CAAE,CAAES,UAAU,CAAE,MAAd,CAAsBC,YAAY,CAAE,CAApC,CAAuCC,QAAQ,CAAE,EAAjD,CAAnC,EACC,0BAAU,CACHJ,EAAE,CAAE,6BADD,CAAV,CADD,CAfR,cAqBQ,gCAAC,0BAAD,EAAgB,YAAY,CAAEV,WAA9B,CAA2C,IAAI,CAAC,QAAhD,CAAyD,IAAI,CAAEV,IAAI,CAACyB,aAAL,CAAmB,CAAEL,EAAE,CAAE,2BAAN,CAAnB,CAA/D,EArBR,CAFA,cA0BA,gCAAC,iBAAD,MA1BA,CA6BX,CAxED,C,aA0Ee,0BAAWrB,iBAAX,C","sourcesContent":["import React, { useRef, useContext, useCallback, useEffect } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { Auth } from \"aws-amplify\";\nimport { injectIntl, IntlShape } from \"react-intl\";\nimport useGa from \"../../../utils/useGa\"\nimport { useAuthAmplifyContext } from \"../../contexts/AmplifyContext\";\nimport { useLoadingContext } from \"../../contexts/LoadingContext\";\nimport { useRenderSteps } from \"../../contexts/renderSteps\";\nimport HeaderLogin from \"../../shared/components/HeaderLogin\";\nimport InternalButton from \"../../shared/components/InternalButton\";\nimport Loading from \"../../shared/components/Loading\";\nimport SubTitle from \"../../shared/components/SubTitle\";\nimport Terms from \"../../shared/components/Terms\";\nimport Title from \"../../shared/components/Title\";\nimport { useUserData } from \"../../shared/hooks/UserContext\";\nimport translate from \"../../shared/i18n/translate\";\nimport useStyles from \"./styles\";\n\ninterface SubmitFormData {\n    email: string;\n    name?: string;\n    lastName?: string;\n    userExists: boolean;\n}\n\ninterface IInternalLogin {\n    intl: IntlShape;\n    onCloseClick?(): void;\n    isModal?: boolean;\n}\n\nconst UnverifiedAccount: React.FC<IInternalLogin> = ({ intl, onCloseClick, isModal }) => {\n    const { user } = useUserData();\n    const { renderNewStep, setPreviousStep } = useRenderSteps();\n    const { loading } = useLoadingContext();\n    const { saveOnGa } = useGa();\n    const { authAmplify } = useAuthAmplifyContext();\n\n    const classes = useStyles({});\n\n    useEffect(() => {\n        setPreviousStep(\"MainScreen\");\n    }, []);\n\n    const handleClick = async () => {\n        try {\n            if (authAmplify == \"confirmSignUp\") {\n                await Auth.resendSignUp(user.email);\n                renderNewStep(\"ValidationCode\");\n                saveOnGa({\n                    event: \"login_event\",\n                    category: \"Account\",\n                    action: \"Registration\",\n                    label: \"alert :: verify email\"\n                });\n                renderNewStep(\"ValidationCode\")\n            } else {\n                await Auth.forgotPassword(user.email);\n                renderNewStep(\"ValidationCode\");\n            }\n        }catch(err) {\n            // handle error server\n        }\n        saveOnGa({\n            event: \"login_event\",\n            category: \"Account\",\n            action: \"Registration\",\n            label: \"alert :: verify email\"\n        });\n        renderNewStep(\"ValidationCode\")\n    }\n\n    return (\n        loading ? <Loading /> :\n            <>\n            <HeaderLogin isModal={isModal} previousStep=\"MainScreen\" onCloseClick={onCloseClick} />\n            <div className={classes.root}>\n                    <Title>\n                    {translate({\n                            id: \"UnverifiedAccount.title\",\n                        })}\n                </Title>\n                    <SubTitle>\n                    {translate({\n                            id: \"UnverifiedAccount.subTitle\",\n                            value: {\n                                email: <strong>{user ? user.email : \"\"}</strong>\n\n                            },\n                        })}\n                </SubTitle>\n                    <Typography variant=\"body1\" style={{ fontWeight: \"bold\", marginBottom: 7, fontSize: 14 }}>\n                    {translate({\n                            id: \"UnverifiedAccount.verifyNow\",\n                        })}\n                </Typography>\n\n                    <InternalButton handlerClick={handleClick} type=\"submit\" text={intl.formatMessage({ id: \"UnverifiedAccount.textBtn\" })} />\n\n                </div>\n            <Terms />\n        </>\n    );\n};\n\nexport default injectIntl(UnverifiedAccount);\n"],"file":"index.js"}