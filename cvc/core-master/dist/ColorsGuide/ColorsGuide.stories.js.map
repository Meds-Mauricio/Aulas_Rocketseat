{"version":3,"sources":["../../src/ColorsGuide/ColorsGuide.stories.js"],"names":["useStyles","themeOverWrites","getThemePalleteObject","theme","Themes","palette","pretiffyData","obj","JSON","stringify","Section","sectionKey","brand","capitalize","str","charAt","toUpperCase","slice","content","ColorsGuide","classes","paletteKeys","Object","keys","root","map","argsOptions","args","argTypes","type","options","module","addDecorator","Theme","jsxDecorator","add"],"mappings":"qJAAA,oDACA,uCACA,gDACA,wCACA,sDACA,qEACA,uDACA,+DACA,gE,o/BAEA,GAAMA,CAAAA,SAAS,CAAG,uBAAWC,mCAAX,CAAlB,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAAAC,KAAK,QAAIC,CAAAA,MAAM,WAAN,CAAeD,KAAf,EAAsBE,OAA1B,CAAnC,CACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,GAAG,QAAIC,CAAAA,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAoB,IAApB,CAA0B,CAA1B,CAAJ,CAAxB,CAEA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAA2B,IAAxBC,CAAAA,UAAwB,MAAxBA,UAAwB,CAAZC,KAAY,MAAZA,KAAY,CACvC,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,GAA8BF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAAlC,CAAtB,CACA,GAAMC,CAAAA,OAAO,CAAGZ,YAAY,CAACJ,qBAAqB,CAACU,KAAD,CAArB,CAA6BD,UAA7B,CAAD,CAA5B,CAEA,MAAOO,CAAAA,OAAO,cACV,6EACI,gCAAC,gBAAD,EAAY,OAAO,CAAC,WAApB,EAAiCL,UAAU,CAACF,UAAD,CAA3C,CADJ,cAEI,gCAAC,6BAAD,gBAAeA,UAAf,cAA8BO,OAA9B,EAFJ,CADU,CAKV,IACP,CAVD,CAYA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,OAAe,IAAZP,CAAAA,KAAY,OAAZA,KAAY,CAC/B,GAAMQ,CAAAA,OAAO,CAAGpB,SAAS,EAAzB,CAEA,GAAMqB,CAAAA,WAAW,CAAGC,MAAM,CAACC,IAAP,CAAYrB,qBAAqB,CAACU,KAAD,CAAjC,CAApB,CAEA,mBACI,gCAAC,WAAD,EAAO,SAAS,CAAEQ,OAAO,CAACI,IAA1B,CAAgC,EAAE,CAAC,OAAnC,eACI,gCAAC,gBAAD,EAAY,OAAO,CAAC,IAApB,aAAkCZ,KAAlC,CADJ,cAEI,0CAFJ,cAGI,gCAAC,aAAD,MAHJ,cAII,0CAJJ,CAKKS,WAAW,CAACI,GAAZ,CAAgB,SAAApB,OAAO,CAAI,CACxB,mBAAO,gCAAC,OAAD,EAAS,KAAK,CAAEO,KAAhB,CAAuB,GAAG,CAAEP,OAA5B,CAAqC,UAAU,CAAEA,OAAjD,EACV,CAFA,CALL,cAQI,gCAAC,gBAAD,EAAY,OAAO,CAAC,IAApB,uBAA4CO,KAA5C,CARJ,cASI,gCAAC,6BAAD,MAAYN,YAAY,CAACJ,qBAAqB,CAACU,KAAD,CAAtB,CAAxB,CATJ,CAYP,CAlBD,CAoBA,GAAMc,CAAAA,WAAW,CAAG,CAChBC,IAAI,CAAE,CACFf,KAAK,CAAE,KADL,CADU,CAIhBgB,QAAQ,CAAE,CACNhB,KAAK,CAAE,CACHiB,IAAI,CAAE,QADH,CAEHC,OAAO,CAAE,CAAC,eAAD,CAAkB,aAAlB,CAAiC,KAAjC,CAAwC,SAAxC,CAAmD,WAAnD,CAAgE,KAAhE,CAFN,CADD,CAJM,CAApB,CAYA,sBAAU,cAAV,CAA0BC,MAA1B,EACKC,YADL,CACkB,uCAAS,CAACC,iBAAD,CAAT,CADlB,EAEKD,YAFL,CAEkBE,+BAFlB,EAGKC,GAHL,CAGS,eAHT,CAG0B,SAAAR,IAAI,qBAAI,gCAAC,WAAD,CAAiBA,IAAjB,CAAJ,CAH9B,CAG6DD,WAH7D","sourcesContent":["import React from \"react\";\nimport { Paper, Typography, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { storiesOf } from \"@storybook/react\";\nimport { jsxDecorator } from \"storybook-addon-jsx\";\nimport { muiTheme } from \"storybook-addon-material-ui\";\nimport Theme from \"../Theme\";\nimport * as Themes from \"../Theme/themes\";\nimport { StyledPre, themeOverWrites } from \"./ColorsGuide.stories.styles\";\n\nconst useStyles = makeStyles(themeOverWrites);\n\nconst getThemePalleteObject = theme => Themes.default[theme].palette;\nconst pretiffyData = obj => JSON.stringify(obj, null, 2);\n\nconst Section = ({ sectionKey, brand }) => {\n    const capitalize = str => str.charAt(0).toUpperCase() + str.slice(1);\n    const content = pretiffyData(getThemePalleteObject(brand)[sectionKey]);\n\n    return content ? (\n        <>\n            <Typography variant=\"subtitle1\">{capitalize(sectionKey)}</Typography>\n            <StyledPre>{`${sectionKey}: ${content}`}</StyledPre>\n        </>\n    ) : null;\n};\n\nconst ColorsGuide = ({ brand }) => {\n    const classes = useStyles();\n\n    const paletteKeys = Object.keys(getThemePalleteObject(brand));\n\n    return (\n        <Paper className={classes.root} id=\"chips\">\n            <Typography variant=\"h3\">Cores - {brand}</Typography>\n            <br />\n            <Divider />\n            <br />\n            {paletteKeys.map(palette => {\n                return <Section brand={brand} key={palette} sectionKey={palette} />;\n            })}\n            <Typography variant=\"h3\">Objeto Completo - {brand}</Typography>\n            <StyledPre>{pretiffyData(getThemePalleteObject(brand))}</StyledPre>\n        </Paper>\n    );\n};\n\nconst argsOptions = {\n    args: {\n        brand: \"CVC\"\n    },\n    argTypes: {\n        brand: {\n            type: \"select\",\n            options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n        }\n    }\n};\n\nstoriesOf(\"Theme/Colors\", module)\n    .addDecorator(muiTheme([Theme]))\n    .addDecorator(jsxDecorator)\n    .add(\"Guia de cores\", args => <ColorsGuide {...args} />, argsOptions);\n"],"file":"ColorsGuide.stories.js"}