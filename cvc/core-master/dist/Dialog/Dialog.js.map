{"version":3,"sources":["../../src/Dialog/Dialog.js"],"names":["AlertDialog","classes","btn","title","actions","content","React","useState","open","setOpen","handleClickOpen","handleClose","callBack","paper","className","backdrop","root","map","item","key","color","label","propTypes","PropTypes","object","isRequired","styles","withTheme"],"mappings":"+QAAA,oDACA,6DACA,uFACA,wEACA,wEACA,sFACA,sFACA,8FACA,kFACA,gCAEA,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAA+C,IAA5CC,CAAAA,OAA4C,MAA5CA,OAA4C,CAAnCC,GAAmC,MAAnCA,GAAmC,CAA9BC,KAA8B,MAA9BA,KAA8B,CAAvBC,OAAuB,MAAvBA,OAAuB,CAAdC,OAAc,MAAdA,OAAc,CAC/D,oBAAwBC,kBAAMC,QAAN,CAAe,KAAf,CAAxB,oEAAOC,IAAP,qBAAaC,OAAb,qBAEA,QAASC,CAAAA,eAAT,EAA2B,CACvBD,OAAO,CAAC,IAAD,CACV,CAED,QAASE,CAAAA,WAAT,CAAqBC,QAArB,CAA+B,CAC3B,GAAIA,QAAJ,CAAc,CACVA,QAAQ,EACX,CACDH,OAAO,CAAC,KAAD,CACV,CAED,mBACI,wDACI,gCAAC,kBAAD,EAAQ,OAAO,CAAC,UAAhB,CAA2B,KAAK,CAAC,SAAjC,CAA2C,OAAO,CAAEC,eAApD,EACKR,GADL,CADJ,cAII,gCAAC,kBAAD,EACI,IAAI,CAAEM,IADV,CAEI,OAAO,CAAE,yBAAMG,CAAAA,WAAW,EAAjB,CAFb,CAGI,kBAAgB,oBAHpB,CAII,mBAAiB,0BAJrB,CAKI,OAAO,CAAE,CAAEE,KAAK,CAAEZ,OAAO,CAACY,KAAjB,CALb,CAMI,aAAa,CAAE,CAAEC,SAAS,CAAEb,OAAO,CAACc,QAArB,CANnB,eAQI,gCAAC,uBAAD,EAAa,OAAO,CAAE,CAAEC,IAAI,CAAEf,OAAO,CAACE,KAAhB,CAAtB,EAAgDA,KAAhD,CARJ,cASI,gCAAC,yBAAD,EAAe,OAAO,CAAE,CAAEa,IAAI,CAAEf,OAAO,CAACI,OAAhB,CAAxB,eACI,gCAAC,6BAAD,UAAqBA,OAArB,KADJ,CATJ,cAYI,gCAAC,yBAAD,EAAe,OAAO,CAAE,CAAEW,IAAI,CAAEf,OAAO,CAACG,OAAhB,CAAxB,EACKA,OAAO,CAACa,GAAR,CAAY,SAACC,IAAD,CAAOC,GAAP,qBACT,wCACI,GAAG,CAAEA,GADT,CAEI,OAAO,CAAE,yBAAMR,CAAAA,WAAW,CAACO,IAAI,CAACN,QAAN,CAAjB,CAFb,CAGI,KAAK,CAAEM,IAAI,CAACE,KAHhB,CAII,SAAS,WAAKnB,OAAO,CAACC,GAAb,aAAoBD,OAAO,CAACiB,IAAI,CAACE,KAAN,CAA3B,CAJb,EAMKF,IAAI,CAACG,KANV,CADS,CAAZ,CADL,CAZJ,CAJJ,CA+BP,CA9CD,CAgDArB,WAAW,CAACsB,SAAZ,CAAwB,CAAErB,OAAO,CAAEsB,sBAAUC,MAAV,CAAiBC,UAA5B,CAAxB,C,aAEe,2BAAWC,cAAX,CAAmB,CAAEC,SAAS,CAAE,IAAb,CAAnB,EAAwC3B,WAAxC,C","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { styles } from \"./styles\";\n\nconst AlertDialog = ({ classes, btn, title, actions, content }) => {\n    const [open, setOpen] = React.useState(false);\n\n    function handleClickOpen() {\n        setOpen(true);\n    }\n\n    function handleClose(callBack) {\n        if (callBack) {\n            callBack();\n        }\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                {btn}\n            </Button>\n            <Dialog\n                open={open}\n                onClose={() => handleClose()}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                classes={{ paper: classes.paper }}\n                BackdropProps={{ className: classes.backdrop }}\n            >\n                <DialogTitle classes={{ root: classes.title }}>{title}</DialogTitle>\n                <DialogContent classes={{ root: classes.content }}>\n                    <DialogContentText> {content} </DialogContentText>\n                </DialogContent>\n                <DialogActions classes={{ root: classes.actions }}>\n                    {actions.map((item, key) => (\n                        <span\n                            key={key}\n                            onClick={() => handleClose(item.callBack)}\n                            color={item.color}\n                            className={`${classes.btn} ${classes[item.color]}`}\n                        >\n                            {item.label}\n                        </span>\n                    ))}\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nAlertDialog.propTypes = { classes: PropTypes.object.isRequired };\n\nexport default withStyles(styles, { withTheme: true })(AlertDialog);\n"],"file":"Dialog.js"}