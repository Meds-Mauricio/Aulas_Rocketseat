{"version":3,"sources":["../../../src/Button/Stories/IconsButtons.stories.tsx"],"names":["useStyles","theme","root","boxShadow","shadows","padding","darkBg","background","IconButtons","brand","mode","label","color","variant","size","iconPosition","classes","themes","argsControls","args","argTypes","type","options","control","module","addDecorator","Theme","jsxDecorator","add"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDecorator } from \"storybook-addon-jsx\";\nimport { Paper, Divider, Grid } from \"@material-ui/core\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { storiesOf } from \"@storybook/react\";\nimport { muiTheme } from \"storybook-addon-material-ui\";\nimport { Filter } from \"@cvccorp-components/icons\";\nimport Theme from \"../../Theme\";\nimport themes from \"../../Theme/themes\";\nimport Button from \"../Button\";\nimport Badge from \"../../Badge\";\nimport { BrandType } from \"../../types/brand\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        boxShadow: theme.shadows[24],\n        padding: \"30px\",\n    },\n    darkBg: {\n        background: \"rgba(0, 0, 0, 0.6)\",\n        padding: \"20px\",\n    },\n}));\n\ntype IconsButtonsProps = {\n    label: string,\n    mode: string,\n    size: string,\n    brand: BrandType,\n    color: string,\n    variant: string,\n    iconPosition: string,\n}\n\nexport const IconButtons = ({ brand, mode, label, color, variant, size, iconPosition }: IconsButtonsProps): JSX.Element => {\n    const classes = useStyles(themes[brand]);\n    return (\n        <MuiThemeProvider theme={themes[brand]}>\n            <Paper className={classes[mode]} id=\"botoes\">\n                <Typography variant=\"h3\">Botões de Ícones</Typography>\n                <br />\n                <Divider />\n                <br />\n                <Grid container direction=\"column\" justify=\"center\" spacing={2} alignItems=\"flex-start\">\n                    <Grid item xs={12}>\n                        <Typography variant=\"subtitle1\">Botões com Ícone Default com Notificação</Typography>\n                        <br />\n                        <Button\n                            color={color}\n                            label={label}\n                            icon={<Filter />}\n                            variant={variant}\n                            size={size}\n                            iconPosition={iconPosition}\n                        />\n                        <Badge content={10}>\n                            <Button\n                                color={color}\n                                label={label}\n                                icon={<Filter />}\n                                variant={variant}\n                                size={size}\n                                iconPosition={iconPosition}\n                            />\n                        </Badge>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"subtitle1\">Botão Agrupado</Typography>\n                        <br />\n                        <Button\n                            color={color}\n                            label={label}\n                            icon={<Filter />}\n                            iconPosition={iconPosition}\n                            grouped={1}\n                            variant={variant}\n                            size={size}\n                        />\n                        <Button\n                            color={color}\n                            label={label}\n                            icon={<Filter />}\n                            iconPosition={iconPosition}\n                            grouped={2}\n                            variant={variant}\n                            size={size}\n                        />\n                    </Grid>\n                </Grid>\n            </Paper>\n        </MuiThemeProvider>\n    );\n};\n\nconst argsControls = {\n    args: {\n        label: 'Button Text',\n        brand: \"CVC\",\n        mode: \"root\",\n        color: 'primary',\n        variant: 'contained',\n        iconPosition: 'before',\n        size: 'medium'\n    },\n    argTypes: {\n        label: { type: 'string' },\n        brand: {\n            type: \"select\",\n            options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"],\n            brand: \"CVC\",\n            mode: \"root\",\n        },\n        mode: {\n            type: \"select\",\n            options: [\"root\", \"darkBg\"]\n        },\n        color: {\n            options: ['default', 'primary', 'secondary'],\n            control: { type: 'select' }\n        },\n        iconPosition: {\n            options: ['before', 'after'],\n            control: { type: 'radio' }\n        },\n        variant: {\n            options: ['outlined', 'contained'],\n            control: { type: 'radio' }\n        },\n        size: {\n            options: ['small', 'medium', 'large'],\n            control: { type: 'select' }\n        }\n    }\n}\n\nstoriesOf(\"Components/Buttons/Button\", module)\n    .addDecorator(muiTheme([Theme]))\n    .addDecorator(jsxDecorator)\n    .add(\"Ícones\", (args) => <IconButtons {...args}/>, argsControls);\n"],"file":"IconsButtons.stories.js"}