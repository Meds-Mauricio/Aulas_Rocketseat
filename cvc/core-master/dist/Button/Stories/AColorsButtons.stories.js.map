{"version":3,"sources":["../../../src/Button/Stories/AColorsButtons.stories.tsx"],"names":["useStyles","theme","root","boxShadow","shadows","padding","darkBg","background","TypeButtons","label","mode","size","brand","color","variant","disabled","fullWidth","classes","themes","argsControls","args","argTypes","type","options","control","module","addDecorator","Theme","jsxDecorator","add"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDecorator } from \"storybook-addon-jsx\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { storiesOf } from \"@storybook/react\";\nimport { muiTheme } from \"storybook-addon-material-ui\";\nimport Theme from \"../../Theme\";\nimport themes from \"../../Theme/themes\";\nimport Button from \"../Button\";\nimport { BrandType } from \"../../types/brand\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        boxShadow: theme.shadows[24],\n        padding: \"30px\",\n    },\n    darkBg: {\n        background: \"rgba(0, 0, 0, 0.6)\",\n        padding: \"20px\",\n    },\n}));\n\ntype TypeButtonsProps = {\n    label: string,\n    mode: string,\n    size: string,\n    brand: BrandType,\n    color: string,\n    variant: string,\n    disabled: boolean,\n    fullWidth: boolean,\n}\n\nexport const TypeButtons = ({ label, mode, size, brand, color, variant, disabled, fullWidth }: TypeButtonsProps): JSX.Element => {\n    const classes = useStyles(themes[brand]);\n\n    return (\n        <MuiThemeProvider theme={themes[brand]}>\n            <Paper className={classes[mode]} id=\"botoes\">\n                <Typography variant=\"h3\">Tipos e Cores</Typography>\n                <br />\n                <Divider />\n                <br />\n                <Grid item xs={3}>\n                    <Button fullWidth={fullWidth} color={color} label={label} variant={variant} size={size} disabled={disabled} />\n                </Grid>\n            </Paper>\n        </MuiThemeProvider>\n    );\n};\n\nconst argsControls = {\n    args: {\n        label: 'Button Text',\n        brand: \"CVC\",\n        mode: \"root\",\n        size: 'medium',\n        color: 'primary',\n        variant: 'contained',\n        disabled: false,\n        fullWidth: false,\n    },\n    argTypes: {\n        label: { type: 'string' },\n        brand: {\n            type: \"select\",\n            options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n        },\n        mode: {\n            type: \"select\",\n            options: [\"root\", \"darkBg\"]\n        },\n        size: {\n            options: ['small', 'medium', 'large'],\n            control: { type: 'select' }\n        },\n        color: {\n            options: ['default', 'primary', 'secondary'],\n            control: { type: 'select' }\n        },\n        variant: {\n            options: ['outlined', 'contained'],\n            control: { type: 'radio' }\n        },\n        disabled: { type: 'boolean' },\n        fullWidth: { type: 'boolean' }\n    }\n}\n\nstoriesOf(\"Components/Buttons/Button\", module)\n    .addDecorator(muiTheme([Theme]))\n    .addDecorator(jsxDecorator)\n    .add(\"Default\", (args) => <TypeButtons {...args}/>, argsControls);\n"],"file":"AColorsButtons.stories.js"}