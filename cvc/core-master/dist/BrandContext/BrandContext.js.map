{"version":3,"sources":["../../src/BrandContext/BrandContext.tsx"],"names":["Brand","BrandContext","React","createContext","useFetchAllBrands","endpoint","brands","setBrands","fetch","data","json"],"mappings":"ijBAAA,qD,u/BAEYA,CAAAA,K,+BAAAA,K,EAAAA,K,wBAAAA,K,cAAAA,K,gBAAAA,K,iBAAAA,K,MAwFL,GAAMC,CAAAA,YAAY,cAAGC,kBAAMC,aAAN,CAAqB,IAArB,CAArB,C,kCAEA,QAASC,CAAAA,iBAAT,CAA2BC,QAA3B,CAAqC,CACxC,cAA4B,oBAAS,IAAT,CAA5B,wDAAOC,MAAP,eAAeC,SAAf,eACA,qBAAU,UAAM,CACZ,4EAAC,2KACoBC,CAAAA,KAAK,CAACH,QAAD,CADzB,QACOI,IADP,qCAEoBA,CAAAA,IAAI,CAACC,IAAL,EAFpB,QAEOA,IAFP,eAGGH,SAAS,CAACG,IAAD,CAAT,CAHH,qDAAD,IAKH,CAND,CAMG,EANH,EAOA,MAAOJ,CAAAA,MACV","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport enum Brand {\n    Internal = \"internal\",\n    Sub = \"Sub\",\n    CVC = \"CVC\"\n}\n\nexport type MenuItem = { product: string; label: string; link: string; target?: string; icon: string; id?: string };\ntype MenuType = { principals: MenuItem[]; hiddenPrincipals: MenuItem[]; hiddenOthers: MenuItem[]; others: MenuItem[]; phone: string; phoneSales?: string; help: string; register: string; login: string };\n\nexport type FooterType = {\n    sections: { title: string, items: { type: string, text: string, attributes: { [key: string]: string | undefined, target: string, href: string, title: string, rel: string } }[] }[],\n    appTitle: string,\n    apps: { name: string, image: string, url: string }[],\n    socialNetworksTitle: string,\n    socialNetworks: { name: string, icon: string, attributes: { [key: string]: string, target: string, href: string } }[],\n    payments: { title: string, flags: { name: string, icon: string }[], }[],\n    texts: { text: string, textOnBreakMobile: string }[],\n};\n\nexport type Theme = {\n    themeName: string;\n    air: string;\n    alert: string;\n    approved: string;\n    backdrop: string;\n    backdrop70: string;\n    backdrop100: string;\n    border: string;\n    canceled: string;\n    car: string;\n    contrastSecondaryText: string;\n    disabled: string;\n    error: string;\n    hotel: string;\n    offwhite: string;\n    packageColor: string;\n    primary: string;\n    primaryAlpha: string;\n    primaryAlphaDark: string;\n    primaryDark: string;\n    primaryDarkHover: string;\n    primaryLight: string;\n    primaryLighter: string;\n    primaryText: string;\n    processed: string;\n    secondary: string;\n    secondaryDark: string;\n    secondaryHover: string;\n    secondaryLighter: string;\n    secondaryText: string;\n    spot: string;\n    success: string;\n    successHover: string;\n    tabs: string;\n    tabsHover: string;\n    white: string;\n    white30: string;\n    regular: string;\n    bold: string;\n};\n\nexport type BrandContextType = {\n    id: string;\n    name: string;\n    theme: Theme;\n    hosts: string[];\n    brand: Brand;\n    gtwData: { branchId: string; agentSign: string };\n    gtm: string;\n    omnilogicScript: string;\n    menu: MenuType;\n    footer: FooterType;\n    logo: { dark: string; light: string; preferredWidth: string; preferredWidthMobile: string; };\n    favicon: { small: string; big: string; };\n    headerImageBg?: { desktop: string, mobile: string };\n    homeMotorImageBg?: string;\n    homeMessages?: { [key: string]: string };\n    imageProcessorPath?: string;\n    featureToggles: string[]\n    compl?: any;\n    hotjarIds?: {\n        mytravelsFront: number;\n        customerLoyalty: number;\n    };\n    termConditionLink: string;\n    privacityLink: string;\n};\n\nexport const BrandContext = React.createContext((null as unknown) as BrandContextType);\n\nexport function useFetchAllBrands(endpoint) {\n    const [brands, setBrands] = useState(null);\n    useEffect(() => {\n        (async function () {\n            var data = await fetch(endpoint);\n            var json = await data.json();\n            setBrands(json);\n        })();\n    }, []);\n    return brands;\n}\n"],"file":"BrandContext.js"}