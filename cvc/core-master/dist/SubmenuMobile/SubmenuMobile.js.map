{"version":3,"sources":["../../src/SubmenuMobile/SubmenuMobile.js"],"names":["SubmenuMobile","classes","clickBack","menu","isOpen","getMenu","dataMenu","map","item","key","link","target","dropdownLink","icon","label","isOpenAnimation","setOpenAnimation","onOpen","onClose","overlay","opened","closed","header","headerIcon","dropdown","propTypes","PropTypes","oneOfType","string","object","array","bool","styles","withTheme"],"mappings":"oUAAA,qDACA,6DACA,uFACA,2FACA,6DACA,iEACA,2DACA,gC,o/BAEA,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA0C,IAAvCC,CAAAA,OAAuC,MAAvCA,OAAuC,CAA9BC,SAA8B,MAA9BA,SAA8B,CAAnBC,IAAmB,MAAnBA,IAAmB,CAAbC,MAAa,MAAbA,MAAa,CAC5D,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,QAAQ,QACpBA,CAAAA,QAAQ,CAACC,GAAT,CAAa,SAACC,IAAD,CAAOC,GAAP,qBACT,qCAAG,GAAG,CAAEA,GAAR,CAAa,IAAI,CAAED,IAAI,CAACE,IAAxB,CAA8B,MAAM,CAAEF,IAAI,CAACG,MAA3C,CAAmD,SAAS,CAAEV,OAAO,CAACW,YAAtE,eACI,gCAAC,sBAAD,EAAY,IAAI,CAAC,cAAjB,EACKJ,IAAI,CAACK,IADV,KACiBL,IAAI,CAACM,KADtB,CADJ,CADS,CAAb,CADoB,CAAxB,CASA,cAA4C,oBAASV,MAAT,CAA5C,wDAAOW,eAAP,eAAwBC,gBAAxB,eAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBD,gBAAgB,CAAC,IAAD,CACnB,CAFD,CAGA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClBF,gBAAgB,CAAC,KAAD,CACnB,CAFD,CAIA,mBACI,gCAAC,mBAAD,EAAS,MAAM,CAAEZ,MAAjB,CAAyB,MAAM,CAAEa,MAAjC,CAAyC,OAAO,CAAEC,OAAlD,EACKH,eAAe,eAAI,wCAAM,SAAS,CAAEd,OAAO,CAACkB,OAAzB,EADxB,cAEI,uCAAK,SAAS,CAAEJ,eAAe,CAAGd,OAAO,CAACmB,MAAX,CAAoBnB,OAAO,CAACoB,MAA3D,eACI,uCACI,OAAO,CAAE,kBAAM,CACXnB,SAAS,CAAC,IAAD,CACZ,CAHL,eAKI,gCAAC,sBAAD,EAAY,IAAI,CAAC,cAAjB,CAAgC,SAAS,CAAED,OAAO,CAACqB,MAAnD,eACI,gCAAC,qBAAD,EAAW,IAAI,CAAC,OAAhB,CAAwB,SAAS,CAAErB,OAAO,CAACsB,UAA3C,EADJ,SALJ,CADJ,cAWI,gCAAC,oBAAD,EAAU,SAAS,CAAEtB,OAAO,CAACuB,QAA7B,CAAuC,IAAI,CAAEnB,OAAO,CAACF,IAAI,EAAI,EAAT,CAApD,EAXJ,CAFJ,CAiBP,CArCD,CAuCAH,aAAa,CAACyB,SAAd,CAA0B,CACtBxB,OAAO,CAAEyB,sBAAUC,SAAV,CAAoB,CAACD,sBAAUE,MAAX,CAAmBF,sBAAUG,MAA7B,CAApB,CADa,CAEtB1B,IAAI,CAAEuB,sBAAUI,KAFM,CAGtB1B,MAAM,CAAEsB,sBAAUK,IAHI,CAA1B,C,aAMe,2BAAWC,cAAX,CAAmB,CAAEC,SAAS,CAAE,IAAb,CAAnB,EAAwCjC,aAAxC,C","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport ArrowLeft from \"@cvccorp-components/icons/dist/ArrowLeft\";\nimport DropDown from \"../DropDown\";\nimport Typography from \"../Typography\";\nimport Animate from \"../Animate\";\nimport { styles } from \"./styles\";\n\nconst SubmenuMobile = ({ classes, clickBack, menu, isOpen }) => {\n    const getMenu = dataMenu =>\n        dataMenu.map((item, key) => (\n            <a key={key} href={item.link} target={item.target} className={classes.dropdownLink}>\n                <Typography type=\"body2regular\">\n                    {item.icon} {item.label}\n                </Typography>\n            </a>\n        ));\n\n    const [isOpenAnimation, setOpenAnimation] = useState(isOpen);\n\n    const onOpen = () => {\n        setOpenAnimation(true);\n    };\n    const onClose = () => {\n        setOpenAnimation(false);\n    };\n\n    return (\n        <Animate isOpen={isOpen} onOpen={onOpen} onClose={onClose}>\n            {isOpenAnimation && <span className={classes.overlay} />}\n            <div className={isOpenAnimation ? classes.opened : classes.closed}>\n                <div\n                    onClick={() => {\n                        clickBack(true);\n                    }}\n                >\n                    <Typography type=\"body1regular\" className={classes.header}>\n                        <ArrowLeft size=\"small\" className={classes.headerIcon} /> Mais\n                    </Typography>\n                </div>\n\n                <DropDown className={classes.dropdown} menu={getMenu(menu || [])} />\n            </div>\n        </Animate>\n    );\n};\n\nSubmenuMobile.propTypes = {\n    classes: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    menu: PropTypes.array,\n    isOpen: PropTypes.bool,\n};\n\nexport default withStyles(styles, { withTheme: true })(SubmenuMobile);\n"],"file":"SubmenuMobile.js"}