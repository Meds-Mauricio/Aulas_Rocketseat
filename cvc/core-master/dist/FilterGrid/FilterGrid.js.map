{"version":3,"sources":["../../src/FilterGrid/FilterGrid.js"],"names":["FilterGrid","filter","classes","onApply","onReset","label","isAmenities","isLuggage","noModal","onChange","items","isMobile","open","onOpen","onClose","sufix","onActive","className","height","getSelectedValues","selecteds","v","checked","isActive","length","change","option","index","isChecked","Object","assign","cleanFilterOnClose","applied","newItems","el","map","chip","disabled","icon","size","amenitiesText","defaultProps","propTypes","PropTypes","bool","string","func","arrayOf","shape","code","number","elementType","styles","withTheme"],"mappings":"mLAAA,oDACA,gDACA,6DACA,yDACA,iEACA,iCAEA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAmBb,IAlBFC,CAAAA,MAkBE,MAlBFA,MAkBE,CAjBFC,OAiBE,MAjBFA,OAiBE,CAhBFC,QAgBE,MAhBFA,OAgBE,CAfFC,QAeE,MAfFA,OAeE,CAdFC,KAcE,MAdFA,KAcE,CAbFC,WAaE,MAbFA,WAaE,CAZFC,SAYE,MAZFA,SAYE,CAXFC,OAWE,MAXFA,OAWE,CAVFC,QAUE,MAVFA,QAUE,CATFC,KASE,MATFA,KASE,CARFC,QAQE,MARFA,QAQE,CAPFC,IAOE,MAPFA,IAOE,CANFC,OAME,MANFA,MAME,CALFC,QAKE,MALFA,OAKE,CAJFC,KAIE,MAJFA,KAIE,CAHFC,QAGE,MAHFA,QAGE,CAFFC,SAEE,MAFFA,SAEE,CADFC,MACE,MADFA,MACE,CACF,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5B,GAAMC,CAAAA,SAAS,CAAGV,KAAK,CAACT,MAAN,CAAa,SAAAoB,CAAC,QAAIA,CAAAA,CAAC,CAACC,OAAF,GAAc,IAAlB,CAAd,CAAlB,CACA,MAAOF,CAAAA,SACV,CAHD,CAKA,GAAMA,CAAAA,SAAS,CAAGD,iBAAiB,EAAnC,CAEA,GAAMI,CAAAA,QAAQ,CAAG,CAAC,CAACH,SAAS,CAACI,MAA7B,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,MAAD,CAASC,KAAT,CAAgBC,SAAhB,CAA8B,CACzCC,MAAM,CAACC,MAAP,CAAcJ,MAAd,CAAsB,CAAEJ,OAAO,CAAEM,SAAX,CAAtB,EACAC,MAAM,CAACC,MAAP,CAAcpB,KAAK,CAACiB,KAAD,CAAnB,CAA4B,CAAEL,OAAO,CAAEM,SAAX,CAA5B,EACAnB,QAAQ,CAACiB,MAAD,CAAShB,KAAT,CAAR,CACAM,QAAQ,CAACG,iBAAiB,GAAGK,MAApB,CAA6B,CAA9B,CACX,CALD,CAOA,GAAMO,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7B,GAAI,CAAC9B,MAAM,CAAC+B,OAAZ,CAAqB,CACjB,GAAMC,CAAAA,QAAQ,CAAGvB,KAAK,CACjBT,MADY,CACL,SAAAiC,EAAE,QAAIA,CAAAA,EAAE,CAACZ,OAAP,CADG,EAEZa,GAFY,CAER,SAAAD,EAAE,CAAI,CACPA,EAAE,CAACZ,OAAH,CAAa,KAAb,CACA,MAAOY,CAAAA,EACV,CALY,CAAjB,CAMA,GAAIzB,QAAJ,CAAcA,QAAQ,CAACC,KAAD,CAAQuB,QAAR,CAAR,CACd,GAAIjB,QAAJ,CAAcA,QAAQ,CAAC,KAAD,CACzB,CACJ,CAXD,CAaA,mBACI,gCAAC,kBAAD,EACI,KAAK,CAAEX,KADX,CAEI,SAAS,CAAEY,SAFf,CAGI,IAAI,CAAC,MAHT,CAII,OAAO,CAAET,OAJb,CAKI,QAAQ,CAAEG,QALd,CAMI,MAAM,CAAEO,MANZ,CAOI,KAAK,CAAER,KAAK,CAACyB,GAAN,CAAU,SAACT,MAAD,CAASC,KAAT,qBACb,gCAAC,sBAAD,EACI,SAAS,CAAEzB,OAAO,CAACkC,IADvB,CAEI,GAAG,CAAEV,MAFT,CAGI,QAAQ,CAAEA,MAAM,CAACW,QAHrB,CAII,QAAQ,CAAEX,MAAM,CAACJ,OAJrB,CAKI,WAAW,CAAEhB,WALjB,CAMI,SAAS,CAAEC,SANf,CAOI,KAAK,cACD,4CACKmB,MAAM,CAACY,IAAP,eAAe,gCAAC,MAAD,CAAQ,IAAR,EAAa,IAAI,CAAEZ,MAAM,CAACa,IAA1B,EADpB,cAEI,wCAAM,SAAS,CAAErC,OAAO,CAACsC,aAAzB,EAAyCd,MAAM,CAACrB,KAAhD,CAFJ,CARR,CAaI,OAAO,CAAE,iBAAAuB,SAAS,QAAIH,CAAAA,MAAM,CAACC,MAAD,CAASC,KAAT,CAAgBC,SAAhB,CAAV,CAbtB,EADa,CAAV,CAPX,CAwBI,KAAK,CAAEb,KAxBX,CAyBI,MAAM,CAAE,wBAAMF,CAAAA,OAAM,CAAC,IAAD,CAAZ,CAzBZ,CA0BI,OAAO,CAAE,kBAAM,CACXkB,kBAAkB,GAClBjB,QAAO,EACV,CA7BL,CA8BI,MAAM,CAAEF,IA9BZ,CA+BI,OAAO,CAAE,kBAAM,CACXR,QAAO,EACV,CAjCL,CAkCI,OAAO,CAAE,kBAAM,CACXD,QAAO,EACV,CApCL,CAqCI,QAAQ,CAAEiB,SAAS,CAACI,MAAV,GAAqB,CArCnC,CAsCI,QAAQ,CAAE,CAAChB,OAAD,EAAYe,QAtC1B,CAuCI,KAAK,CAAEH,SAAS,CAACI,MAAV,GAAqB,CAArB,CAAyB,CAACJ,SAAS,CAAC,CAAD,CAAT,CAAaf,KAAd,CAAzB,CAAgDe,SAvC3D,EA0CP,CA5FD,CA8FApB,UAAU,CAACyC,YAAX,CAA0B,CACtBnC,WAAW,CAAE,KADS,CAEtBC,SAAS,CAAE,KAFW,CAGtBK,IAAI,CAAE,KAHgB,CAItBD,QAAQ,CAAE,KAJY,CAKtBI,KAAK,CAAE,EALe,CAMtBV,KAAK,CAAE,EANe,CAOtBG,OAAO,CAAE,KAPa,CAQtBE,KAAK,CAAE,EARe,CAStBG,MAAM,CAAE,iBAAM,CAAE,CATM,CAUtBC,OAAO,CAAE,kBAAM,CAAE,CAVK,CAWtBX,OAAO,CAAE,kBAAM,CAAE,CAXK,CAYtBC,OAAO,CAAE,kBAAM,CAAE,CAZK,CAatBK,QAAQ,CAAE,mBAAM,CAAE,CAbI,CActBO,QAAQ,CAAE,mBAAM,CAAE,CAdI,CAA1B,CAiBAhB,UAAU,CAAC0C,SAAX,CAAuB,CACnBpC,WAAW,CAAEqC,sBAAUC,IADJ,CAEnBrC,SAAS,CAAEoC,sBAAUC,IAFF,CAGnBjC,QAAQ,CAAEgC,sBAAUC,IAHD,CAInBpC,OAAO,CAAEmC,sBAAUC,IAJA,CAKnBhC,IAAI,CAAE+B,sBAAUC,IALG,CAMnBvC,KAAK,CAAEsC,sBAAUE,MANE,CAOnBhC,MAAM,CAAE8B,sBAAUG,IAPC,CAQnBhC,OAAO,CAAE6B,sBAAUG,IARA,CASnB3C,OAAO,CAAEwC,sBAAUG,IATA,CAUnB1C,OAAO,CAAEuC,sBAAUG,IAVA,CAWnBrC,QAAQ,CAAEkC,sBAAUG,IAXD,CAYnB9B,QAAQ,CAAE2B,sBAAUG,IAZD,CAanB/B,KAAK,CAAE4B,sBAAUE,MAbE,CAcnBnC,KAAK,CAAEiC,sBAAUI,OAAV,CACHJ,sBAAUK,KAAV,CAAgB,CACZC,IAAI,CAAEN,sBAAUO,MADJ,CAEZ7C,KAAK,CAAEsC,sBAAUE,MAFL,CAGZP,IAAI,CAAEK,sBAAUQ,WAHJ,CAIZZ,IAAI,CAAEI,sBAAUE,MAJJ,CAKZvB,OAAO,CAAEqB,sBAAUC,IALP,CAAhB,CADG,CAdY,CAAvB,C,aAyBe,uBAAWQ,eAAX,CAAmB,CAAEC,SAAS,CAAE,IAAb,CAAnB,EAAwCrD,UAAxC,C","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport Filter from \"../Filter\";\nimport FilterChip from \"../FilterChip\";\nimport { styles } from \"./styles\";\n\nconst FilterGrid = ({\n    filter,\n    classes,\n    onApply,\n    onReset,\n    label,\n    isAmenities,\n    isLuggage,\n    noModal,\n    onChange,\n    items,\n    isMobile,\n    open,\n    onOpen,\n    onClose,\n    sufix,\n    onActive,\n    className,\n    height,\n}) => {\n    const getSelectedValues = () => {\n        const selecteds = items.filter(v => v.checked === true);\n        return selecteds;\n    };\n\n    const selecteds = getSelectedValues();\n\n    const isActive = !!selecteds.length;\n\n    const change = (option, index, isChecked) => {\n        Object.assign(option, { checked: isChecked });\n        Object.assign(items[index], { checked: isChecked });\n        onChange(option, items);\n        onActive(getSelectedValues().length > 0);\n    };\n\n    const cleanFilterOnClose = () => {\n        if (!filter.applied) {\n            const newItems = items\n                .filter(el => el.checked)\n                .map(el => {\n                    el.checked = false;\n                    return el;\n                });\n            if (onChange) onChange(items, newItems);\n            if (onActive) onActive(false);\n        }\n    };\n\n    return (\n        <Filter\n            label={label}\n            className={className}\n            type=\"grid\"\n            noModal={noModal}\n            isMobile={isMobile}\n            height={height}\n            items={items.map((option, index) => (\n                <FilterChip\n                    className={classes.chip}\n                    key={option}\n                    disabled={option.disabled}\n                    isActive={option.checked}\n                    isAmenities={isAmenities}\n                    isLuggage={isLuggage}\n                    label={\n                        <span>\n                            {option.icon && <option.icon size={option.size} />}\n                            <span className={classes.amenitiesText}>{option.label}</span>\n                        </span>\n                    }\n                    onClick={isChecked => change(option, index, isChecked)}\n                />\n            ))}\n            sufix={sufix}\n            onOpen={() => onOpen(true)}\n            onClose={() => {\n                cleanFilterOnClose();\n                onClose();\n            }}\n            isOpen={open}\n            onReset={() => {\n                onReset();\n            }}\n            onApply={() => {\n                onApply();\n            }}\n            disabled={selecteds.length === 0}\n            isActive={!noModal && isActive}\n            value={selecteds.length === 1 ? [selecteds[0].label] : selecteds}\n        />\n    );\n};\n\nFilterGrid.defaultProps = {\n    isAmenities: false,\n    isLuggage: false,\n    open: false,\n    isMobile: false,\n    sufix: \"\",\n    label: \"\",\n    noModal: false,\n    items: [],\n    onOpen: () => {},\n    onClose: () => {},\n    onApply: () => {},\n    onReset: () => {},\n    onChange: () => {},\n    onActive: () => {},\n};\n\nFilterGrid.propTypes = {\n    isAmenities: PropTypes.bool,\n    isLuggage: PropTypes.bool,\n    isMobile: PropTypes.bool,\n    noModal: PropTypes.bool,\n    open: PropTypes.bool,\n    label: PropTypes.string,\n    onOpen: PropTypes.func,\n    onClose: PropTypes.func,\n    onApply: PropTypes.func,\n    onReset: PropTypes.func,\n    onChange: PropTypes.func,\n    onActive: PropTypes.func,\n    sufix: PropTypes.string,\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            code: PropTypes.number,\n            label: PropTypes.string,\n            icon: PropTypes.elementType,\n            size: PropTypes.string,\n            checked: PropTypes.bool,\n        })\n    ),\n};\n\nexport default withStyles(styles, { withTheme: true })(FilterGrid);\n"],"file":"FilterGrid.js"}