{"version":3,"sources":["../../src/storybook-utils/BrandsContainer.jsx"],"names":["fetchbrand","Promise","resolve","setTimeout","jsonBrand","useFetchAllBrands","endpoint","brands","setBrands","then","d","BrandContainer","children","companyName","setCompanyName","AllBrands","brandOptions","map","brand","index","theme","themeName","name","value","label","ev","target","BrandContainers"],"mappings":"qfAAA,6CACA,mFACA,qDACA,yDACA,sDACA,0C,o/BACA;AAGA,GAAMA,CAAAA,UAAU,8GAAG,uKACR,GAAIC,CAAAA,OAAJ,CAAY,SAAAC,OAAO,CAAI,CAC1BC,UAAU,CAAC,UAAM,CACbD,OAAO,CAACE,iBAAD,CACV,CAFS,CAEP,GAFO,CAGb,CAJM,CADQ,uDAAH,kBAAVJ,CAAAA,UAAU,wCAAhB,CAQA,QAASK,CAAAA,iBAAT,CAA2BC,QAA3B,CAAqC,CACjC,cAA4B,oBAAS,IAAT,CAA5B,wDAAOC,MAAP,eAAeC,SAAf,eACA,qBAAU,UAAM,CACZ,4EAAC,4IACGR,UAAU,GAAGS,IAAb,CAAkB,SAACC,CAAD,QAAOF,CAAAA,SAAS,CAACE,CAAD,CAAhB,CAAlB,EADH,uDAAD,IAGH,CAJD,CAIG,EAJH,EAKA,MAAOH,CAAAA,MACV,CAID,GAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,OAAkB,IAAfC,CAAAA,QAAe,OAAfA,QAAe,CACrC;AACA,eAAsC,oBAAS,KAAT,CAAtC,yDAAOC,WAAP,eAAoBC,cAApB,eACA,GAAMP,CAAAA,MAAM,CAAG,sBAAWQ,SAAX,CAAf,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,MAAOT,CAAAA,MAAM,CAACU,GAAP,CAAW,SAACC,KAAD,CAAQC,KAAR,qBACd,0CAAQ,GAAG,CAAEA,KAAb,CAAoB,KAAK,CAAED,KAAK,CAACE,KAAN,CAAYC,SAAvC,EAAmDH,KAAK,CAACI,IAAzD,CADc,CAAX,CAGV,CAJD,CAMA,GAAIf,MAAM,EAAI,IAAd,CAAoB,CAChB,mBAAO,2DACV,CAED;AACA;AACA;AAEA,mBACI,gCAAC,8BAAD,mBACI,gCAAC,kCAAD,EAAsB,MAAM,CAAEA,MAA9B,CAAsC,QAAQ,CAAEM,WAAhD,eACI,gCAAC,+BAAD,mBACI,wDACI,gCAAC,kBAAD,EACI,KAAK,CAAC,eADV,CAEI,MAAM,CAAE,CACJ,CACIU,KAAK,CAAE,KADX,CAEIC,KAAK,CAAE,KAFX,CADI,CAKJ,CACID,KAAK,CAAE,KADX,CAEIC,KAAK,CAAE,KAFX,CALI,CAFZ,CAYI,KAAK,CAAEX,WAZX,CAaI,QAAQ,CAAE,kBAACY,EAAD,QAAQX,CAAAA,cAAc,CAACW,EAAE,CAACC,MAAH,CAAUH,KAAX,CAAtB,CAbd,EADJ,CADJ,cAkBI,0CAlBJ,CAmBKX,QAnBL,CADJ,CADJ,CA0BP,CA9CD,CAgDA,GAAMe,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,OAAkB,IAAff,CAAAA,QAAe,OAAfA,QAAe,CACtC,mBACI,gCAAC,8BAAD,mBACI,gCAAC,cAAD,MACKA,QADL,CADJ,CAMP,CARD,C,aAUee,e","sourcesContent":["import { BrandContextProvider } from \"../BrandContext\";\nimport ThemeProviderCustom from \"../ThemeProviderCustom\";\nimport React, { Children, useContext, useState, useEffect } from \"react\";\nimport Select from \"../Select\";\nimport jsonBrand from \"./brand\";\nimport { AllBrandsProvider } from \"./BrandsUtils\";\n// import { useFetchAllBrands } from \"../BrandContext/BrandContext\";\n\n\nconst fetchbrand = async () => {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve(jsonBrand);\n        }, 300);\n    });\n};\n\nfunction useFetchAllBrands(endpoint) {\n    const [brands, setBrands] = useState(null);\n    useEffect(() => {\n        (async function () {\n            fetchbrand().then((d) => setBrands(d));\n        })();\n    }, []);\n    return brands;\n}\n\n\n\nconst BrandContainer = ({ children }) => {\n    // to change brand, change default usestate value to \"sub\", \"cvccorp\" or \"cvc\"\n    const [companyName, setCompanyName] = useState(\"sub\");\n    const brands = useContext(AllBrands);\n\n    const brandOptions = () => {\n        return brands.map((brand, index) => (\n            <option key={index} value={brand.theme.themeName}>{brand.name}</option>\n        ));\n    };\n\n    if (brands == null) {\n        return <div>Carregando...</div>;\n    }\n\n    // if (onBrandLoad) {\n    //   setTimeout(() => onBrandLoad(), 2000);\n    // }\n\n    return (\n        <AllBrandsProvider>\n            <BrandContextProvider brands={brands} hostname={companyName}>\n                <ThemeProviderCustom>\n                    <div>\n                        <Select\n                            label=\"Current Brand\"\n                            select={[\n                                {\n                                    value: \"cvc\",\n                                    label: \"cvc\",\n                                },\n                                {\n                                    value: \"sub\",\n                                    label: \"sub\",\n                                },\n                            ]}\n                            value={companyName}\n                            onChange={(ev) => setCompanyName(ev.target.value)}\n                        />\n                    </div>\n                    <br />\n                    {children}\n                </ThemeProviderCustom>\n            </BrandContextProvider>\n        </AllBrandsProvider>\n    );\n};\n\nconst BrandContainers = ({ children }) => {\n    return (\n        <AllBrandsProvider>\n            <BrandContainer>\n                {children}\n            </BrandContainer>\n        </AllBrandsProvider>\n    );\n};\n\nexport default BrandContainers;\n"],"file":"BrandsContainer.js"}