{"version":3,"sources":["../../src/MapBundle/MapBundle.js"],"names":["clusterStyles","url","map","height","width","textColor","MapGroup","defaultData","data","zoom","active","handleSelect","handleMarkerCluster","gridSize","maxZoom","minimumClusterSize","onZoomChanged","mapRefs","onMarkerCluster","cluster","getMarkers","handleOnZoomChanged","current","lat","coordinates","latitude","lng","longitude","streetViewControl","fullscreenControl","mapTypeControl","item","JSON","stringify","id","closeBoxURL","enableEventPropagation","rate","totalPrice"],"mappings":"wOAAA,qDACA,kDAMA,gHACA,gGACA,gCACA,kE,o/BAGA,GAAMA,CAAAA,aAAa,CAAG,CAClB,CACIC,GAAG,CAAEC,eADT,CAEIC,MAAM,CAAE,EAFZ,CAGIC,KAAK,CAAE,EAHX,CAIIC,SAAS,CAAE,SAJf,CADkB,CAAtB,CASA,GAAMC,CAAAA,QAAQ,CAAG,kCACb,mCACI,cAWM,IAVFC,CAAAA,WAUE,MAVFA,WAUE,CATFC,IASE,MATFA,IASE,CARFC,IAQE,MARFA,IAQE,CAPFC,MAOE,MAPFA,MAOE,CANFC,YAME,MANFA,YAME,CALFC,mBAKE,MALFA,mBAKE,CAJFC,QAIE,MAJFA,QAIE,CAHFC,OAGE,MAHFA,OAGE,CAFFC,kBAEE,MAFFA,kBAEE,CADFC,aACE,MADFA,aACE,CACF,GAAMC,CAAAA,OAAO,CAAG,kBAAO,IAAP,CAAhB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,OAAO,CAAI,CAC/B,GAAIP,mBAAJ,CAAyBA,mBAAmB,CAACO,OAAO,CAACC,UAAR,EAAD,CAC/C,CAFD,CAIA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9B,GAAIL,aAAJ,CAAmBA,aAAa,CAACC,OAAO,CAACK,OAAT,CACnC,CAFD,CAIA,MAAOd,CAAAA,IAAI,cACP,6EACI,gCAAC,0BAAD,EACI,WAAW,CAAEC,IADjB,CAEI,aAAa,CAAE,CACXc,GAAG,CAAEhB,WAAW,CAACiB,WAAZ,CAAwBC,QADlB,CAEXC,GAAG,CAAEnB,WAAW,CAACiB,WAAZ,CAAwBG,SAFlB,CAFnB,CAMI,OAAO,CAAE,CACLC,iBAAiB,CAAE,KADd,CAELC,iBAAiB,CAAE,KAFd,CAGLC,cAAc,CAAE,KAHX,CANb,CAWI,GAAG,CAAEb,OAXT,CAYI,aAAa,CAAEI,mBAZnB,eAcI,gCAAC,2BAAD,EACI,aAAa,KADjB,CAEI,iBAAiB,KAFrB,CAGI,QAAQ,CAAER,QAHd,CAII,OAAO,CAAEC,OAJb,CAKI,kBAAkB,CAAEC,kBALxB,CAMI,aAAa,CAAEf,aANnB,CAOI,OAAO,CAAE,iBAAAmB,OAAO,QAAID,CAAAA,eAAe,CAACC,OAAD,CAAnB,CAPpB,EASKX,IAAI,EACjBA,IAAI,CAACN,GAAL,CAAS,SAAA6B,IAAI,CAAI,CACb,mBACI,gCAAC,uBAAD,EACI,KAAK,CAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf,CADX,CAEI,IAAI,CAAEA,IAAI,CAACG,EAFf,CAGI,GAAG,CAAEH,IAAI,CAACG,EAHd,CAII,QAAQ,CAAE,CACNX,GAAG,CAAEQ,IAAI,CAACP,WAAL,CAAiBC,QADhB,CAENC,GAAG,CAAEK,IAAI,CAACP,WAAL,CAAiBG,SAFhB,CAJd,CAQI,OAAO,CAAE,KARb,eAUI,gCAAC,mBAAD,EACI,OAAO,CAAE,CACLQ,WAAW,CAAE,EADR,CAELC,sBAAsB,CAAE,IAFnB,CADb,eAMI,gCAAC,cAAD,EACI,MAAM,CAAE1B,MAAM,GAAKqB,IAAI,CAACG,EAD5B,CAEI,OAAO,CAAE,yBAAMvB,CAAAA,YAAY,CAACoB,IAAD,CAAlB,CAFb,eAII,sEAAMA,IAAI,CAACM,IAAL,CAAUC,UAAhB,CAJJ,CANJ,CAVJ,CAyBP,CA3BD,CAVQ,CAdJ,CADJ,CADO,CAyDP,IACP,CAjFL,CADa,CAAjB,C,aAsFehC,Q","sourcesContent":["import React, { useRef } from \"react\";\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n} from \"react-google-maps\";\nimport MarkerClusterer from \"react-google-maps/lib/components/addons/MarkerClusterer\";\nimport InfoBox from \"react-google-maps/lib/components/addons/InfoBox\";\nimport { Bubbly } from \"./styles\";\nimport map from \"../assets/img/map.png\";\nimport \"./styles.css\";\n\nconst clusterStyles = [\n    {\n        url: map,\n        height: 72,\n        width: 72,\n        textColor: \"#97007C\",\n    },\n];\n\nconst MapGroup = withScriptjs(\n    withGoogleMap(\n        ({\n            defaultData,\n            data,\n            zoom,\n            active,\n            handleSelect,\n            handleMarkerCluster,\n            gridSize,\n            maxZoom,\n            minimumClusterSize,\n            onZoomChanged,\n        }) => {\n            const mapRefs = useRef(null);\n\n            const onMarkerCluster = cluster => {\n                if (handleMarkerCluster) handleMarkerCluster(cluster.getMarkers());\n            };\n\n            const handleOnZoomChanged = () => {\n                if (onZoomChanged) onZoomChanged(mapRefs.current);\n            };\n\n            return data ? (\n                <>\n                    <GoogleMap\n                        defaultZoom={zoom}\n                        defaultCenter={{\n                            lat: defaultData.coordinates.latitude,\n                            lng: defaultData.coordinates.longitude,\n                        }}\n                        options={{\n                            streetViewControl: false,\n                            fullscreenControl: false,\n                            mapTypeControl: false,\n                        }}\n                        ref={mapRefs}\n                        onZoomChanged={handleOnZoomChanged}\n                    >\n                        <MarkerClusterer\n                            averageCenter\n                            enableRetinaIcons\n                            gridSize={gridSize}\n                            maxZoom={maxZoom}\n                            minimumClusterSize={minimumClusterSize}\n                            defaultStyles={clusterStyles}\n                            onClick={cluster => onMarkerCluster(cluster)}\n                        >\n                            {data &&\n                data.map(item => {\n                    return (\n                        <Marker\n                            title={JSON.stringify(item)}\n                            name={item.id}\n                            key={item.id}\n                            position={{\n                                lat: item.coordinates.latitude,\n                                lng: item.coordinates.longitude,\n                            }}\n                            visible={false}\n                        >\n                            <InfoBox\n                                options={{\n                                    closeBoxURL: \"\",\n                                    enableEventPropagation: true,\n                                }}\n                            >\n                                <Bubbly\n                                    active={active === item.id}\n                                    onClick={() => handleSelect(item)}\n                                >\n                                    <>R$ {item.rate.totalPrice}</>\n                                </Bubbly>\n                            </InfoBox>\n                        </Marker>\n                    );\n                })}\n                        </MarkerClusterer>\n                    </GoogleMap>\n                </>\n            ) : null;\n        }\n    )\n);\n\nexport default MapGroup;\n"],"file":"MapBundle.js"}