{"version":3,"sources":["../../src/utils/useGa.ts"],"names":["useGa","saveOnGa","dataLayer","hostname","includes","window","push","console","info"],"mappings":"kcAAA,4BACA,0E,oyBASA,GAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAChB,GAAMC,CAAAA,QAAQ,CAAG,oIAAY,iBAAOC,SAAP,sHACzB,GAAI,CAAC,wCAAcC,QAAd,CAAuBC,QAAvB,CAAgC,OAAhC,CAAL,CAA+C,CAC3C,GAAI,MAAOC,CAAAA,MAAP,GAAkB,WAAtB,CAAmC,CAC9BA,MAAD,CAAgBH,SAAhB,CAA0BI,IAA1B,kBAAoCJ,SAApC,EACH,CACJ,CAJD,IAIO,CACH;AACAK,OAAO,CAACC,IAAR,CAAa,gCAAb,kBAAoDN,SAApD,EACH,CARwB,qDAAZ,6DAUd,EAVc,CAAjB,CAYA,MAAO,CAAED,QAAQ,CAARA,QAAF,CACV,CAdD,C,aAgBeD,K","sourcesContent":["import { useCallback } from \"react\"\nimport { getHostName } from \"../BrandContext/BrandContextProvider\";\n\ntype DataLayer = {\n    event: string;\n    category: string;\n    action: string;\n    label: string;\n}\n\nconst useGa = () => {\n    const saveOnGa = useCallback(async (dataLayer: DataLayer) => {\n        if (!getHostName().hostname.includes(\"local\")) {\n            if (typeof window !== \"undefined\") {\n                (window as any).dataLayer.push({ ...dataLayer })\n            }\n        } else {\n            // eslint-disable-next-line no-console\n            console.info(\"LOCALHOST: ENVIADO AO GA ==== \", { ...dataLayer });\n        }\n\n    }, []);\n\n    return { saveOnGa };\n}\n\nexport default useGa;\n"],"file":"useGa.js"}