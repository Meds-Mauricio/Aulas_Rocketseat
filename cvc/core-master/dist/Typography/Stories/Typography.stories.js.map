{"version":3,"sources":["../../../src/Typography/Stories/Typography.stories.tsx"],"names":["useStyles","theme","root","background","palette","boxShadow","shadows","padding","darkBg","TypographyStory","mode","brand","type","label","classes","themes","argsControls","args","argTypes","options","module","add"],"mappings":"gGAAA,oDACA,uCACA,oEACA,gDACA,gFACA,kEACA,wCACA,kEAGA,GAAMA,CAAAA,SAAS,CAAG,uBAAW,SAACC,KAAD,QAAY,CACrCC,IAAI,CAAE,CACFC,UAAU,CAAEF,KAAK,CAACG,OAAN,CAAcD,UAAd,WADV,CAEFE,SAAS,CAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAFT,CAGFC,OAAO,CAAE,MAHP,CAD+B,CAMrCC,MAAM,CAAE,CACJL,UAAU,CAAE,oBADR,CAEJE,SAAS,CAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAFP,CAGJC,OAAO,CAAE,MAHL,CAN6B,CAAZ,CAAX,CAAlB,CAoBA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAEI,IADxBC,CAAAA,IACwB,MADxBA,IACwB,CADlBC,KACkB,MADlBA,KACkB,CADXC,IACW,MADXA,IACW,CADLC,KACK,MADLA,KACK,CACxB,GAAMC,CAAAA,OAAO,CAAGd,SAAS,CAACe,mBAAOJ,KAAP,CAAD,CAAzB,CAEA,mBACI,gCAAC,wBAAD,EAAkB,KAAK,CAAEI,mBAAOJ,KAAP,CAAzB,eACI,gCAAC,WAAD,EAAO,SAAS,CAAEG,OAAO,CAACJ,IAAD,CAAzB,CAAiC,EAAE,CAAC,YAApC,eACI,gCAAC,sBAAD,EAAe,OAAO,CAAC,IAAvB,eADJ,cAEI,gCAAC,aAAD,MAFJ,cAGI,gCAAC,gBAAD,EACI,SAAS,KADb,CAEI,SAAS,CAAC,QAFd,eAII,gCAAC,uBAAD,EAAY,IAAI,CAAEE,IAAlB,EACKC,KADL,CAJJ,cAOI,sDAAG,8CAASD,IAAT,CAAH,WAPJ,CAHJ,CADJ,CAiBP,CAvBD,CAyBA,GAAMI,CAAAA,YAAY,CAAG,CACjBC,IAAI,CAAE,CACFN,KAAK,CAAE,KADL,CAEFD,IAAI,CAAE,MAFJ,CAGFE,IAAI,CAAE,WAHJ,CAIFC,KAAK,CAAE,2CAJL,CADW,CAOjBK,QAAQ,CAAE,CACNP,KAAK,CAAE,CACHC,IAAI,CAAE,QADH,CAEHO,OAAO,CAAE,CAAC,eAAD,CAAkB,aAAlB,CAAiC,KAAjC,CAAwC,SAAxC,CAAmD,WAAnD,CAAgE,KAAhE,CAFN,CADD,CAKNT,IAAI,CAAE,CACFE,IAAI,CAAE,QADJ,CAEFO,OAAO,CAAE,CAAC,MAAD,CAAS,QAAT,CAFP,CALA,CASNP,IAAI,CAAE,CACFA,IAAI,CAAE,QADJ,CAEFO,OAAO,CAAE,CACL,WADK,CAEL,WAFK,CAGL,WAHK,CAIL,WAJK,CAKL,WALK,CAML,WANK,CAOL,cAPK,CAQL,cARK,CASL,eATK,CAUL,eAVK,CAWL,UAXK,CAYL,gBAZK,CAaL,iBAbK,CAFP,CATA,CA2BNN,KAAK,CAAE,CACHD,IAAI,CAAE,QADH,CA3BD,CAPO,CAArB,CAyCA,sBAAU,kBAAV,CAA8BQ,MAA9B,EACKC,GADL,CACS,SADT,CACoB,SAACJ,IAAD,qBAAU,gCAAC,eAAD,CAAqBA,IAArB,CAAV,CADpB,CAC4DD,YAD5D","sourcesContent":["import React from \"react\";\nimport { Paper, Divider, } from \"@material-ui/core\";\nimport Grid, { GridSpacing } from \"@material-ui/core/Grid\";\nimport { makeStyles , MuiThemeProvider } from \"@material-ui/core/styles\";\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport Typography from \"../Typography\";\nimport { storiesOf } from \"@storybook/react\";\nimport themes from \"../../Theme/themes\";\nimport { BrandType } from \"../../types/brand\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: theme.palette.background.default,\n        boxShadow: theme.shadows[8],\n        padding: \"30px\",\n    },\n    darkBg: {\n        background: \"rgba(0, 0, 0, 0.6)\",\n        boxShadow: theme.shadows[8],\n        padding: \"30px\",\n    },\n}));\n\ntype TypographyStoryProps = {\n    mode: string,\n    brand: BrandType,\n    type: string,\n    label: string\n}\n\nconst TypographyStory = ({\n    mode, brand, type, label\n}: TypographyStoryProps) => {\n    const classes = useStyles(themes[brand]);\n\n    return (\n        <MuiThemeProvider theme={themes[brand]}>\n            <Paper className={classes[mode]} id=\"Typography\">\n                <MuiTypography variant=\"h5\">Tipografia</MuiTypography>\n                <Divider />\n                <Grid\n                    container\n                    direction=\"column\"\n                >\n                    <Typography type={type}>\n                        {label}\n                    </Typography>\n                    <p><strong>{type}</strong> - Hind</p>\n                </Grid>\n            </Paper>\n        </MuiThemeProvider>\n\n    );\n};\n\nconst argsControls = {\n    args: {\n        brand: \"CVC\",\n        mode: \"root\",\n        type: \"headline1\",\n        label: \"A viagem dos seus sonhos comeÃ§a na CVC\"\n    },\n    argTypes: {\n        brand: {\n            type: \"select\",\n            options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n        },\n        mode: {\n            type: \"select\",\n            options: [\"root\", \"darkBg\"]\n        },\n        type: {\n            type: \"select\",\n            options: [\n                \"headline1\", \n                \"headline2\", \n                \"headline3\", \n                \"headline4\", \n                \"headline5\", \n                \"headline6\", \n                \"body1regular\", \n                \"body2regular\",\n                \"body1semibold\", \n                \"body2semibold\",\n                \"subtitle\",\n                \"captionregular\", \n                \"captionsemibold\"\n            ]\n        },\n        label: {\n            type: \"string\",\n        },\n    }\n}\n\n\nstoriesOf(\"Theme/Typography\", module)\n    .add(\"Default\", (args) => <TypographyStory {...args}/>, argsControls);\n"],"file":"Typography.stories.js"}