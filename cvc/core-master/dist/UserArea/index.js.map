{"version":3,"sources":["../../src/UserArea/index.js"],"names":["Header","user","lightTheme","className","ctx","BrandContext","desktopSize","classes","saveOnGa","isUserAuth","setIsUserAuth","isConfig","logout","profileData","getProfileInformations","isLogged","setIsLogged","cognitoIdToken","cookies","Cookies","corpAgentId","get","isAuth","handleClickMyTrip","event","category","action","label","window","location","href","name","birthdate","contact","cpf","getProfile","profileResp","hasProfileInfo","noReload","requiredProfileInformations","profileInfo","willBeSavedInGA","loginNoRegister","loginBtn","loggedLight","logged","avatarLight","avatar","slice","userLight","hello","menu","login","loginBtnTxt","propTypes","PropTypes","object","bool","string"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { Avatar, useMediaQuery } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport Cookies from \"universal-cookie\";\nimport { BrandContext } from \"../BrandContext\";\nimport Button from \"../Button\";\nimport ModalLogin from \"../MyTravelLogin/shared/components/ModalLogin\";\nimport { useProfileContext } from \"../ProfileContext\";\nimport Typography from \"../Typography\";\nimport { useUserDataContext } from \"../UserContext\";\nimport { featureToggles, verifyIsBrand, findCognitoIdToken } from \"../utils\"\nimport useGa from \"../utils/useGa\";\nimport useCognitoIdTokenUpdate from \"./CognitoIdTokenUpdate\";\nimport { UserAreaInfo, UserAreaButtons, UserAreaIcon } from \"./components\";\nimport { useStyles } from \"./styles\"\n\nconst Header = ({ user, lightTheme, className }) => {\n    const ctx = useContext(BrandContext);\n    const desktopSize = useMediaQuery(\"(min-width:768px)\");\n    const classes = useStyles({});\n    const { saveOnGa } = useGa();\n    const { isUserAuth, setIsUserAuth, isConfig, logout } = useUserDataContext();\n    const { profileData, getProfileInformations } = useProfileContext();\n\n    const [isLogged, setIsLogged] = useState(false);\n\n    const { cognitoIdToken } = useCognitoIdTokenUpdate();\n\n    const cookies = new Cookies();\n    const corpAgentId = cookies.get(\"corpAgentId\");\n\n    useEffect(() => {\n        if (isConfig) {\n            const isAuth = async () => {\n                setIsUserAuth(isUserAuth);\n            };\n            isAuth();\n        }\n    }, [isConfig, isUserAuth]);\n\n    const handleClickMyTrip = () => {\n        saveOnGa({\n            event: \"header_event\",\n            category: \"Account\",\n            action: \"Click on header options\",\n            label: \"click on header item :: mytrips\"\n        });\n        window.location.href = \"/mytravels/reservations/\"\n    };\n\n    useEffect(() => {\n        setIsLogged(cognitoIdToken);\n    }, [cognitoIdToken]);\n\n    const { name, birthdate, contact, cpf } = profileData\n\n    const getProfile = useCallback(async() => {\n        const profileResp = await getProfileInformations()\n        const hasProfileInfo = !!profileResp?.name && !!profileResp?.birthdate && !!profileResp?.contact && !!profileResp?.cpf\n        if(!hasProfileInfo){\n            logout({\n                noReload: true\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        if(featureToggles(ctx, \"PROFILE\") && isUserAuth){\n            getProfile()\n        }\n    }, [isUserAuth])\n\n    const requiredProfileInformations = useMemo(() => {\n        return !!name && !!birthdate && !!contact && !!cpf\n    }, [birthdate, contact, cpf, name])\n\n    const profileInfo = useMemo(() => {\n        if(featureToggles(ctx, \"PROFILE\")){\n            return requiredProfileInformations\n        }\n        return true\n\n    }, [ctx, requiredProfileInformations])\n\n    if (verifyIsBrand(ctx, \"Sub\") || featureToggles(ctx, \"NEW_LOGIN\")) {\n        if ((!!findCognitoIdToken() || !!cognitoIdToken || !!isLogged || !!corpAgentId) && profileInfo ) {\n            return (\n                <UserAreaButtons\n                    lightTheme={lightTheme}\n                    className={className}\n                    onClickLogout={() => logout({\n                        willBeSavedInGA: true\n                    })}\n                    onClickMyTravels={handleClickMyTrip}\n                    newLogin={featureToggles(ctx, \"NEW_LOGIN\")}\n                    employer={corpAgentId}\n                    isCVC={verifyIsBrand(ctx, \"CVC\")}\n                    isMobile={!desktopSize}\n                    isLogged\n                />\n            );\n        }\n\n        return (\n            <div className={`${classes.loginNoRegister} ${className} login-info-container`}>\n                <ModalLogin\n                    textBtnLogin={\n                        featureToggles(ctx, \"NEW_LOGIN\")\n                            ? <UserAreaIcon\n                                isEmployer\n                                text={featureToggles(ctx, \"NEW_LOGIN\") ? \"Entre ou cadastre-se\" : null}\n                                isMobile={!desktopSize}\n                            />\n                            : \"Entrar\"\n                    }\n                    isMobile={!desktopSize}\n                    newLogin={featureToggles(ctx, \"NEW_LOGIN\") ? classes.loginBtn : null}\n                />\n            </div>\n        );\n    }\n\n    if (user) {\n        return (\n            <div className={`${lightTheme ? classes.loggedLight : classes.logged} ${className} login-info-container`}>\n                <Avatar className={lightTheme ? classes.avatarLight : classes.avatar} src={user.avatar}>\n                    {user.name.slice(0, 2)}\n                </Avatar>\n                <UserAreaInfo\n                    userName={user.name}\n                    className={lightTheme ? classes.userLight : classes.user}\n                    hiddenMyTravels={!lightTheme}\n                    newLogin={featureToggles(ctx, \"NEW_LOGIN\")}\n                />\n                {lightTheme && <Button color=\"primary\" label=\"Sair\" size=\"small\" variant=\"outlined\" className={classes.logout} />}\n            </div>\n        );\n    }\n\n    if (lightTheme) {\n        return (\n            <div className={`${classes.loginNoRegister} ${className} login-info-container`}>\n                <div>\n                    <UserAreaInfo\n                        userName=\"Viajante\"\n                        className={classes.hello}\n                    />\n                </div>\n                <div>\n                    <Button color=\"primary\" label=\"Entrar\" size=\"small\" variant=\"outlined\" href={ctx.menu.login} />\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className={`${classes.login}  ${className} login-info-container`}>\n            <a className={classes.loginBtn} href={ctx.menu.login}>\n                <Typography type=\"body2semibold\" className={classes.loginBtnTxt}>\n                    Entrar\n                </Typography>\n            </a>\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    user: PropTypes.object,\n    lightTheme: PropTypes.bool,\n    className: PropTypes.string\n};\n\nexport default Header;\n"],"file":"index.js"}