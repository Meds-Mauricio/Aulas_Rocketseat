declare var _default: React.ComponentType<Pick<Pick<Pick<{
    classes: any;
    onClick: any;
    isLoading: any;
    imgs: any;
    notAvaliable: any;
    meal: any;
    onFav: any;
    isFavorite: any;
    title: any;
    stars: any;
    product: any;
    totalPrice: any;
    oldPartialPrice: any;
    partialPrice: any;
    totalPeople: any;
    totalDays: any;
    className: any;
}, never> & Pick<PropTypes.InferProps<{
    classes: PropTypes.Validator<object>;
    product: PropTypes.Validator<string>;
    imgs: PropTypes.Requireable<any[]>;
    isLoading: PropTypes.Requireable<boolean>;
    onClick: PropTypes.Requireable<(...args: any[]) => any>;
    title: PropTypes.Validator<string>;
    meal: PropTypes.Requireable<string>;
    notAvaliable: PropTypes.Requireable<boolean>;
    isFavorite: PropTypes.Requireable<boolean>;
    onFav: PropTypes.Requireable<(...args: any[]) => any>;
    stars: PropTypes.Requireable<number>;
    totalDays: PropTypes.Requireable<string | number>;
    oldPartialPrice: PropTypes.Requireable<string | number>;
    partialPrice: PropTypes.Validator<string | number>;
    totalPrice: PropTypes.Validator<string | number>;
    totalPeople: PropTypes.Validator<string | number>;
    className: PropTypes.Requireable<object>;
}>, "className" | "onClick" | "isLoading" | "stars" | "imgs" | "notAvaliable" | "totalDays" | "oldPartialPrice" | "meal" | "onFav" | "isFavorite" | PropTypes.RequiredKeys<{
    classes: PropTypes.Validator<object>;
    product: PropTypes.Validator<string>;
    imgs: PropTypes.Requireable<any[]>;
    isLoading: PropTypes.Requireable<boolean>;
    onClick: PropTypes.Requireable<(...args: any[]) => any>;
    title: PropTypes.Validator<string>;
    meal: PropTypes.Requireable<string>;
    notAvaliable: PropTypes.Requireable<boolean>;
    isFavorite: PropTypes.Requireable<boolean>;
    onFav: PropTypes.Requireable<(...args: any[]) => any>;
    stars: PropTypes.Requireable<number>;
    totalDays: PropTypes.Requireable<string | number>;
    oldPartialPrice: PropTypes.Requireable<string | number>;
    partialPrice: PropTypes.Validator<string | number>;
    totalPrice: PropTypes.Validator<string | number>;
    totalPeople: PropTypes.Validator<string | number>;
    className: PropTypes.Requireable<object>;
}>>, "totalDays" | "oldPartialPrice" | PropTypes.RequiredKeys<{
    classes: PropTypes.Validator<object>;
    product: PropTypes.Validator<string>;
    imgs: PropTypes.Requireable<any[]>;
    isLoading: PropTypes.Requireable<boolean>;
    onClick: PropTypes.Requireable<(...args: any[]) => any>;
    title: PropTypes.Validator<string>;
    meal: PropTypes.Requireable<string>;
    notAvaliable: PropTypes.Requireable<boolean>;
    isFavorite: PropTypes.Requireable<boolean>;
    onFav: PropTypes.Requireable<(...args: any[]) => any>;
    stars: PropTypes.Requireable<number>;
    totalDays: PropTypes.Requireable<string | number>;
    oldPartialPrice: PropTypes.Requireable<string | number>;
    partialPrice: PropTypes.Validator<string | number>;
    totalPrice: PropTypes.Validator<string | number>;
    totalPeople: PropTypes.Validator<string | number>;
    className: PropTypes.Requireable<object>;
}>> & Partial<Pick<Pick<{
    classes: any;
    onClick: any;
    isLoading: any;
    imgs: any;
    notAvaliable: any;
    meal: any;
    onFav: any;
    isFavorite: any;
    title: any;
    stars: any;
    product: any;
    totalPrice: any;
    oldPartialPrice: any;
    partialPrice: any;
    totalPeople: any;
    totalDays: any;
    className: any;
}, never> & Pick<PropTypes.InferProps<{
    classes: PropTypes.Validator<object>;
    product: PropTypes.Validator<string>;
    imgs: PropTypes.Requireable<any[]>;
    isLoading: PropTypes.Requireable<boolean>;
    onClick: PropTypes.Requireable<(...args: any[]) => any>;
    title: PropTypes.Validator<string>;
    meal: PropTypes.Requireable<string>;
    notAvaliable: PropTypes.Requireable<boolean>;
    isFavorite: PropTypes.Requireable<boolean>;
    onFav: PropTypes.Requireable<(...args: any[]) => any>;
    stars: PropTypes.Requireable<number>;
    totalDays: PropTypes.Requireable<string | number>;
    oldPartialPrice: PropTypes.Requireable<string | number>;
    partialPrice: PropTypes.Validator<string | number>;
    totalPrice: PropTypes.Validator<string | number>;
    totalPeople: PropTypes.Validator<string | number>;
    className: PropTypes.Requireable<object>;
}>, "className" | "onClick" | "isLoading" | "stars" | "imgs" | "notAvaliable" | "totalDays" | "oldPartialPrice" | "meal" | "onFav" | "isFavorite" | PropTypes.RequiredKeys<{
    classes: PropTypes.Validator<object>;
    product: PropTypes.Validator<string>;
    imgs: PropTypes.Requireable<any[]>;
    isLoading: PropTypes.Requireable<boolean>;
    onClick: PropTypes.Requireable<(...args: any[]) => any>;
    title: PropTypes.Validator<string>;
    meal: PropTypes.Requireable<string>;
    notAvaliable: PropTypes.Requireable<boolean>;
    isFavorite: PropTypes.Requireable<boolean>;
    onFav: PropTypes.Requireable<(...args: any[]) => any>;
    stars: PropTypes.Requireable<number>;
    totalDays: PropTypes.Requireable<string | number>;
    oldPartialPrice: PropTypes.Requireable<string | number>;
    partialPrice: PropTypes.Validator<string | number>;
    totalPrice: PropTypes.Validator<string | number>;
    totalPeople: PropTypes.Validator<string | number>;
    className: PropTypes.Requireable<object>;
}>>, "className" | "onClick" | "isLoading" | "stars" | "imgs" | "notAvaliable" | "meal" | "onFav" | "isFavorite">> & Partial<Pick<{
    imgs: never[];
    isLoading: boolean;
    onClick: () => void;
    subtitle: string;
    meal: undefined;
    notAvaliable: boolean;
    isFavorite: boolean;
    onFav: undefined;
    stars: number;
    className: {};
}, "subtitle">>, "className" | "onClick" | "subtitle" | "title" | "isLoading" | "stars" | "product" | "imgs" | "notAvaliable" | "totalDays" | "partialPrice" | "oldPartialPrice" | "totalPeople" | "totalPrice" | "meal" | "onFav" | "isFavorite"> & import("@material-ui/styles/withStyles/withStyles").StyledComponentProps<"root" | "subtitle" | "content" | "img" | "title" | "stars" | "priceContainer" | "imgContainer" | "tagContainer" | "tag" | "info" | "topTag" | "mealIcon" | "fav" | "notAvaliableImg">>;
export default _default;
import PropTypes from "prop-types";
import React from "react";
