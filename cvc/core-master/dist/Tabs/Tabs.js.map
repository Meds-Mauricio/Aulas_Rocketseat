{"version":3,"sources":["../../src/Tabs/Tabs.js"],"names":["TabContainer","children","propTypes","PropTypes","node","isRequired","CustomTab","classes","content","selected","handleChange","React","useState","value","setValue","onHandleChange","event","newValue","container","style","bottom","map","item","key","root","label","textColorInherit","oneOfType","object","string","array","func","styles","withTheme"],"mappings":"+QAAA,oDACA,6DACA,uFACA,oEACA,kEACA,iEACA,gCAEA,QAASA,CAAAA,YAAT,MAAoC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CAChC,mBACI,wDACI,gCAAC,sBAAD,EAAkB,SAAS,CAAC,OAA5B,EAAqCA,QAArC,CADJ,CAIP,CACDD,YAAY,CAACE,SAAb,CAAyB,CAAED,QAAQ,CAAEE,sBAAUC,IAAV,CAAeC,UAA3B,CAAzB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,OAAkD,IAA/CC,CAAAA,OAA+C,OAA/CA,OAA+C,CAAtCC,OAAsC,OAAtCA,OAAsC,CAA7BC,QAA6B,OAA7BA,QAA6B,CAAnBC,YAAmB,OAAnBA,YAAmB,CAChE,oBAA0BC,kBAAMC,QAAN,CAAeH,QAAQ,EAAID,OAAO,CAAC,CAAD,CAAP,CAAWK,KAAtC,CAA1B,oEAAOA,KAAP,qBAAcC,QAAd,qBAEA,QAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+BC,QAA/B,CAAyC,CACrC,GAAIP,YAAJ,CAAkBA,YAAY,CAACO,QAAQ,EAAIA,QAAb,CAAZ,CAClBH,QAAQ,CAACG,QAAD,CACX,CAED,mBACI,wDACI,gCAAC,gBAAD,EAAM,KAAK,CAAEJ,KAAb,CAAoB,QAAQ,CAAEE,cAA9B,CAA8C,SAAS,CAAER,OAAO,CAACW,SAAjE,CAA4E,iBAAiB,CAAE,CAAEC,KAAK,CAAE,CAAEC,MAAM,CAAE,KAAV,CAAT,CAA/F,EACKZ,OAAO,CAACa,GAAR,CAAY,SAACC,IAAD,CAAOC,GAAP,qBACT,gCAAC,eAAD,EACI,OAAO,CAAE,CACLC,IAAI,CAAEjB,OAAO,CAACiB,IADT,CAELC,KAAK,CAAElB,OAAO,CAACkB,KAFV,CAGLC,gBAAgB,CAAEnB,OAAO,CAACmB,gBAHrB,CADb,CAMI,KAAK,CAAEJ,IAAI,CAACT,KANhB,CAOI,GAAG,CAAEU,GAPT,CAQI,KAAK,CAAED,IAAI,CAACG,KARhB,CASI,QAAQ,CAAEH,IAAI,CAACT,KAAL,GAAeA,KAT7B,EADS,CAAZ,CADL,CADJ,CAgBKL,OAAO,CAACa,GAAR,CAAY,SAACC,IAAD,CAAOC,GAAP,CAAe,CACxB,GAAIV,KAAK,GAAKS,IAAI,CAACT,KAAnB,CAA0B,CACtB,mBAAO,gCAAC,YAAD,EAAc,GAAG,CAAEU,GAAnB,EAAyBD,IAAI,CAACd,OAA9B,CACV,CACD,MAAO,KACV,CALA,CAhBL,CAwBP,CAjCD,CAmCAF,SAAS,CAACJ,SAAV,CAAsB,CAClBK,OAAO,CAAEJ,sBAAUwB,SAAV,CAAoB,CAACxB,sBAAUyB,MAAX,CAAmBzB,sBAAU0B,MAA7B,CAApB,EAA0DxB,UADjD,CAElBG,OAAO,CAAEL,sBAAUwB,SAAV,CAAoB,CAACxB,sBAAU2B,KAAX,CAAkB3B,sBAAU0B,MAA5B,CAApB,CAFS,CAGlBnB,YAAY,CAAEP,sBAAU4B,IAHN,CAAtB,C,aAMe,2BAAWC,cAAX,CAAmB,CAAEC,SAAS,CAAE,IAAb,CAAnB,EAAwC3B,SAAxC,C","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport CustomTypography from \"../Typography\";\nimport { styles } from \"./styles\";\n\nfunction TabContainer({ children }) {\n    return (\n        <div>\n            <CustomTypography component=\"body1\">{children}</CustomTypography>\n        </div>\n    );\n}\nTabContainer.propTypes = { children: PropTypes.node.isRequired };\n\nconst CustomTab = ({ classes, content, selected, handleChange }) => {\n    const [value, setValue] = React.useState(selected || content[0].value);\n\n    function onHandleChange(event, newValue) {\n        if (handleChange) handleChange(newValue && newValue);\n        setValue(newValue);\n    }\n\n    return (\n        <div>\n            <Tabs value={value} onChange={onHandleChange} className={classes.container} TabIndicatorProps={{ style: { bottom: \"5px\" } }}>\n                {content.map((item, key) => (\n                    <Tab\n                        classes={{\n                            root: classes.root,\n                            label: classes.label,\n                            textColorInherit: classes.textColorInherit\n                        }}\n                        value={item.value}\n                        key={key}\n                        label={item.label}\n                        selected={item.value === value}\n                    />\n                ))}\n            </Tabs>\n            {content.map((item, key) => {\n                if (value === item.value) {\n                    return <TabContainer key={key}>{item.content}</TabContainer>;\n                }\n                return null;\n            })}\n        </div>\n    );\n};\n\nCustomTab.propTypes = {\n    classes: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    content: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n    handleChange: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(CustomTab);\n"],"file":"Tabs.js"}