{"version":3,"sources":["../../src/GenericModal/GenericModal.tsx"],"names":["ModalGeneric","children","testId","isOpen","onClose","classes","_isOpen","_setIsOpen","handleClose","className","modalDialogWrapper","modalDialogButtonDesktop","modalWrapper","modalContentWrapper","defaultProps","propTypes","PropTypes","bool","isRequired","string","element","func"],"mappings":"oUACA,qDACA,uCAMA,6DACA,gC,o/BATA,iD,CAWA;AACA;AACA,GACA,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAKf,IAJFC,CAAAA,QAIE,MAJFA,QAIE,CAHFC,MAGE,MAHFA,MAGE,CAFFC,MAEE,MAFFA,MAEE,CADFC,OACE,MADFA,OACE,CACF,GAAMC,CAAAA,OAAO,CAAG,sBAAU,EAAV,CAAhB,CACA,cAA8B,oBAASF,MAAT,CAA9B,wDAAOG,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtBD,UAAU,CAAC,KAAD,CAAV,CACAH,OAAO,EACV,CAHD,CAKA,qBAAU,UAAM,CACZG,UAAU,CAACJ,MAAD,CACb,CAFD,CAEG,CAACA,MAAD,CAFH,EAIA,mBACI,gCAAC,YAAD,EACI,IAAI,CAAEG,OADV,CAEI,UAAU,CAAE,CAAEG,SAAS,CAAEJ,OAAO,CAACK,kBAArB,CAFhB,CAGI,cAAaR,MAHjB,eAKI,gCAAC,mBAAD,mBACI,0CACI,IAAI,CAAC,QADT,CAEI,SAAS,CAAEG,OAAO,CAACM,wBAFvB,CAGI,OAAO,CAAEH,WAHb,CAII,cAAY,OAJhB,eAMI,uCAAK,OAAO,CAAC,WAAb,CAAyB,KAAK,CAAC,4BAA/B,eACI,wCAAM,CAAC,CAAC,qiBAAR,EADJ,CANJ,CADJ,cAYI,gCAAC,UAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAEH,OAAO,CAACO,YAAnC,eACI,gCAAC,SAAD,EAAK,SAAS,CAAEP,OAAO,CAACQ,mBAAxB,EAA8CZ,QAA9C,CADJ,CAZJ,CALJ,CAuBP,CA1CD,CA4CAD,YAAY,CAACc,YAAb,CAA4B,CACxBZ,MAAM,CAAE,EADgB,CAExBD,QAAQ,cAAE,gDAFc,CAGxBG,OAAO,CAAE,yBAAM,KAAN,CAHe,CAA5B,CAMAJ,YAAY,CAACe,SAAb,CAAyB,CACrBZ,MAAM,CAAEa,sBAAUC,IAAV,CAAeC,UADF,CAErBhB,MAAM,CAAEc,sBAAUG,MAFG,CAGrBlB,QAAQ,CAAEe,sBAAUI,OAHC,CAIrBhB,OAAO,CAAEY,sBAAUK,IAJE,CAAzB,C,aAOgBrB,Y","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\nimport React, { useEffect, useState } from \"react\";\nimport {\n    Box,\n    Dialog,\n    DialogContent,\n    Grid\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useStyles } from \"./styles\";\n\n/**\n *  Modal component.\n */\nconst ModalGeneric = ({\n    children,\n    testId,\n    isOpen,\n    onClose\n}) => {\n    const classes = useStyles({});\n    const [_isOpen, _setIsOpen] = useState(isOpen);\n\n    const handleClose = () => {\n        _setIsOpen(false);\n        onClose();\n    };\n\n    useEffect(() => {\n        _setIsOpen(isOpen);\n    }, [isOpen]);\n\n    return (\n        <Dialog\n            open={_isOpen}\n            PaperProps={{ className: classes.modalDialogWrapper }}\n            data-testid={testId}\n        >\n            <DialogContent>\n                <button\n                    type=\"button\"\n                    className={classes.modalDialogButtonDesktop}\n                    onClick={handleClose}\n                    data-testid=\"close\"\n                >\n                    <svg viewBox=\"0 0 14 14\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M12.5835 0.833252L7.00016 6.41658L1.41683 0.833252C1.25016 0.666585 1.00016 0.666585 0.833496 0.833252C0.666829 0.999919 0.666829 1.24992 0.833496 1.41659L6.41683 6.99992L0.833496 12.5833C0.666829 12.7499 0.666829 12.9999 0.833496 13.1666C1.00016 13.3333 1.25016 13.3333 1.41683 13.1666L7.00016 7.58325L12.5835 13.1666C12.7502 13.3333 13.0002 13.3333 13.1668 13.1666C13.3335 12.9999 13.3335 12.7499 13.1668 12.5833L7.5835 6.99992L13.1668 1.41659C13.3335 1.24992 13.3335 0.999919 13.1668 0.833252C13.0002 0.666585 12.7502 0.666585 12.5835 0.833252Z\"/>\n                    </svg>\n                </button>\n\n                <Grid container className={classes.modalWrapper}>\n                    <Box className={classes.modalContentWrapper}>{children}</Box>\n                </Grid>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nModalGeneric.defaultProps = {\n    testId: \"\",\n    children: <p>test</p>,\n    onClose: () => null\n};\n\nModalGeneric.propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    testId: PropTypes.string,\n    children: PropTypes.element,\n    onClose: PropTypes.func\n};\n\nexport default (ModalGeneric);\n"],"file":"GenericModal.js"}