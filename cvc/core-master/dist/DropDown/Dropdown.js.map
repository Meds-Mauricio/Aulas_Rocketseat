{"version":3,"sources":["../../src/DropDown/Dropdown.js"],"names":["Dropdown","classes","selected","onClick","menu","className","root","map","item","index","propTypes","PropTypes","object","array","isRequired","string","func","bool","styles","withTheme"],"mappings":"mLAAA,oDACA,6DACA,4EACA,4EACA,uFACA,mDACA,gCAEA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAqD,IAAlDC,CAAAA,OAAkD,MAAlDA,OAAkD,CAAzCC,QAAyC,MAAzCA,QAAyC,CAA/BC,QAA+B,MAA/BA,OAA+B,CAAtBC,IAAsB,MAAtBA,IAAsB,CAAhBC,SAAgB,MAAhBA,SAAgB,CAClE,mBACI,gCAAC,eAAD,EAAK,SAAS,WAAKJ,OAAO,CAACK,IAAb,aAAqBD,SAArB,CAAd,eACI,gCAAC,oBAAD,MACKD,IAAI,CAACG,GAAL,CAAS,SAACC,IAAD,CAAOC,KAAP,qBACN,gCAAC,oBAAD,EACI,OAAO,CAAE,yBAAMN,CAAAA,QAAO,EAAIA,QAAO,CAACK,IAAD,CAAxB,CACT;AACA;AACA;AACA;AALJ,CAMI,QAAQ,CAAEN,QAAQ,GAAKM,IAN3B,CAOI,GAAG,CAAEC,KAPT,EASKD,IATL,CADM,CAAT,CADL,CADJ,CAkBP,CApBD,CAsBAR,QAAQ,CAACU,SAAT,CAAqB,CACjBT,OAAO,CAAEU,sBAAUC,MADF,CAEjBR,IAAI,CAAEO,sBAAUE,KAAV,CAAgBC,UAFL,CAGjBT,SAAS,CAAEM,sBAAUI,MAHJ,CAIjBZ,OAAO,CAAEQ,sBAAUK,IAJF,CAKjBd,QAAQ,CAAES,sBAAUM,IALH,CAArB,C,aAQe,2BAAWC,cAAX,CAAmB,CAAEC,SAAS,CAAE,IAAb,CAAnB,EAAwCnB,QAAxC,C","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Box from \"../Box\";\nimport { styles } from \"./styles\";\n\nconst Dropdown = ({ classes, selected, onClick, menu, className }) => {\n    return (\n        <Box className={`${classes.root} ${className}`}>\n            <MenuList>\n                {menu.map((item, index) => (\n                    <MenuItem\n                        onClick={() => onClick && onClick(item)}\n                        // TODO verificar implementação\n                        // selected é setado como bool nas propTypes\n                        // mas é usado na comparação com strings\n                        // falha: sempre retornará false\n                        selected={selected === item}\n                        key={index}\n                    >\n                        {item}\n                    </MenuItem>\n                ))}\n            </MenuList>\n        </Box>\n    );\n};\n\nDropdown.propTypes = {\n    classes: PropTypes.object,\n    menu: PropTypes.array.isRequired,\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n    selected: PropTypes.bool,\n};\n\nexport default withStyles(styles, { withTheme: true })(Dropdown);\n"],"file":"Dropdown.js"}