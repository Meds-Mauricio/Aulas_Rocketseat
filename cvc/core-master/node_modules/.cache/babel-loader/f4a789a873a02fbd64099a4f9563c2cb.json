{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\MyTravelLogin\\\\UserAccessSteps\\\\ChangePassword\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useCallback, useEffect, useContext } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { injectIntl } from \"react-intl\";\nimport * as Yup from \"yup\";\nimport { BrandContext } from \"../../../BrandContext\";\nimport { Redirect } from \"../../../BrandContext/amplify/aws.config\";\nimport { getParam } from \"../../../utils\";\nimport useGa from \"../../../utils/useGa\";\nimport { useAuthAmplifyContext } from \"../../contexts/AmplifyContext\";\nimport { useRenderSteps } from \"../../contexts/renderSteps\";\nimport { useToast } from \"../../contexts/Toast\";\nimport Form from \"../../shared/components/Form\";\nimport HeaderLogin from \"../../shared/components/HeaderLogin\";\nimport Input from \"../../shared/components/Input\";\nimport InternalButton from \"../../shared/components/InternalButton\";\nimport SubTitle from \"../../shared/components/SubTitle\";\nimport Terms from \"../../shared/components/Terms\";\nimport Title from \"../../shared/components/Title\";\nimport { useUserData } from \"../../shared/hooks/UserContext\";\nimport translate from \"../../shared/i18n/translate\";\nimport getValidationErrors from \"../../shared/utils/getValidationErrors\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ChangePassword = function ChangePassword(_ref) {\n  _s();\n\n  var intl = _ref.intl,\n      onCloseClick = _ref.onCloseClick,\n      isModal = _ref.isModal;\n\n  var _useGa = useGa(),\n      saveOnGa = _useGa.saveOnGa;\n\n  var classes = useStyles({});\n  var formRef = useRef(null);\n\n  var _useUserData = useUserData(),\n      user = _useUserData.user;\n\n  var ctx = useContext(BrandContext);\n\n  var _useAuthAmplifyContex = useAuthAmplifyContext(),\n      amplifyTempPwd = _useAuthAmplifyContex.amplifyTempPwd;\n\n  var _useToast = useToast(),\n      addToast = _useToast.addToast;\n\n  var _useRenderSteps = useRenderSteps(),\n      setPreviousStep = _useRenderSteps.setPreviousStep;\n\n  var successToastMessageTitle = intl.formatMessage({\n    id: \"ChangePassword.successToastMessageTitle\"\n  });\n  var successToastMessageDescription = intl.formatMessage({\n    id: \"ChangePassword.successToastMessageDescription\"\n  });\n  useEffect(function () {\n    setPreviousStep(\"ValidationCode\");\n  }, [setPreviousStep]);\n  var handleSubmit = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n      var _formRef$current, schema, password, confirmPassword, _formRef$current2, _formRef$current3;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              saveOnGa({\n                event: \"login_event\",\n                category: \"Account\",\n                action: \"Recovery Password\",\n                label: \"step 3 | update password\"\n              });\n              (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n              schema = Yup.object().shape({\n                password: Yup.string().matches(/^(?=.*[0-9|#?!@$%^&*-]).{8,}$/, intl.formatMessage({\n                  id: \"ChangePassword.errorMessage\"\n                })),\n                confirmPassword: Yup.string().matches(/^(?=.*[0-9|#?!@$%^&*-]).{8,}$/, intl.formatMessage({\n                  id: \"ChangePassword.errorMessage\"\n                }))\n              });\n              _context2.next = 6;\n              return schema.validate(data, {\n                abortEarly: false\n              });\n\n            case 6:\n              password = data.password, confirmPassword = data.confirmPassword;\n\n              if (password !== confirmPassword) {\n                (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors({\n                  confirmPassword: intl.formatMessage({\n                    id: \"ChangePassword.errorMessageNotEqual\"\n                  })\n                });\n              } else {\n                Auth.signIn(user.email, amplifyTempPwd).then( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.prev = 0;\n                            _context.next = 3;\n                            return Auth.changePassword(response, amplifyTempPwd, password);\n\n                          case 3:\n                            addToast({\n                              type: \"success\",\n                              title: successToastMessageTitle,\n                              description: successToastMessageDescription\n                            });\n                            saveOnGa({\n                              event: \"login_event\",\n                              category: \"Account\",\n                              action: \"Recovery Password\",\n                              label: \"updatesenha ok\"\n                            });\n\n                            if (!getParam(\"path\")) {\n                              _context.next = 8;\n                              break;\n                            }\n\n                            window.location.href = \"\".concat(Redirect(ctx.hosts)).concat(getParam(\"path\"));\n                            return _context.abrupt(\"return\");\n\n                          case 8:\n                            window.location.href = \"\".concat(Redirect(ctx.hosts), \"/mytravels/reservations\");\n                            _context.next = 14;\n                            break;\n\n                          case 11:\n                            _context.prev = 11;\n                            _context.t0 = _context[\"catch\"](0);\n                            Auth.signOut(); // exibir erro servidor ao trocar senha\n\n                          case 14:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, null, [[0, 11]]);\n                  }));\n\n                  return function (_x2) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              (_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 ? void 0 : _formRef$current3.setErrors(getValidationErrors(_context2.t0));\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [addToast, amplifyTempPwd, intl, successToastMessageDescription, successToastMessageTitle, user.email]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderLogin, {\n      isModal: isModal,\n      previousStep: \"ValidationCode\",\n      onCloseClick: onCloseClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: translate({\n          id: \"ChangePassword.title\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(SubTitle, {\n        className: classes.subTitle,\n        children: translate({\n          id: \"ChangePassword.subTitle\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Form, {\n        ref: formRef,\n        handleSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          placeholderText: translate({\n            id: \"ChangePassword.passwordPlaceHolder\"\n          }),\n          showTip: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"confirmPassword\",\n          placeholderText: translate({\n            id: \"ChangePassword.confirPassword\"\n          }),\n          showTip: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(InternalButton, {\n          type: \"submit\",\n          text: intl.formatMessage({\n            id: \"ChangePassword.actionButton\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Terms, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ChangePassword, \"qZxyTVUmb14o5vwxlsLQm8h83ho=\", false, function () {\n  return [useGa, useStyles, useUserData, useAuthAmplifyContext, useToast, useRenderSteps];\n});\n\n_c = ChangePassword;\nexport default _c2 = injectIntl(ChangePassword);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChangePassword\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/MyTravelLogin/UserAccessSteps/ChangePassword/index.tsx"],"names":["React","useRef","useCallback","useEffect","useContext","Auth","injectIntl","Yup","BrandContext","Redirect","getParam","useGa","useAuthAmplifyContext","useRenderSteps","useToast","Form","HeaderLogin","Input","InternalButton","SubTitle","Terms","Title","useUserData","translate","getValidationErrors","useStyles","ChangePassword","intl","onCloseClick","isModal","saveOnGa","classes","formRef","user","ctx","amplifyTempPwd","addToast","setPreviousStep","successToastMessageTitle","formatMessage","id","successToastMessageDescription","handleSubmit","data","event","category","action","label","current","setErrors","schema","object","shape","password","string","matches","confirmPassword","validate","abortEarly","signIn","email","then","response","changePassword","type","title","description","window","location","href","hosts","signOut","root","subTitle"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useEffect, useContext } from \"react\";\nimport { FormHandles } from \"@unform/core\";\nimport { Auth } from \"aws-amplify\";\nimport { IntlShape, injectIntl } from \"react-intl\";\nimport * as Yup from \"yup\";\nimport { BrandContext } from \"../../../BrandContext\";\nimport { Redirect } from \"../../../BrandContext/amplify/aws.config\"\nimport { getParam } from \"../../../utils\";\nimport useGa from \"../../../utils/useGa\";\nimport { useAuthAmplifyContext } from \"../../contexts/AmplifyContext\";\nimport { useRenderSteps } from \"../../contexts/renderSteps\";\nimport { useToast } from \"../../contexts/Toast\";\nimport Form from \"../../shared/components/Form\";\nimport HeaderLogin from \"../../shared/components/HeaderLogin\";\nimport Input from \"../../shared/components/Input\";\nimport InternalButton from \"../../shared/components/InternalButton\";\nimport SubTitle from \"../../shared/components/SubTitle\";\nimport Terms from \"../../shared/components/Terms\";\nimport Title from \"../../shared/components/Title\";\nimport { useUserData } from \"../../shared/hooks/UserContext\";\nimport translate from \"../../shared/i18n/translate\";\nimport getValidationErrors from \"../../shared/utils/getValidationErrors\";\nimport useStyles from \"./styles\";\ninterface IChangePasswrod {\n    password: string;\n    confirmPassword: string;\n}\n\ninterface TChangePassword {\n    intl: IntlShape;\n    onCloseClick?(): void;\n    isModal?: boolean;\n}\n\nconst ChangePassword: React.FC<TChangePassword> = ({ intl, onCloseClick, isModal }) => {\n    const { saveOnGa } = useGa();\n    const classes = useStyles({});\n    const formRef = useRef<FormHandles>(null);\n    const { user } = useUserData();\n    const ctx = useContext(BrandContext);\n    const { amplifyTempPwd } = useAuthAmplifyContext();\n    const { addToast } = useToast();\n\n    const { setPreviousStep } = useRenderSteps();\n    const successToastMessageTitle = intl.formatMessage({ id: \"ChangePassword.successToastMessageTitle\" });\n    const successToastMessageDescription = intl.formatMessage({ id: \"ChangePassword.successToastMessageDescription\" });\n\n    useEffect(() => {\n        setPreviousStep(\"ValidationCode\");\n\n    }, [setPreviousStep]);\n\n    const handleSubmit = useCallback(async (data: IChangePasswrod): Promise<void> => {\n        try {\n            saveOnGa({\n                event: \"login_event\",\n                category: \"Account\",\n                action: \"Recovery Password\",\n                label: \"step 3 | update password\"\n            });\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                password: Yup.string().matches(/^(?=.*[0-9|#?!@$%^&*-]).{8,}$/, intl.formatMessage({ id: \"ChangePassword.errorMessage\" })),\n                confirmPassword: Yup.string().matches(/^(?=.*[0-9|#?!@$%^&*-]).{8,}$/, intl.formatMessage({ id: \"ChangePassword.errorMessage\" })),\n            });\n\n            await schema.validate(data, {\n                abortEarly: false\n            });\n            const { password, confirmPassword } = data;\n\n            if (password !== confirmPassword) {\n                formRef.current?.setErrors({ confirmPassword: intl.formatMessage({ id: \"ChangePassword.errorMessageNotEqual\" }) });\n            }\n            else {\n                Auth.signIn(user.email, amplifyTempPwd).then(async (response) => {\n                    try {\n                        await Auth.changePassword(response, amplifyTempPwd, password);\n                        addToast({ type: \"success\", title: successToastMessageTitle, description: successToastMessageDescription });\n                        saveOnGa({\n                            event: \"login_event\",\n                            category: \"Account\",\n                            action: \"Recovery Password\",\n                            label: \"updatesenha ok\"\n                        });\n\n                        if (getParam(\"path\")) {\n                            window.location.href = `${Redirect(ctx.hosts)}${getParam(\"path\")}`\n                            return\n                        }\n                        window.location.href = `${Redirect(ctx.hosts)}/mytravels/reservations`;\n                    } catch (error) {\n                        Auth.signOut();\n                        // exibir erro servidor ao trocar senha\n                    }\n                });\n            }\n\n        } catch (error) {\n            formRef.current?.setErrors(getValidationErrors(error));\n        }\n    }, [addToast, amplifyTempPwd, intl, successToastMessageDescription, successToastMessageTitle, user.email]);\n\n    return (\n        <>\n            <HeaderLogin isModal={isModal} previousStep=\"ValidationCode\" onCloseClick={onCloseClick} />\n            <div className={classes.root}>\n                <Title>\n                    {translate({ id: \"ChangePassword.title\" })}\n                </Title>\n                <SubTitle className={classes.subTitle}>\n                    {translate({\n                        id: \"ChangePassword.subTitle\",\n                    })}\n                </SubTitle>\n                <Form ref={formRef} handleSubmit={handleSubmit} >\n                    <Input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholderText={translate({ id: \"ChangePassword.passwordPlaceHolder\" })}\n                        showTip\n                    />\n                    <Input\n                        type=\"password\"\n                        name=\"confirmPassword\"\n                        placeholderText={translate({ id: \"ChangePassword.confirPassword\" })}\n                        showTip\n                    />\n                    <InternalButton type=\"submit\" text={intl.formatMessage({ id: \"ChangePassword.actionButton\" })} />\n                </Form>\n\n            </div>\n            <Terms />\n        </>\n    );\n};\n\n\nexport default injectIntl(ChangePassword);\n"]},"metadata":{},"sourceType":"module"}