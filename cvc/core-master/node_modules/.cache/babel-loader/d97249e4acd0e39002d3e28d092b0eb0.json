{"ast":null,"code":"import _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\Logo\\\\Stories\\\\Logo.stories.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from \\\"react\\\";\\nimport { Paper, Divider, } from \\\"@material-ui/core\\\";\\nimport Grid from \\\"@material-ui/core/Grid\\\";\\nimport { makeStyles } from \\\"@material-ui/core/styles\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { BrandContext } from \\\"../../BrandContext\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport ThemeProviderCustom from \\\"../../ThemeProviderCustom\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\nimport mockBrands from \\\"../../utils/brandMock\\\";\\nimport Logo from \\\"../Logo\\\";\\n\\nconst useStyles = makeStyles((theme) => ({\\n    root: {\\n        background: theme.palette.background.default,\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n}));\\n\\ntype LogoStoryProps = {\\n    mode: string,\\n    brand: BrandType,\\n    type: string\\n}\\n\\nconst LogoStory = ({\\n    mode, brand, type\\n}: LogoStoryProps) => {\\n    const classes = useStyles(themes[brand]);\\n\\n    return (\\n        <BrandContext.Provider value={mockBrands[brand]}>\\n            <ThemeProviderCustom>\\n                <Paper className={classes[mode]} id=\\\"Logo\\\">\\n                    <Typography variant=\\\"h3\\\">Logo</Typography>\\n                    <br />\\n                    <Divider />\\n                    <br />\\n                    <Grid>\\n                        <Logo type={type} alt=\\\"Logo\\\" className={{}} />\\n                    </Grid>\\n                </Paper>\\n            </ThemeProviderCustom>\\n        </BrandContext.Provider> \\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"sub\\\",\\n        mode: \\\"root\\\",\\n        type: \\\"dark\\\",\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"cvc\\\", \\\"cvccorp\\\", \\\"sub\\\"]\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"root\\\", \\\"darkBg\\\"]\\n        },\\n        type: { \\n            type: \\\"select\\\",\\n            options: [\\\"dark\\\", \\\"light\\\"]\\n        }\\n    }\\n}\\n\\nstoriesOf(\\\"Components/Logo\\\", module)\\n    .add(\\\"Default\\\", (args) => <LogoStory {...args}/>, argsControls);\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"default\": {\n    \"startLoc\": {\n      \"col\": 9,\n      \"line\": 78\n    },\n    \"endLoc\": {\n      \"col\": 66,\n      \"line\": 78\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 78\n    },\n    \"endBody\": {\n      \"col\": 52,\n      \"line\": 78\n    }\n  }\n};\nimport React from \"react\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { storiesOf } from \"@storybook/react\";\nimport { BrandContext } from \"../../BrandContext\";\nimport themes from \"../../Theme/themes\";\nimport ThemeProviderCustom from \"../../ThemeProviderCustom\";\nimport mockBrands from \"../../utils/brandMock\";\nimport Logo from \"../Logo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      background: theme.palette.background[\"default\"],\n      boxShadow: theme.shadows[8],\n      padding: \"30px\"\n    },\n    darkBg: {\n      background: \"rgba(0, 0, 0, 0.6)\",\n      boxShadow: theme.shadows[8],\n      padding: \"30px\"\n    }\n  };\n});\n\nvar LogoStory = function LogoStory(_ref) {\n  _s();\n\n  var mode = _ref.mode,\n      brand = _ref.brand,\n      type = _ref.type;\n  var classes = useStyles(themes[brand]);\n  return /*#__PURE__*/_jsxDEV(BrandContext.Provider, {\n    value: mockBrands[brand],\n    children: /*#__PURE__*/_jsxDEV(ThemeProviderCustom, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes[mode],\n        id: \"Logo\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Logo, {\n            type: type,\n            alt: \"Logo\",\n            className: {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LogoStory, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = LogoStory;\nvar argsControls = {\n  args: {\n    brand: \"sub\",\n    mode: \"root\",\n    type: \"dark\"\n  },\n  argTypes: {\n    brand: {\n      type: \"select\",\n      options: [\"cvc\", \"cvccorp\", \"sub\"]\n    },\n    mode: {\n      type: \"select\",\n      options: [\"root\", \"darkBg\"]\n    },\n    type: {\n      type: \"select\",\n      options: [\"dark\", \"light\"]\n    }\n  }\n};\nstoriesOf(\"Components/Logo\", module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __LOCATIONS_MAP__\n  }\n}).add(\"Default\", function (args) {\n  return /*#__PURE__*/_jsxDEV(LogoStory, _objectSpread({}, args), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 31\n  }, _this);\n}, argsControls);\n\nvar _c;\n\n$RefreshReg$(_c, \"LogoStory\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/Logo/Stories/Logo.stories.tsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","Paper","Divider","Grid","makeStyles","Typography","storiesOf","BrandContext","themes","ThemeProviderCustom","mockBrands","Logo","useStyles","theme","root","background","palette","boxShadow","shadows","padding","darkBg","LogoStory","mode","brand","type","classes","argsControls","args","argTypes","options","module","addParameters","storySource","source","locationsMap","add"],"mappings":"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","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { Paper, Divider, } from \\\"@material-ui/core\\\";\\nimport Grid from \\\"@material-ui/core/Grid\\\";\\nimport { makeStyles } from \\\"@material-ui/core/styles\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { BrandContext } from \\\"../../BrandContext\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport ThemeProviderCustom from \\\"../../ThemeProviderCustom\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\nimport mockBrands from \\\"../../utils/brandMock\\\";\\nimport Logo from \\\"../Logo\\\";\\n\\nconst useStyles = makeStyles((theme) => ({\\n    root: {\\n        background: theme.palette.background.default,\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n}));\\n\\ntype LogoStoryProps = {\\n    mode: string,\\n    brand: BrandType,\\n    type: string\\n}\\n\\nconst LogoStory = ({\\n    mode, brand, type\\n}: LogoStoryProps) => {\\n    const classes = useStyles(themes[brand]);\\n\\n    return (\\n        <BrandContext.Provider value={mockBrands[brand]}>\\n            <ThemeProviderCustom>\\n                <Paper className={classes[mode]} id=\\\"Logo\\\">\\n                    <Typography variant=\\\"h3\\\">Logo</Typography>\\n                    <br />\\n                    <Divider />\\n                    <br />\\n                    <Grid>\\n                        <Logo type={type} alt=\\\"Logo\\\" className={{}} />\\n                    </Grid>\\n                </Paper>\\n            </ThemeProviderCustom>\\n        </BrandContext.Provider> \\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"sub\\\",\\n        mode: \\\"root\\\",\\n        type: \\\"dark\\\",\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"cvc\\\", \\\"cvccorp\\\", \\\"sub\\\"]\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"root\\\", \\\"darkBg\\\"]\\n        },\\n        type: { \\n            type: \\\"select\\\",\\n            options: [\\\"dark\\\", \\\"light\\\"]\\n        }\\n    }\\n}\\n\\nstoriesOf(\\\"Components/Logo\\\", module)\\n    .add(\\\"Default\\\", (args) => <LogoStory {...args}/>, argsControls);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"default\":{\"startLoc\":{\"col\":9,\"line\":78},\"endLoc\":{\"col\":66,\"line\":78},\"startBody\":{\"col\":20,\"line\":78},\"endBody\":{\"col\":52,\"line\":78}}};\n    \nimport React from \"react\";\nimport { Paper, Divider, } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { storiesOf } from \"@storybook/react\";\nimport { BrandContext } from \"../../BrandContext\";\nimport themes from \"../../Theme/themes\";\nimport ThemeProviderCustom from \"../../ThemeProviderCustom\";\nimport { BrandType } from \"../../types/brand\";\nimport mockBrands from \"../../utils/brandMock\";\nimport Logo from \"../Logo\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: theme.palette.background.default,\n        boxShadow: theme.shadows[8],\n        padding: \"30px\",\n    },\n    darkBg: {\n        background: \"rgba(0, 0, 0, 0.6)\",\n        boxShadow: theme.shadows[8],\n        padding: \"30px\",\n    },\n}));\n\ntype LogoStoryProps = {\n    mode: string,\n    brand: BrandType,\n    type: string\n}\n\nconst LogoStory = ({\n    mode, brand, type\n}: LogoStoryProps) => {\n    const classes = useStyles(themes[brand]);\n\n    return (\n        <BrandContext.Provider value={mockBrands[brand]}>\n            <ThemeProviderCustom>\n                <Paper className={classes[mode]} id=\"Logo\">\n                    <Typography variant=\"h3\">Logo</Typography>\n                    <br />\n                    <Divider />\n                    <br />\n                    <Grid>\n                        <Logo type={type} alt=\"Logo\" className={{}} />\n                    </Grid>\n                </Paper>\n            </ThemeProviderCustom>\n        </BrandContext.Provider> \n    );\n};\n\nconst argsControls = {\n    args: {\n        brand: \"sub\",\n        mode: \"root\",\n        type: \"dark\",\n    },\n    argTypes: {\n        brand: {\n            type: \"select\",\n            options: [\"cvc\", \"cvccorp\", \"sub\"]\n        },\n        mode: {\n            type: \"select\",\n            options: [\"root\", \"darkBg\"]\n        },\n        type: { \n            type: \"select\",\n            options: [\"dark\", \"light\"]\n        }\n    }\n}\n\nstoriesOf(\"Components/Logo\", module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } })\n    .add(\"Default\", (args) => <LogoStory {...args}/>, argsControls);\n"]},"metadata":{},"sourceType":"module"}