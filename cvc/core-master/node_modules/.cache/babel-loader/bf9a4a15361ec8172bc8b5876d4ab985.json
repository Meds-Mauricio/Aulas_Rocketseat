{"ast":null,"code":"import _slicedToArray from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\MyTravelLogin\\\\shared\\\\components\\\\ToastContainer\\\\Toast\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, memo } from \"react\";\nimport { useToast } from \"../../../../contexts/Toast\";\nimport useStyles from \"./styles\";\nimport CloseButtonIcon from \"../../icons/CloseButtonIcon\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Slide from \"@material-ui/core/Slide\";\nimport withWidth, { isWidthDown } from \"@material-ui/core/withWidth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TransitionLeft = function TransitionLeft(props) {\n  return /*#__PURE__*/_jsxDEV(Slide, _objectSpread(_objectSpread({}, props), {}, {\n    direction: \"left\"\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, _this);\n};\n\n_c = TransitionLeft;\n\nvar Toast = function Toast(_ref) {\n  _s();\n\n  var message = _ref.message,\n      key = _ref.key,\n      width = _ref.width;\n\n  var _useToast = useToast(),\n      removeToast = _useToast.removeToast;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var isMobile = isWidthDown(\"sm\", width);\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      transition = _useState4[0],\n      setTransition = _useState4[1];\n\n  useEffect(function () {\n    if (message) {\n      setTransition(function () {\n        return TransitionLeft;\n      });\n      setOpen(true);\n      var timer = setTimeout(function () {\n        removeToast(message.id);\n        setOpen(false);\n      }, 6000);\n      return function () {\n        clearTimeout(timer);\n      };\n    }\n  }, [removeToast, message.id]);\n  var classes = useStyles({\n    type: message.type || \"success\",\n    isMobile: isMobile\n  });\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: open,\n    TransitionComponent: transition,\n    autoHideDuration: 6000,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toastWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: message.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, _this), message.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.description,\n          children: [\" \", message.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 45\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.closeButton,\n        onClick: function onClick() {\n          return removeToast(message.id);\n        },\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(CloseButtonIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this)\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Toast, \"Sg3MZad0khnA/WScfrMJGwI8zN8=\", false, function () {\n  return [useToast, useStyles];\n});\n\n_c2 = Toast;\nexport default withWidth()( /*#__PURE__*/memo(Toast));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TransitionLeft\");\n$RefreshReg$(_c2, \"Toast\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/MyTravelLogin/shared/components/ToastContainer/Toast/index.tsx"],"names":["React","useEffect","useState","memo","useToast","useStyles","CloseButtonIcon","Snackbar","Slide","withWidth","isWidthDown","TransitionLeft","props","Toast","message","key","width","removeToast","open","setOpen","isMobile","undefined","transition","setTransition","timer","setTimeout","id","clearTimeout","classes","type","container","toastWrapper","title","description","closeButton"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,IAArC,QAAiD,OAAjD;AACA,SAAuBC,QAAvB,QAAuC,4BAAvC;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkC,yBAAlC;AACA,OAAOC,SAAP,IAAoBC,WAApB,QAAkD,6BAAlD;;;AAQA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAA4B;AAC/C,sBAAO,QAAC,KAAD,kCAAWA,KAAX;AAAkB,IAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,CAFD;;KAAMD,c;;AAIN,IAAME,KAA2B,GAAG,SAA9BA,KAA8B,OAAyC;AAAA;;AAAA,MAAtCC,OAAsC,QAAtCA,OAAsC;AAAA,MAA7BC,GAA6B,QAA7BA,GAA6B;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;;AACzE,kBAAwBZ,QAAQ,EAAhC;AAAA,MAAQa,WAAR,aAAQA,WAAR;;AACA,kBAAwBf,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAOgB,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,QAAQ,GAAGV,WAAW,CAAC,IAAD,EAAMM,KAAN,CAA5B;;AACA,mBAAoCd,QAAQ,CAAmDmB,SAAnD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAEAtB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIa,OAAJ,EAAa;AACTS,MAAAA,aAAa,CAAC;AAAA,eAAMZ,cAAN;AAAA,OAAD,CAAb;AACAQ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA,UAAMK,KAAK,GAAGC,UAAU,CAAC,YAAM;AAC3BR,QAAAA,WAAW,CAACH,OAAO,CAACY,EAAT,CAAX;AACAP,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH,OAHuB,EAGrB,IAHqB,CAAxB;AAKA,aAAO,YAAM;AACTQ,QAAAA,YAAY,CAACH,KAAD,CAAZ;AACH,OAFD;AAGH;AACJ,GAbQ,EAaN,CAACP,WAAD,EAAcH,OAAO,CAACY,EAAtB,CAbM,CAAT;AAeA,MAAME,OAAO,GAAGvB,SAAS,CAAC;AAACwB,IAAAA,IAAI,EAAEf,OAAO,CAACe,IAAR,IAAgB,SAAvB;AAAkCT,IAAAA,QAAQ,EAACA;AAA3C,GAAD,CAAzB;AAEA,sBACI,QAAC,QAAD;AAEI,IAAA,IAAI,EAAEF,IAFV;AAGI,IAAA,mBAAmB,EAAEI,UAHzB;AAII,IAAA,gBAAgB,EAAE,IAJtB;AAAA,2BAMI;AAAK,MAAA,SAAS,EAAEM,OAAO,CAACE,SAAxB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEF,OAAO,CAACG,YAAxB;AAAA,gCACI;AAAA,oBAASjB,OAAO,CAACkB;AAAjB;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEKlB,OAAO,CAACmB,WAAR,iBAAuB;AAAG,UAAA,SAAS,EAAEL,OAAO,CAACK,WAAtB;AAAA,0BAAqCnB,OAAO,CAACmB,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,iBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAMI;AACI,QAAA,SAAS,EAAEL,OAAO,CAACM,WADvB;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAMjB,WAAW,CAACH,OAAO,CAACY,EAAT,CAAjB;AAAA,SAFb;AAGI,QAAA,IAAI,EAAC,QAHT;AAAA,+BAII,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,eANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,KACSX,GADT;AAAA;AAAA;AAAA;AAAA,WADJ;AAsBH,CA7CD;;GAAMF,K;UACsBT,Q,EAoBRC,S;;;MArBdQ,K;AA+CN,eAAgBJ,SAAD,iBAAcN,IAAI,CAACU,KAAD,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState, memo } from \"react\";\nimport { ToastMessage, useToast } from \"../../../../contexts/Toast\";\nimport useStyles from \"./styles\";\nimport CloseButtonIcon from \"../../icons/CloseButtonIcon\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Slide, { SlideProps } from \"@material-ui/core/Slide\";\nimport withWidth, { isWidthDown, WithWidth } from \"@material-ui/core/withWidth\";\ninterface ToastProps extends WithWidth{\n    message: ToastMessage;\n    key: string;\n}\n\ntype TransitionProps = Omit<SlideProps, \"direction\">;\n\nconst TransitionLeft = (props: TransitionProps) => {\n    return <Slide {...props} direction=\"left\" />;\n};\n\nconst Toast: React.FC<ToastProps> = ({ message, key , width}: ToastProps) => {\n    const { removeToast } = useToast();\n    const [open, setOpen] = useState(false);\n    const isMobile = isWidthDown(\"sm\",width);\n    const [transition, setTransition] = useState<React.ComponentType<TransitionProps> | undefined>(undefined);\n\n    useEffect(() => {\n        if (message) {\n            setTransition(() => TransitionLeft);\n            setOpen(true);\n            const timer = setTimeout(() => {\n                removeToast(message.id);\n                setOpen(false);\n            }, 6000);\n\n            return () => {\n                clearTimeout(timer);\n            };\n        }\n    }, [removeToast, message.id]);\n\n    const classes = useStyles({type: message.type || \"success\", isMobile:isMobile});\n\n    return (\n        <Snackbar\n            key={key}\n            open={open}\n            TransitionComponent={transition}\n            autoHideDuration={6000}\n        >\n            <div className={classes.container}>\n                <div className={classes.toastWrapper}>\n                    <strong>{message.title}</strong>\n                    {message.description && <p className={classes.description}> {message.description}</p>}\n                </div>\n\n                <button\n                    className={classes.closeButton}\n                    onClick={() => removeToast(message.id)}\n                    type=\"button\">\n                    <CloseButtonIcon />\n                </button>\n            </div>\n        </Snackbar>\n    );\n};\n\nexport default (withWidth)()(memo(Toast));\n"]},"metadata":{},"sourceType":"module"}