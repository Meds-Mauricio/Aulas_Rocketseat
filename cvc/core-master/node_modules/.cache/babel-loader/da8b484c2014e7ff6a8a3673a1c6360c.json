{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\UserArea\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { Avatar, useMediaQuery } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport Cookies from \"universal-cookie\";\nimport { BrandContext } from \"../BrandContext\";\nimport Button from \"../Button\";\nimport ModalLogin from \"../MyTravelLogin/shared/components/ModalLogin\";\nimport { useProfileContext } from \"../ProfileContext\";\nimport Typography from \"../Typography\";\nimport { useUserDataContext } from \"../UserContext\";\nimport { featureToggles, verifyIsBrand, findCognitoIdToken } from \"../utils\";\nimport useGa from \"../utils/useGa\";\nimport useCognitoIdTokenUpdate from \"./CognitoIdTokenUpdate\";\nimport { UserAreaInfo, UserAreaButtons, UserAreaIcon } from \"./components\";\nimport { useStyles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Header = function Header(_ref) {\n  _s();\n\n  var user = _ref.user,\n      lightTheme = _ref.lightTheme,\n      className = _ref.className;\n  var ctx = useContext(BrandContext);\n  var desktopSize = useMediaQuery(\"(min-width:768px)\");\n  var classes = useStyles({});\n\n  var _useGa = useGa(),\n      saveOnGa = _useGa.saveOnGa;\n\n  var _useUserDataContext = useUserDataContext(),\n      isUserAuth = _useUserDataContext.isUserAuth,\n      setIsUserAuth = _useUserDataContext.setIsUserAuth,\n      isConfig = _useUserDataContext.isConfig,\n      logout = _useUserDataContext.logout;\n\n  var _useProfileContext = useProfileContext(),\n      profileData = _useProfileContext.profileData,\n      getProfileInformations = _useProfileContext.getProfileInformations;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLogged = _useState2[0],\n      setIsLogged = _useState2[1];\n\n  var _useCognitoIdTokenUpd = useCognitoIdTokenUpdate(),\n      cognitoIdToken = _useCognitoIdTokenUpd.cognitoIdToken;\n\n  var cookies = new Cookies();\n  var corpAgentId = cookies.get(\"corpAgentId\");\n  useEffect(function () {\n    if (isConfig) {\n      var isAuth = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setIsUserAuth(isUserAuth);\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function isAuth() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      isAuth();\n    }\n  }, [isConfig, isUserAuth]);\n\n  var handleClickMyTrip = function handleClickMyTrip() {\n    saveOnGa({\n      event: \"header_event\",\n      category: \"Account\",\n      action: \"Click on header options\",\n      label: \"click on header item :: mytrips\"\n    });\n    window.location.href = \"/mytravels/reservations/\";\n  };\n\n  useEffect(function () {\n    setIsLogged(cognitoIdToken);\n  }, [cognitoIdToken]);\n  var name = profileData.name,\n      birthdate = profileData.birthdate,\n      contact = profileData.contact,\n      cpf = profileData.cpf;\n  var getProfile = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var profileResp, hasProfileInfo;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return getProfileInformations();\n\n          case 2:\n            profileResp = _context2.sent;\n            hasProfileInfo = !!(profileResp === null || profileResp === void 0 ? void 0 : profileResp.name) && !!(profileResp === null || profileResp === void 0 ? void 0 : profileResp.birthdate) && !!(profileResp === null || profileResp === void 0 ? void 0 : profileResp.contact) && !!(profileResp === null || profileResp === void 0 ? void 0 : profileResp.cpf);\n\n            if (!hasProfileInfo) {\n              logout({\n                noReload: true\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), []);\n  useEffect(function () {\n    if (featureToggles(ctx, \"PROFILE\") && isUserAuth) {\n      getProfile();\n    }\n  }, [isUserAuth]);\n  var requiredProfileInformations = useMemo(function () {\n    return !!name && !!birthdate && !!contact && !!cpf;\n  }, [birthdate, contact, cpf, name]);\n  var profileInfo = useMemo(function () {\n    if (featureToggles(ctx, \"PROFILE\")) {\n      return requiredProfileInformations;\n    }\n\n    return true;\n  }, [ctx, requiredProfileInformations]);\n\n  if (verifyIsBrand(ctx, \"Sub\") || featureToggles(ctx, \"NEW_LOGIN\")) {\n    if ((!!findCognitoIdToken() || !!cognitoIdToken || !!isLogged || !!corpAgentId) && profileInfo) {\n      return /*#__PURE__*/_jsxDEV(UserAreaButtons, {\n        lightTheme: lightTheme,\n        className: className,\n        onClickLogout: function onClickLogout() {\n          return logout({\n            willBeSavedInGA: true\n          });\n        },\n        onClickMyTravels: handleClickMyTrip,\n        newLogin: featureToggles(ctx, \"NEW_LOGIN\"),\n        employer: corpAgentId,\n        isCVC: verifyIsBrand(ctx, \"CVC\"),\n        isMobile: !desktopSize,\n        isLogged: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, _this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\".concat(classes.loginNoRegister, \" \").concat(className, \" login-info-container\"),\n      children: /*#__PURE__*/_jsxDEV(ModalLogin, {\n        textBtnLogin: featureToggles(ctx, \"NEW_LOGIN\") ? /*#__PURE__*/_jsxDEV(UserAreaIcon, {\n          isEmployer: true,\n          text: featureToggles(ctx, \"NEW_LOGIN\") ? \"Entre ou cadastre-se\" : null,\n          isMobile: !desktopSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 31\n        }, _this) : \"Entrar\",\n        isMobile: !desktopSize,\n        newLogin: featureToggles(ctx, \"NEW_LOGIN\") ? classes.loginBtn : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, _this);\n  }\n\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\".concat(lightTheme ? classes.loggedLight : classes.logged, \" \").concat(className, \" login-info-container\"),\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: lightTheme ? classes.avatarLight : classes.avatar,\n        src: user.avatar,\n        children: user.name.slice(0, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(UserAreaInfo, {\n        userName: user.name,\n        className: lightTheme ? classes.userLight : classes.user,\n        hiddenMyTravels: !lightTheme,\n        newLogin: featureToggles(ctx, \"NEW_LOGIN\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, _this), lightTheme && /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        label: \"Sair\",\n        size: \"small\",\n        variant: \"outlined\",\n        className: classes.logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 32\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, _this);\n  }\n\n  if (lightTheme) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\".concat(classes.loginNoRegister, \" \").concat(className, \" login-info-container\"),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(UserAreaInfo, {\n          userName: \"Viajante\",\n          className: classes.hello\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          label: \"Entrar\",\n          size: \"small\",\n          variant: \"outlined\",\n          href: ctx.menu.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\".concat(classes.login, \"  \").concat(className, \" login-info-container\"),\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classes.loginBtn,\n      href: ctx.menu.login,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        type: \"body2semibold\",\n        className: classes.loginBtnTxt,\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Header, \"ygSWdxaQL8/Un1UhUJuBgw1rzgM=\", false, function () {\n  return [useMediaQuery, useStyles, useGa, useUserDataContext, useProfileContext, useCognitoIdTokenUpdate];\n});\n\n_c = Header;\nHeader.propTypes = {\n  user: PropTypes.object,\n  lightTheme: PropTypes.bool,\n  className: PropTypes.string\n};\nHeader.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Header\",\n  \"props\": {\n    \"user\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"lightTheme\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"className\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\UserArea\\\\index.js\"] = {\n    name: \"Header\",\n    docgenInfo: Header.__docgenInfo,\n    path: \"src\\\\UserArea\\\\index.js\"\n  };\n}","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/UserArea/index.js"],"names":["React","useCallback","useContext","useEffect","useMemo","useState","Avatar","useMediaQuery","PropTypes","Cookies","BrandContext","Button","ModalLogin","useProfileContext","Typography","useUserDataContext","featureToggles","verifyIsBrand","findCognitoIdToken","useGa","useCognitoIdTokenUpdate","UserAreaInfo","UserAreaButtons","UserAreaIcon","useStyles","Header","user","lightTheme","className","ctx","desktopSize","classes","saveOnGa","isUserAuth","setIsUserAuth","isConfig","logout","profileData","getProfileInformations","isLogged","setIsLogged","cognitoIdToken","cookies","corpAgentId","get","isAuth","handleClickMyTrip","event","category","action","label","window","location","href","name","birthdate","contact","cpf","getProfile","profileResp","hasProfileInfo","noReload","requiredProfileInformations","profileInfo","willBeSavedInGA","loginNoRegister","loginBtn","loggedLight","logged","avatarLight","avatar","slice","userLight","hello","menu","login","loginBtnTxt","propTypes","object","bool","string"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { Avatar, useMediaQuery } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport Cookies from \"universal-cookie\";\nimport { BrandContext } from \"../BrandContext\";\nimport Button from \"../Button\";\nimport ModalLogin from \"../MyTravelLogin/shared/components/ModalLogin\";\nimport { useProfileContext } from \"../ProfileContext\";\nimport Typography from \"../Typography\";\nimport { useUserDataContext } from \"../UserContext\";\nimport { featureToggles, verifyIsBrand, findCognitoIdToken } from \"../utils\"\nimport useGa from \"../utils/useGa\";\nimport useCognitoIdTokenUpdate from \"./CognitoIdTokenUpdate\";\nimport { UserAreaInfo, UserAreaButtons, UserAreaIcon } from \"./components\";\nimport { useStyles } from \"./styles\"\n\nconst Header = ({ user, lightTheme, className }) => {\n    const ctx = useContext(BrandContext);\n    const desktopSize = useMediaQuery(\"(min-width:768px)\");\n    const classes = useStyles({});\n    const { saveOnGa } = useGa();\n    const { isUserAuth, setIsUserAuth, isConfig, logout } = useUserDataContext();\n    const { profileData, getProfileInformations } = useProfileContext();\n\n    const [isLogged, setIsLogged] = useState(false);\n\n    const { cognitoIdToken } = useCognitoIdTokenUpdate();\n\n    const cookies = new Cookies();\n    const corpAgentId = cookies.get(\"corpAgentId\");\n\n    useEffect(() => {\n        if (isConfig) {\n            const isAuth = async () => {\n                setIsUserAuth(isUserAuth);\n            };\n            isAuth();\n        }\n    }, [isConfig, isUserAuth]);\n\n    const handleClickMyTrip = () => {\n        saveOnGa({\n            event: \"header_event\",\n            category: \"Account\",\n            action: \"Click on header options\",\n            label: \"click on header item :: mytrips\"\n        });\n        window.location.href = \"/mytravels/reservations/\"\n    };\n\n    useEffect(() => {\n        setIsLogged(cognitoIdToken);\n    }, [cognitoIdToken]);\n\n    const { name, birthdate, contact, cpf } = profileData\n\n    const getProfile = useCallback(async() => {\n        const profileResp = await getProfileInformations()\n        const hasProfileInfo = !!profileResp?.name && !!profileResp?.birthdate && !!profileResp?.contact && !!profileResp?.cpf\n        if(!hasProfileInfo){\n            logout({\n                noReload: true\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        if(featureToggles(ctx, \"PROFILE\") && isUserAuth){\n            getProfile()\n        }\n    }, [isUserAuth])\n\n    const requiredProfileInformations = useMemo(() => {\n        return !!name && !!birthdate && !!contact && !!cpf\n    }, [birthdate, contact, cpf, name])\n\n    const profileInfo = useMemo(() => {\n        if(featureToggles(ctx, \"PROFILE\")){\n            return requiredProfileInformations\n        }\n        return true\n\n    }, [ctx, requiredProfileInformations])\n\n    if (verifyIsBrand(ctx, \"Sub\") || featureToggles(ctx, \"NEW_LOGIN\")) {\n        if ((!!findCognitoIdToken() || !!cognitoIdToken || !!isLogged || !!corpAgentId) && profileInfo ) {\n            return (\n                <UserAreaButtons\n                    lightTheme={lightTheme}\n                    className={className}\n                    onClickLogout={() => logout({\n                        willBeSavedInGA: true\n                    })}\n                    onClickMyTravels={handleClickMyTrip}\n                    newLogin={featureToggles(ctx, \"NEW_LOGIN\")}\n                    employer={corpAgentId}\n                    isCVC={verifyIsBrand(ctx, \"CVC\")}\n                    isMobile={!desktopSize}\n                    isLogged\n                />\n            );\n        }\n\n        return (\n            <div className={`${classes.loginNoRegister} ${className} login-info-container`}>\n                <ModalLogin\n                    textBtnLogin={\n                        featureToggles(ctx, \"NEW_LOGIN\")\n                            ? <UserAreaIcon\n                                isEmployer\n                                text={featureToggles(ctx, \"NEW_LOGIN\") ? \"Entre ou cadastre-se\" : null}\n                                isMobile={!desktopSize}\n                            />\n                            : \"Entrar\"\n                    }\n                    isMobile={!desktopSize}\n                    newLogin={featureToggles(ctx, \"NEW_LOGIN\") ? classes.loginBtn : null}\n                />\n            </div>\n        );\n    }\n\n    if (user) {\n        return (\n            <div className={`${lightTheme ? classes.loggedLight : classes.logged} ${className} login-info-container`}>\n                <Avatar className={lightTheme ? classes.avatarLight : classes.avatar} src={user.avatar}>\n                    {user.name.slice(0, 2)}\n                </Avatar>\n                <UserAreaInfo\n                    userName={user.name}\n                    className={lightTheme ? classes.userLight : classes.user}\n                    hiddenMyTravels={!lightTheme}\n                    newLogin={featureToggles(ctx, \"NEW_LOGIN\")}\n                />\n                {lightTheme && <Button color=\"primary\" label=\"Sair\" size=\"small\" variant=\"outlined\" className={classes.logout} />}\n            </div>\n        );\n    }\n\n    if (lightTheme) {\n        return (\n            <div className={`${classes.loginNoRegister} ${className} login-info-container`}>\n                <div>\n                    <UserAreaInfo\n                        userName=\"Viajante\"\n                        className={classes.hello}\n                    />\n                </div>\n                <div>\n                    <Button color=\"primary\" label=\"Entrar\" size=\"small\" variant=\"outlined\" href={ctx.menu.login} />\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className={`${classes.login}  ${className} login-info-container`}>\n            <a className={classes.loginBtn} href={ctx.menu.login}>\n                <Typography type=\"body2semibold\" className={classes.loginBtnTxt}>\n                    Entrar\n                </Typography>\n            </a>\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    user: PropTypes.object,\n    lightTheme: PropTypes.bool,\n    className: PropTypes.string\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}