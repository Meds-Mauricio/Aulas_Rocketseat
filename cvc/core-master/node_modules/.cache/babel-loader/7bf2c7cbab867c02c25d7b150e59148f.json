{"ast":null,"code":"import _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\Banners\\\\Banners.js\",\n    _this = this;\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { styles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar uuidv4 = require(\"uuid/v4\");\n\nvar Banners = function Banners(_ref) {\n  var classes = _ref.classes,\n      settings = _ref.settings,\n      isSlider = _ref.isSlider,\n      dfp = _ref.dfp;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [isSlider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.fullWidth,\n      children: /*#__PURE__*/_jsxDEV(Slider, _objectSpread(_objectSpread({}, settings), {}, {\n        children: dfp.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.item,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: item.tag\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 33\n            }, _this)\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }, _this);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, _this), !isSlider && dfp.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: item.tag,\n        className: classes.notSlider\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Banners;\nBanners.propTypes = {\n  classes: PropTypes.object.isRequired,\n  settings: PropTypes.object,\n  isSlider: PropTypes.bool,\n  dfp: PropTypes.arrayOf(PropTypes.object)\n};\nBanners.defaultProps = {\n  infinite: false\n};\nBanners.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Banners\",\n  \"props\": {\n    \"infinite\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"classes\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"settings\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isSlider\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"dfp\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"object\"\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(Banners);\n\nvar _c;\n\n$RefreshReg$(_c, \"Banners\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\Banners\\\\Banners.js\"] = {\n    name: \"Banners\",\n    docgenInfo: Banners.__docgenInfo,\n    path: \"src\\\\Banners\\\\Banners.js\"\n  };\n}","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/Banners/Banners.js"],"names":["React","PropTypes","Slider","withStyles","styles","uuidv4","require","Banners","classes","settings","isSlider","dfp","root","fullWidth","map","item","tag","notSlider","propTypes","object","isRequired","bool","arrayOf","defaultProps","infinite","withTheme"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA0C;AAAA,MAAvCC,OAAuC,QAAvCA,OAAuC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AAAA,MAAVC,GAAU,QAAVA,GAAU;AACtD,sBACI;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACI,IAAxB;AAAA,eACKF,QAAQ,iBACL;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACK,SAAxB;AAAA,6BACI,QAAC,MAAD,kCAAYJ,QAAZ;AAAA,kBACKE,GAAG,CAACG,GAAJ,CAAQ,UAAAC,IAAI;AAAA,8BACT;AAAoB,YAAA,SAAS,EAAEP,OAAO,CAACO,IAAvC;AAAA,mCACI;AAAK,cAAA,EAAE,EAAEA,IAAI,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUX,MAAM,EAAhB;AAAA;AAAA;AAAA;AAAA,mBADS;AAAA,SAAZ;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAFR,EAYK,CAACK,QAAD,IACLC,GAAG,CAACG,GAAJ,CAAQ,UAAAC,IAAI;AAAA,0BACR;AAAK,QAAA,EAAE,EAAEA,IAAI,CAACC,GAAd;AAAkC,QAAA,SAAS,EAAER,OAAO,CAACS;AAArD,SAAwBZ,MAAM,EAA9B;AAAA;AAAA;AAAA;AAAA,eADQ;AAAA,KAAZ,CAbA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAmBH,CApBD;;KAAME,O;AAsBNA,OAAO,CAACW,SAAR,GAAoB;AAChBV,EAAAA,OAAO,EAAEP,SAAS,CAACkB,MAAV,CAAiBC,UADV;AAEhBX,EAAAA,QAAQ,EAAER,SAAS,CAACkB,MAFJ;AAGhBT,EAAAA,QAAQ,EAAET,SAAS,CAACoB,IAHJ;AAIhBV,EAAAA,GAAG,EAAEV,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACkB,MAA5B;AAJW,CAApB;AAOAZ,OAAO,CAACgB,YAAR,GAAuB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,eAAerB,UAAU,CAACC,MAAD,EAAS;AAAEqB,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwClB,OAAxC,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { styles } from \"./styles\";\n\nconst uuidv4 = require(\"uuid/v4\");\n\nconst Banners = ({ classes, settings, isSlider, dfp }) => {\n    return (\n        <div className={classes.root}>\n            {isSlider && (\n                <div className={classes.fullWidth}>\n                    <Slider {...settings}>\n                        {dfp.map(item => (\n                            <div key={uuidv4()} className={classes.item}>\n                                <div id={item.tag} />\n                            </div>\n                        ))}\n                    </Slider>\n                </div>\n            )}\n            {!isSlider &&\n        dfp.map(item => (\n            <div id={item.tag} key={uuidv4()} className={classes.notSlider} />\n        ))}\n        </div>\n    );\n};\n\nBanners.propTypes = {\n    classes: PropTypes.object.isRequired,\n    settings: PropTypes.object,\n    isSlider: PropTypes.bool,\n    dfp: PropTypes.arrayOf(PropTypes.object),\n};\n\nBanners.defaultProps = { infinite: false };\n\nexport default withStyles(styles, { withTheme: true })(Banners);\n"]},"metadata":{},"sourceType":"module"}