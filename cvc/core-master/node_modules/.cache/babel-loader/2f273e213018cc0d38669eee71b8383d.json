{"ast":null,"code":"export default function getValidationErrors(err) {\n  var validationErrors = {};\n  err.inner.forEach(function (error) {\n    if (error.path) {\n      validationErrors[error.path] = error.message;\n    }\n  });\n  return validationErrors;\n}","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/MyTravelLogin/shared/utils/getValidationErrors.ts"],"names":["getValidationErrors","err","validationErrors","inner","forEach","error","path","message"],"mappings":"AAMA,eAAe,SAASA,mBAAT,CAA6BC,GAA7B,EAA2D;AACtE,MAAMC,gBAAwB,GAAG,EAAjC;AAEAD,EAAAA,GAAG,CAACE,KAAJ,CAAUC,OAAV,CAAkB,UAACC,KAAD,EAAW;AACzB,QAAGA,KAAK,CAACC,IAAT,EAAc;AACVJ,MAAAA,gBAAgB,CAACG,KAAK,CAACC,IAAP,CAAhB,GAA+BD,KAAK,CAACE,OAArC;AACH;AACJ,GAJD;AAKA,SAAOL,gBAAP;AACH","sourcesContent":["import { ValidationError } from \"yup\";\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n    const validationErrors: Errors = {};\n\n    err.inner.forEach((error) => {\n        if(error.path){\n            validationErrors[error.path] = error.message;\n        }\n    });\n    return validationErrors;\n}\n"]},"metadata":{},"sourceType":"module"}