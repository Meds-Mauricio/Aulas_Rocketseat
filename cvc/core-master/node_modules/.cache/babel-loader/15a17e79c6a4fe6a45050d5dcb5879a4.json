{"ast":null,"code":"import _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\Button\\\\Stories\\\\NavigationButtons.stories.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from \\\"react\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { jsxDecorator } from \\\"storybook-addon-jsx\\\";\\nimport { Paper, Divider, Grid } from \\\"@material-ui/core\\\";\\nimport { makeStyles, MuiThemeProvider } from \\\"@material-ui/core/styles\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { muiTheme } from \\\"storybook-addon-material-ui\\\";\\nimport { DropLeft, DropRight } from \\\"@cvccorp-components/icons\\\";\\nimport Theme from \\\"../../Theme\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport Button from \\\"../Button\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\n\\nconst useStyles = makeStyles((theme) => ({\\n    root: {\\n        boxShadow: theme.shadows[24],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        padding: \\\"20px\\\",\\n    },\\n}));\\n\\ntype NavigationButtonsProps = {\\n    mode: string,\\n    brand: BrandType,\\n    color: string,\\n    variant: string,\\n    size: string,\\n    direction: string\\n}\\n\\n\\nexport const NavigationButtons = \\n    ({\\n        brand,\\n        mode,\\n        color,\\n        variant,\\n        size,\\n        direction\\n    }: NavigationButtonsProps): JSX.Element => {\\n    const classes = useStyles(themes[brand]);\\n\\n    const directions = {\\n        left: <DropLeft size={size} />,\\n        right: <DropRight size={size} />\\n    }\\n\\n    return (\\n        <MuiThemeProvider theme={themes[brand]}>\\n            <Paper className={classes[mode]} id=\\\"botoes\\\">\\n                <Typography variant=\\\"h3\\\">Botão de navegação</Typography>\\n                <br />\\n                <Divider />\\n                <br />\\n                <Grid item xs={12}>\\n                    <Button\\n                        color={color}\\n                        size={size}\\n                        icon={directions[direction]}\\n                        nextPrev\\n                        variant={variant}\\n                        iconPosition=\\\"center\\\"\\n                    />\\n                </Grid>\\n            </Paper>\\n        </MuiThemeProvider>\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"CVC\\\",\\n        mode: \\\"root\\\",\\n        color: 'primary',\\n        variant: 'contained',\\n        size: 'small',\\n        direction: 'left'\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"],\\n            brand: \\\"CVC\\\",\\n            mode: \\\"root\\\",\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"root\\\", \\\"darkBg\\\"]\\n        },\\n        color: {\\n            options: ['default', 'primary', 'secondary'],\\n            control: { type: 'select' }\\n        },\\n        variant: {\\n            options: ['outlined', 'contained'],\\n            control: { type: 'radio' }\\n        },\\n        size: {\\n            options: ['small', 'medium', 'large'],\\n            control: { type: 'select' }\\n        },\\n        direction: {\\n            options: ['left', 'right'],\\n            control: { type: 'radio' }\\n        },\\n    }\\n}\\n\\nstoriesOf(\\\"Components/Buttons/Button\\\", module)\\n    .addDecorator(muiTheme([Theme]))\\n    .addDecorator(jsxDecorator)\\n    .add(\\\"Navegação\\\", (args) => <NavigationButtons {...args} />, argsControls);\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"navegação\": {\n    \"startLoc\": {\n      \"col\": 9,\n      \"line\": 115\n    },\n    \"endLoc\": {\n      \"col\": 77,\n      \"line\": 115\n    },\n    \"startBody\": {\n      \"col\": 22,\n      \"line\": 115\n    },\n    \"endBody\": {\n      \"col\": 63,\n      \"line\": 115\n    }\n  }\n};\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDecorator } from \"storybook-addon-jsx\";\nimport { Paper, Divider, Grid } from \"@material-ui/core\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { storiesOf } from \"@storybook/react\";\nimport { muiTheme } from \"storybook-addon-material-ui\";\nimport { DropLeft, DropRight } from \"@cvccorp-components/icons\";\nimport Theme from \"../../Theme\";\nimport themes from \"../../Theme/themes\";\nimport Button from \"../Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      boxShadow: theme.shadows[24],\n      padding: \"30px\"\n    },\n    darkBg: {\n      background: \"rgba(0, 0, 0, 0.6)\",\n      padding: \"20px\"\n    }\n  };\n});\nexport var NavigationButtons = function NavigationButtons(_ref) {\n  _s();\n\n  var brand = _ref.brand,\n      mode = _ref.mode,\n      color = _ref.color,\n      variant = _ref.variant,\n      size = _ref.size,\n      direction = _ref.direction;\n  var classes = useStyles(themes[brand]);\n  var directions = {\n    left: /*#__PURE__*/_jsxDEV(DropLeft, {\n      size: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, _this),\n    right: /*#__PURE__*/_jsxDEV(DropRight, {\n      size: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, _this)\n  };\n  return /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n    theme: themes[brand],\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes[mode],\n      id: \"botoes\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Bot\\xE3o de navega\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: color,\n          size: size,\n          icon: directions[direction],\n          nextPrev: true,\n          variant: variant,\n          iconPosition: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(NavigationButtons, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NavigationButtons;\nvar argsControls = {\n  args: {\n    brand: \"CVC\",\n    mode: \"root\",\n    color: 'primary',\n    variant: 'contained',\n    size: 'small',\n    direction: 'left'\n  },\n  argTypes: {\n    brand: {\n      type: \"select\",\n      options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"],\n      brand: \"CVC\",\n      mode: \"root\"\n    },\n    mode: {\n      type: \"select\",\n      options: [\"root\", \"darkBg\"]\n    },\n    color: {\n      options: ['default', 'primary', 'secondary'],\n      control: {\n        type: 'select'\n      }\n    },\n    variant: {\n      options: ['outlined', 'contained'],\n      control: {\n        type: 'radio'\n      }\n    },\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: {\n        type: 'select'\n      }\n    },\n    direction: {\n      options: ['left', 'right'],\n      control: {\n        type: 'radio'\n      }\n    }\n  }\n};\nstoriesOf(\"Components/Buttons/Button\", module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __LOCATIONS_MAP__\n  }\n}).addDecorator(muiTheme([Theme])).addDecorator(jsxDecorator).add(\"Navegação\", function (args) {\n  return /*#__PURE__*/_jsxDEV(NavigationButtons, _objectSpread({}, args), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 33\n  }, _this);\n}, argsControls);\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationButtons\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/Button/Stories/NavigationButtons.stories.tsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","Typography","jsxDecorator","Paper","Divider","Grid","makeStyles","MuiThemeProvider","storiesOf","muiTheme","DropLeft","DropRight","Theme","themes","Button","useStyles","theme","root","boxShadow","shadows","padding","darkBg","background","NavigationButtons","brand","mode","color","variant","size","direction","classes","directions","left","right","argsControls","args","argTypes","type","options","control","module","addParameters","storySource","source","locationsMap","addDecorator","add"],"mappings":"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","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { jsxDecorator } from \\\"storybook-addon-jsx\\\";\\nimport { Paper, Divider, Grid } from \\\"@material-ui/core\\\";\\nimport { makeStyles, MuiThemeProvider } from \\\"@material-ui/core/styles\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { muiTheme } from \\\"storybook-addon-material-ui\\\";\\nimport { DropLeft, DropRight } from \\\"@cvccorp-components/icons\\\";\\nimport Theme from \\\"../../Theme\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport Button from \\\"../Button\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\n\\nconst useStyles = makeStyles((theme) => ({\\n    root: {\\n        boxShadow: theme.shadows[24],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        padding: \\\"20px\\\",\\n    },\\n}));\\n\\ntype NavigationButtonsProps = {\\n    mode: string,\\n    brand: BrandType,\\n    color: string,\\n    variant: string,\\n    size: string,\\n    direction: string\\n}\\n\\n\\nexport const NavigationButtons = \\n    ({\\n        brand,\\n        mode,\\n        color,\\n        variant,\\n        size,\\n        direction\\n    }: NavigationButtonsProps): JSX.Element => {\\n    const classes = useStyles(themes[brand]);\\n\\n    const directions = {\\n        left: <DropLeft size={size} />,\\n        right: <DropRight size={size} />\\n    }\\n\\n    return (\\n        <MuiThemeProvider theme={themes[brand]}>\\n            <Paper className={classes[mode]} id=\\\"botoes\\\">\\n                <Typography variant=\\\"h3\\\">Botão de navegação</Typography>\\n                <br />\\n                <Divider />\\n                <br />\\n                <Grid item xs={12}>\\n                    <Button\\n                        color={color}\\n                        size={size}\\n                        icon={directions[direction]}\\n                        nextPrev\\n                        variant={variant}\\n                        iconPosition=\\\"center\\\"\\n                    />\\n                </Grid>\\n            </Paper>\\n        </MuiThemeProvider>\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"CVC\\\",\\n        mode: \\\"root\\\",\\n        color: 'primary',\\n        variant: 'contained',\\n        size: 'small',\\n        direction: 'left'\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"],\\n            brand: \\\"CVC\\\",\\n            mode: \\\"root\\\",\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"root\\\", \\\"darkBg\\\"]\\n        },\\n        color: {\\n            options: ['default', 'primary', 'secondary'],\\n            control: { type: 'select' }\\n        },\\n        variant: {\\n            options: ['outlined', 'contained'],\\n            control: { type: 'radio' }\\n        },\\n        size: {\\n            options: ['small', 'medium', 'large'],\\n            control: { type: 'select' }\\n        },\\n        direction: {\\n            options: ['left', 'right'],\\n            control: { type: 'radio' }\\n        },\\n    }\\n}\\n\\nstoriesOf(\\\"Components/Buttons/Button\\\", module)\\n    .addDecorator(muiTheme([Theme]))\\n    .addDecorator(jsxDecorator)\\n    .add(\\\"Navegação\\\", (args) => <NavigationButtons {...args} />, argsControls);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"navegação\":{\"startLoc\":{\"col\":9,\"line\":115},\"endLoc\":{\"col\":77,\"line\":115},\"startBody\":{\"col\":22,\"line\":115},\"endBody\":{\"col\":63,\"line\":115}}};\n    \nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDecorator } from \"storybook-addon-jsx\";\nimport { Paper, Divider, Grid } from \"@material-ui/core\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { storiesOf } from \"@storybook/react\";\nimport { muiTheme } from \"storybook-addon-material-ui\";\nimport { DropLeft, DropRight } from \"@cvccorp-components/icons\";\nimport Theme from \"../../Theme\";\nimport themes from \"../../Theme/themes\";\nimport Button from \"../Button\";\nimport { BrandType } from \"../../types/brand\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        boxShadow: theme.shadows[24],\n        padding: \"30px\",\n    },\n    darkBg: {\n        background: \"rgba(0, 0, 0, 0.6)\",\n        padding: \"20px\",\n    },\n}));\n\ntype NavigationButtonsProps = {\n    mode: string,\n    brand: BrandType,\n    color: string,\n    variant: string,\n    size: string,\n    direction: string\n}\n\n\nexport const NavigationButtons = \n    ({\n        brand,\n        mode,\n        color,\n        variant,\n        size,\n        direction\n    }: NavigationButtonsProps): JSX.Element => {\n    const classes = useStyles(themes[brand]);\n\n    const directions = {\n        left: <DropLeft size={size} />,\n        right: <DropRight size={size} />\n    }\n\n    return (\n        <MuiThemeProvider theme={themes[brand]}>\n            <Paper className={classes[mode]} id=\"botoes\">\n                <Typography variant=\"h3\">Botão de navegação</Typography>\n                <br />\n                <Divider />\n                <br />\n                <Grid item xs={12}>\n                    <Button\n                        color={color}\n                        size={size}\n                        icon={directions[direction]}\n                        nextPrev\n                        variant={variant}\n                        iconPosition=\"center\"\n                    />\n                </Grid>\n            </Paper>\n        </MuiThemeProvider>\n    );\n};\n\nconst argsControls = {\n    args: {\n        brand: \"CVC\",\n        mode: \"root\",\n        color: 'primary',\n        variant: 'contained',\n        size: 'small',\n        direction: 'left'\n    },\n    argTypes: {\n        brand: {\n            type: \"select\",\n            options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"],\n            brand: \"CVC\",\n            mode: \"root\",\n        },\n        mode: {\n            type: \"select\",\n            options: [\"root\", \"darkBg\"]\n        },\n        color: {\n            options: ['default', 'primary', 'secondary'],\n            control: { type: 'select' }\n        },\n        variant: {\n            options: ['outlined', 'contained'],\n            control: { type: 'radio' }\n        },\n        size: {\n            options: ['small', 'medium', 'large'],\n            control: { type: 'select' }\n        },\n        direction: {\n            options: ['left', 'right'],\n            control: { type: 'radio' }\n        },\n    }\n}\n\nstoriesOf(\"Components/Buttons/Button\", module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } })\n    .addDecorator(muiTheme([Theme]))\n    .addDecorator(jsxDecorator)\n    .add(\"Navegação\", (args) => <NavigationButtons {...args} />, argsControls);\n"]},"metadata":{},"sourceType":"module"}