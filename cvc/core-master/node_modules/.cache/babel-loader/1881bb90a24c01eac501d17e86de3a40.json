{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\Snackbar\\\\Snackbar.js\",\n    _this = this;\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\"; // Components\n\nimport { Success, ErrorIcon } from \"@cvccorp-components/icons\"; //  Styles\n\nimport { styles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CustomSnackbar = function CustomSnackbar(_ref) {\n  var hasIcon = _ref.hasIcon,\n      hasBtn = _ref.hasBtn,\n      type = _ref.type,\n      isOpen = _ref.isOpen,\n      close = _ref.close,\n      labelClose = _ref.labelClose,\n      classes = _ref.classes,\n      message = _ref.message;\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: isOpen,\n    onClose: close,\n    children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n      classes: {\n        message: classes.message\n      },\n      className: classes[type],\n      message: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.text,\n          children: [hasIcon && type === \"success\" && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.spacing,\n            children: /*#__PURE__*/_jsxDEV(Success, {\n              size: \"medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, _this), hasIcon && type === \"error\" && /*#__PURE__*/_jsxDEV(ErrorIcon, {\n            size: \"medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 57\n          }, _this), message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, _this), hasBtn && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.closeButton,\n          onClick: close,\n          children: labelClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = CustomSnackbar;\nCustomSnackbar.propTypes = {\n  classes: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  type: PropTypes.string,\n  isOpen: PropTypes.bool,\n  hasIcon: PropTypes.bool,\n  message: PropTypes.string,\n  hasBtn: PropTypes.bool,\n  close: PropTypes.func,\n  labelClose: PropTypes.string\n};\nCustomSnackbar.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CustomSnackbar\",\n  \"props\": {\n    \"classes\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"object\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isOpen\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hasIcon\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"message\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hasBtn\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"close\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"labelClose\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(CustomSnackbar);\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSnackbar\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\Snackbar\\\\Snackbar.js\"] = {\n    name: \"CustomSnackbar\",\n    docgenInfo: CustomSnackbar.__docgenInfo,\n    path: \"src\\\\Snackbar\\\\Snackbar.js\"\n  };\n}","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/Snackbar/Snackbar.js"],"names":["React","PropTypes","withStyles","Snackbar","SnackbarContent","Success","ErrorIcon","styles","CustomSnackbar","hasIcon","hasBtn","type","isOpen","close","labelClose","classes","message","content","text","spacing","closeButton","propTypes","oneOfType","object","string","isRequired","bool","func","withTheme"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,eAAP,MAA4B,mCAA5B,C,CAEA;;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,2BAAnC,C,CAEA;;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,MAAYC,MAAZ,QAAYA,MAAZ;AAAA,MAAoBC,IAApB,QAAoBA,IAApB;AAAA,MAA0BC,MAA1B,QAA0BA,MAA1B;AAAA,MAAkCC,KAAlC,QAAkCA,KAAlC;AAAA,MAAyCC,UAAzC,QAAyCA,UAAzC;AAAA,MAAqDC,OAArD,QAAqDA,OAArD;AAAA,MAA8DC,OAA9D,QAA8DA,OAA9D;AAAA,sBACnB,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEJ,MAAhB;AAAwB,IAAA,OAAO,EAAEC,KAAjC;AAAA,2BACI,QAAC,eAAD;AACI,MAAA,OAAO,EAAE;AAAEG,QAAAA,OAAO,EAAED,OAAO,CAACC;AAAnB,OADb;AAEI,MAAA,SAAS,EAAED,OAAO,CAACJ,IAAD,CAFtB;AAGI,MAAA,OAAO,eACH;AAAK,QAAA,SAAS,EAAEI,OAAO,CAACE,OAAxB;AAAA,gCACI;AAAM,UAAA,SAAS,EAAEF,OAAO,CAACG,IAAzB;AAAA,qBACKT,OAAO,IAAIE,IAAI,KAAK,SAApB,iBACG;AAAM,YAAA,SAAS,EAAEI,OAAO,CAACI,OAAzB;AAAA,mCACI,QAAC,OAAD;AAAS,cAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,mBAFR,EAMKV,OAAO,IAAIE,IAAI,KAAK,OAApB,iBAA+B,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,mBANpC,EAOKK,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAUKN,MAAM,iBACH;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEK,OAAO,CAACK,WAAzC;AAAsD,UAAA,OAAO,EAAEP,KAA/D;AAAA,oBACKC;AADL;AAAA;AAAA;AAAA;AAAA,iBAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADmB;AAAA,CAAvB;;KAAMN,c;AA2BNA,cAAc,CAACa,SAAf,GAA2B;AACvBN,EAAAA,OAAO,EAAEd,SAAS,CAACqB,SAAV,CAAoB,CAACrB,SAAS,CAACsB,MAAX,EAAmBtB,SAAS,CAACuB,MAA7B,CAApB,EAA0DC,UAD5C;AAEvBd,EAAAA,IAAI,EAAEV,SAAS,CAACuB,MAFO;AAGvBZ,EAAAA,MAAM,EAAEX,SAAS,CAACyB,IAHK;AAIvBjB,EAAAA,OAAO,EAAER,SAAS,CAACyB,IAJI;AAKvBV,EAAAA,OAAO,EAAEf,SAAS,CAACuB,MALI;AAMvBd,EAAAA,MAAM,EAAET,SAAS,CAACyB,IANK;AAOvBb,EAAAA,KAAK,EAAEZ,SAAS,CAAC0B,IAPM;AAQvBb,EAAAA,UAAU,EAAEb,SAAS,CAACuB;AARC,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,eAAetB,UAAU,CAACK,MAAD,EAAS;AAAEqB,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwCpB,cAAxC,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\n\n// Components\nimport { Success, ErrorIcon } from \"@cvccorp-components/icons\";\n\n//  Styles\nimport { styles } from \"./styles\";\n\nconst CustomSnackbar = ({ hasIcon, hasBtn, type, isOpen, close, labelClose, classes, message }) => (\n    <Snackbar open={isOpen} onClose={close}>\n        <SnackbarContent\n            classes={{ message: classes.message }}\n            className={classes[type]}\n            message={\n                <div className={classes.content}>\n                    <span className={classes.text}>\n                        {hasIcon && type === \"success\" && (\n                            <span className={classes.spacing}>\n                                <Success size=\"medium\" />\n                            </span>\n                        )}\n                        {hasIcon && type === \"error\" && <ErrorIcon size=\"medium\" />}\n                        {message}\n                    </span>\n                    {hasBtn && (\n                        <button type=\"button\" className={classes.closeButton} onClick={close}>\n                            {labelClose}\n                        </button>\n                    )}\n                </div>\n            }\n        />\n    </Snackbar>\n);\n\nCustomSnackbar.propTypes = {\n    classes: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    type: PropTypes.string,\n    isOpen: PropTypes.bool,\n    hasIcon: PropTypes.bool,\n    message: PropTypes.string,\n    hasBtn: PropTypes.bool,\n    close: PropTypes.func,\n    labelClose: PropTypes.string,\n};\n\nexport default withStyles(styles, { withTheme: true })(CustomSnackbar);\n"]},"metadata":{},"sourceType":"module"}