{"ast":null,"code":"import _slicedToArray from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\Tabs\\\\Tabs.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport CustomTypography from \"../Typography\";\nimport { styles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TabContainer(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CustomTypography, {\n      component: \"body1\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabContainer;\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nvar CustomTab = function CustomTab(_ref2) {\n  _s();\n\n  var classes = _ref2.classes,\n      content = _ref2.content,\n      selected = _ref2.selected,\n      handleChange = _ref2.handleChange;\n\n  var _React$useState = React.useState(selected || content[0].value),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  function onHandleChange(event, newValue) {\n    if (handleChange) handleChange(newValue && newValue);\n    setValue(newValue);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: value,\n      onChange: onHandleChange,\n      className: classes.container,\n      TabIndicatorProps: {\n        style: {\n          bottom: \"5px\"\n        }\n      },\n      children: content.map(function (item, key) {\n        return /*#__PURE__*/_jsxDEV(Tab, {\n          classes: {\n            root: classes.root,\n            label: classes.label,\n            textColorInherit: classes.textColorInherit\n          },\n          value: item.value,\n          label: item.label,\n          selected: item.value === value\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this), content.map(function (item, key) {\n      if (value === item.value) {\n        return /*#__PURE__*/_jsxDEV(TabContainer, {\n          children: item.content\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }, _this);\n      }\n\n      return null;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CustomTab, \"bGTc1Zf5/RP7Xzy5RqjLgYjgot4=\");\n\n_c2 = CustomTab;\nCustomTab.propTypes = {\n  classes: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  content: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  handleChange: PropTypes.func\n};\nCustomTab.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CustomTab\",\n  \"props\": {\n    \"classes\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"object\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"content\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"array\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(CustomTab);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabContainer\");\n$RefreshReg$(_c2, \"CustomTab\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\Tabs\\\\Tabs.js\"] = {\n    name: \"CustomTab\",\n    docgenInfo: CustomTab.__docgenInfo,\n    path: \"src\\\\Tabs\\\\Tabs.js\"\n  };\n}","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/Tabs/Tabs.js"],"names":["React","PropTypes","withStyles","Tabs","Tab","CustomTypography","styles","TabContainer","children","propTypes","node","isRequired","CustomTab","classes","content","selected","handleChange","useState","value","setValue","onHandleChange","event","newValue","container","style","bottom","map","item","key","root","label","textColorInherit","oneOfType","object","string","array","func","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport CustomTypography from \"../Typography\";\nimport { styles } from \"./styles\";\n\nfunction TabContainer({ children }) {\n    return (\n        <div>\n            <CustomTypography component=\"body1\">{children}</CustomTypography>\n        </div>\n    );\n}\nTabContainer.propTypes = { children: PropTypes.node.isRequired };\n\nconst CustomTab = ({ classes, content, selected, handleChange }) => {\n    const [value, setValue] = React.useState(selected || content[0].value);\n\n    function onHandleChange(event, newValue) {\n        if (handleChange) handleChange(newValue && newValue);\n        setValue(newValue);\n    }\n\n    return (\n        <div>\n            <Tabs value={value} onChange={onHandleChange} className={classes.container} TabIndicatorProps={{ style: { bottom: \"5px\" } }}>\n                {content.map((item, key) => (\n                    <Tab\n                        classes={{\n                            root: classes.root,\n                            label: classes.label,\n                            textColorInherit: classes.textColorInherit\n                        }}\n                        value={item.value}\n                        key={key}\n                        label={item.label}\n                        selected={item.value === value}\n                    />\n                ))}\n            </Tabs>\n            {content.map((item, key) => {\n                if (value === item.value) {\n                    return <TabContainer key={key}>{item.content}</TabContainer>;\n                }\n                return null;\n            })}\n        </div>\n    );\n};\n\nCustomTab.propTypes = {\n    classes: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    content: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n    handleChange: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(CustomTab);\n"]},"metadata":{},"sourceType":"module"}