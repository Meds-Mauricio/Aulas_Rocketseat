{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\MapItem\\\\MapItem.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport { Hotel } from \"@cvccorp-components/icons\";\nimport InfoBox from \"react-google-maps/lib/components/addons/InfoBox\";\nimport { Bubbly } from \"./styles\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar MapGroup = withScriptjs(_c2 = withGoogleMap(_c = _s(function (_ref) {\n  _s();\n\n  var defaultData = _ref.defaultData,\n      data = _ref.data,\n      zoom = _ref.zoom,\n      active = _ref.active,\n      handleSelect = _ref.handleSelect,\n      onZoomChanged = _ref.onZoomChanged;\n  var mapRefs = useRef(null);\n\n  var handleOnZoomChanged = function handleOnZoomChanged() {\n    if (onZoomChanged) onZoomChanged(mapRefs.current);\n  };\n\n  return data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: zoom,\n      defaultCenter: {\n        lat: defaultData.coordinates.latitude,\n        lng: defaultData.coordinates.longitude\n      },\n      options: {\n        streetViewControl: false,\n        fullscreenControl: false,\n        mapTypeControl: false\n      },\n      ref: mapRefs,\n      onZoomChanged: handleOnZoomChanged,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        name: data.id,\n        position: {\n          lat: data.coordinates.latitude,\n          lng: data.coordinates.longitude\n        },\n        visible: false,\n        children: /*#__PURE__*/_jsxDEV(InfoBox, {\n          options: {\n            closeBoxURL: \"\",\n            enableEventPropagation: true,\n            boxStyle: {\n              overflow: \"visible\"\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Bubbly, {\n            active: active === data.id,\n            onClick: function onClick() {\n              return handleSelect(data);\n            },\n            children: /*#__PURE__*/_jsxDEV(Hotel, {\n              size: \"medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, _this)\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, _this)\n  }, void 0, false) : null;\n}, \"ozMLCqvcJTGFbU/mmVn9SUw7dUU=\")));\n_c3 = MapGroup;\nexport default MapGroup;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MapGroup$withScriptjs$withGoogleMap\");\n$RefreshReg$(_c2, \"MapGroup$withScriptjs\");\n$RefreshReg$(_c3, \"MapGroup\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/MapItem/MapItem.js"],"names":["React","useRef","withScriptjs","withGoogleMap","GoogleMap","Marker","Hotel","InfoBox","Bubbly","MapGroup","defaultData","data","zoom","active","handleSelect","onZoomChanged","mapRefs","handleOnZoomChanged","current","lat","coordinates","latitude","lng","longitude","streetViewControl","fullscreenControl","mapTypeControl","id","closeBoxURL","enableEventPropagation","boxStyle","overflow"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,MAJJ,QAKO,mBALP;AAMA,SAASC,KAAT,QAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,iDAApB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,cAAP;;;AAEA,IAAMC,QAAQ,GAAGP,YAAY,OACzBC,aAAa,SACT,gBAAsE;AAAA;;AAAA,MAAnEO,WAAmE,QAAnEA,WAAmE;AAAA,MAAtDC,IAAsD,QAAtDA,IAAsD;AAAA,MAAhDC,IAAgD,QAAhDA,IAAgD;AAAA,MAA1CC,MAA0C,QAA1CA,MAA0C;AAAA,MAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AAClE,MAAMC,OAAO,GAAGf,MAAM,CAAC,IAAD,CAAtB;;AAEA,MAAMgB,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,QAAIF,aAAJ,EAAmBA,aAAa,CAACC,OAAO,CAACE,OAAT,CAAb;AACtB,GAFD;;AAIA,SAAOP,IAAI,gBACP;AAAA,2BACI,QAAC,SAAD;AACI,MAAA,WAAW,EAAEC,IADjB;AAEI,MAAA,aAAa,EAAE;AACXO,QAAAA,GAAG,EAAET,WAAW,CAACU,WAAZ,CAAwBC,QADlB;AAEXC,QAAAA,GAAG,EAAEZ,WAAW,CAACU,WAAZ,CAAwBG;AAFlB,OAFnB;AAMI,MAAA,OAAO,EAAE;AACLC,QAAAA,iBAAiB,EAAE,KADd;AAELC,QAAAA,iBAAiB,EAAE,KAFd;AAGLC,QAAAA,cAAc,EAAE;AAHX,OANb;AAWI,MAAA,GAAG,EAAEV,OAXT;AAYI,MAAA,aAAa,EAAEC,mBAZnB;AAAA,6BAcI,QAAC,MAAD;AACI,QAAA,IAAI,EAAEN,IAAI,CAACgB,EADf;AAGI,QAAA,QAAQ,EAAE;AACNR,UAAAA,GAAG,EAAER,IAAI,CAACS,WAAL,CAAiBC,QADhB;AAENC,UAAAA,GAAG,EAAEX,IAAI,CAACS,WAAL,CAAiBG;AAFhB,SAHd;AAOI,QAAA,OAAO,EAAE,KAPb;AAAA,+BASI,QAAC,OAAD;AACI,UAAA,OAAO,EAAE;AACLK,YAAAA,WAAW,EAAE,EADR;AAELC,YAAAA,sBAAsB,EAAE,IAFnB;AAGLC,YAAAA,QAAQ,EAAG;AACTC,cAAAA,QAAQ;AADC;AAHN,WADb;AAAA,iCASI,QAAC,MAAD;AACI,YAAA,MAAM,EAAElB,MAAM,KAAKF,IAAI,CAACgB,EAD5B;AAEI,YAAA,OAAO,EAAE;AAAA,qBAAMb,YAAY,CAACH,IAAD,CAAlB;AAAA,aAFb;AAAA,mCAII,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AATJ,SAESA,IAAI,CAACgB,EAFd;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADO,GA4CP,IA5CJ;AA6CH,CArDQ,kCADY,CAA7B;MAAMlB,Q;AA0DN,eAAeA,QAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n} from \"react-google-maps\";\nimport { Hotel } from \"@cvccorp-components/icons\";\nimport InfoBox from \"react-google-maps/lib/components/addons/InfoBox\";\nimport { Bubbly } from \"./styles\";\nimport \"./styles.css\";\n\nconst MapGroup = withScriptjs(\n    withGoogleMap(\n        ({ defaultData, data, zoom, active, handleSelect, onZoomChanged }) => {\n            const mapRefs = useRef(null);\n\n            const handleOnZoomChanged = () => {\n                if (onZoomChanged) onZoomChanged(mapRefs.current);\n            };\n\n            return data ? (\n                <>\n                    <GoogleMap\n                        defaultZoom={zoom}\n                        defaultCenter={{\n                            lat: defaultData.coordinates.latitude,\n                            lng: defaultData.coordinates.longitude,\n                        }}\n                        options={{\n                            streetViewControl: false,\n                            fullscreenControl: false,\n                            mapTypeControl: false,\n                        }}\n                        ref={mapRefs}\n                        onZoomChanged={handleOnZoomChanged}\n                    >\n                        <Marker\n                            name={data.id}\n                            key={data.id}\n                            position={{\n                                lat: data.coordinates.latitude,\n                                lng: data.coordinates.longitude,\n                            }}\n                            visible={false}\n                        >\n                            <InfoBox\n                                options={{\n                                    closeBoxURL: \"\",\n                                    enableEventPropagation: true,\n                                    boxStyle:  {\n                                      overflow: `visible`\n                                    },\n                                }}\n                            >\n                                <Bubbly\n                                    active={active === data.id}\n                                    onClick={() => handleSelect(data)}\n                                >\n                                    <Hotel size=\"medium\" />\n                                </Bubbly>\n                            </InfoBox>\n                        </Marker>\n                    </GoogleMap>\n                </>\n            ) : null;\n        }\n    )\n);\n\nexport default MapGroup;\n"]},"metadata":{},"sourceType":"module"}