{"ast":null,"code":"import _slicedToArray from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\MyTravelLogin\\\\contexts\\\\AmplifyContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport crypto from \"crypto\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { BrandContext } from \"../../BrandContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar AuthAmplifyContext = /*#__PURE__*/createContext({});\n\nvar AuthAmplifyProvider = function AuthAmplifyProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      authAmplify = _useState2[0],\n      setAuthAmplify = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      amplifyPwd = _useState4[0],\n      setAmplifyPwd = _useState4[1];\n\n  var temp = crypto.randomBytes(10).toString(\"hex\");\n  var ctx = useContext(BrandContext);\n  var amplifyTempPwd = \"\".concat(temp, \"@\").concat(ctx.brand);\n  return /*#__PURE__*/_jsxDEV(AuthAmplifyContext.Provider, {\n    value: {\n      authAmplify: authAmplify,\n      setAuthAmplify: setAuthAmplify,\n      amplifyTempPwd: amplifyTempPwd,\n      amplifyPwd: amplifyPwd,\n      setAmplifyPwd: setAmplifyPwd\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AuthAmplifyProvider, \"WhZ2/rIKqCL4n+jj5DFnezbCFrg=\");\n\n_c = AuthAmplifyProvider;\n\nfunction useAuthAmplifyContext() {\n  _s2();\n\n  var context = useContext(AuthAmplifyContext);\n  return context;\n}\n\n_s2(useAuthAmplifyContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { AuthAmplifyProvider, useAuthAmplifyContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthAmplifyProvider\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/MyTravelLogin/contexts/AmplifyContext.tsx"],"names":["crypto","React","createContext","useContext","useState","BrandContext","AuthAmplifyContext","AuthAmplifyProvider","children","authAmplify","setAuthAmplify","amplifyPwd","setAmplifyPwd","temp","randomBytes","toString","ctx","amplifyTempPwd","brand","useAuthAmplifyContext","context"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAUA,IAAMC,kBAAkB,gBAAGJ,aAAa,CAAsB,EAAtB,CAAxC;;AAEA,IAAMK,mBAA6B,GAAG,SAAhCA,mBAAgC,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACpD,kBAAsCJ,QAAQ,CAAS,EAAT,CAA9C;AAAA;AAAA,MAAOK,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAoCN,QAAQ,CAAS,EAAT,CAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,IAAI,GAAGb,MAAM,CAACc,WAAP,CAAmB,EAAnB,EAAuBC,QAAvB,CAAgC,KAAhC,CAAb;AACA,MAAMC,GAAG,GAAGb,UAAU,CAACE,YAAD,CAAtB;AACA,MAAMY,cAAc,aAAOJ,IAAP,cAAeG,GAAG,CAACE,KAAnB,CAApB;AACA,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAAET,MAAAA,WAAW,EAAXA,WAAF;AAAeC,MAAAA,cAAc,EAAdA,cAAf;AAA+BO,MAAAA,cAAc,EAAdA,cAA/B;AAA+CN,MAAAA,UAAU,EAAVA,UAA/C;AAA2DC,MAAAA,aAAa,EAAbA;AAA3D,KAApC;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAXD;;GAAMD,mB;;KAAAA,mB;;AAaN,SAASY,qBAAT,GAAsD;AAAA;;AAClD,MAAMC,OAAO,GAAGjB,UAAU,CAACG,kBAAD,CAA1B;AACA,SAAOc,OAAP;AACH;;IAHQD,qB;;AAKT,SAASZ,mBAAT,EAA8BY,qBAA9B","sourcesContent":["import crypto from \"crypto\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { BrandContext } from \"../../BrandContext\";\n\ninterface IAuthAmplifyContext {\n    authAmplify: string;\n    setAuthAmplify(isAuthAmplify: string): void;\n    amplifyTempPwd: string;\n    amplifyPwd?: string;\n    setAmplifyPwd(pwd: string): void;\n}\n\nconst AuthAmplifyContext = createContext<IAuthAmplifyContext>({} as IAuthAmplifyContext);\n\nconst AuthAmplifyProvider: React.FC = ({ children }) => {\n    const [authAmplify, setAuthAmplify] = useState<string>(\"\");\n    const [amplifyPwd, setAmplifyPwd] = useState<string>(\"\");\n    const temp = crypto.randomBytes(10).toString(\"hex\");\n    const ctx = useContext(BrandContext);\n    const amplifyTempPwd = (`${temp}@${ctx.brand}`);\n    return (\n        <AuthAmplifyContext.Provider value={{ authAmplify, setAuthAmplify, amplifyTempPwd, amplifyPwd, setAmplifyPwd }}>\n            {children}\n        </AuthAmplifyContext.Provider>\n    );\n};\n\nfunction useAuthAmplifyContext(): IAuthAmplifyContext {\n    const context = useContext(AuthAmplifyContext);\n    return context;\n}\n\nexport { AuthAmplifyProvider, useAuthAmplifyContext };\n"]},"metadata":{},"sourceType":"module"}