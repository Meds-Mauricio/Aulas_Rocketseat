{"ast":null,"code":"import _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\MyTravelLogin\\\\UserAccessSteps\\\\Password\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable no-empty */\nimport React, { useRef, useCallback, useEffect, useState, useMemo, useContext } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { Auth } from \"aws-amplify\";\nimport { injectIntl } from \"react-intl\";\nimport * as Yup from \"yup\";\nimport { BrandContext } from \"../../../BrandContext\";\nimport { Redirect } from \"../../../BrandContext/amplify/aws.config\";\nimport { useProfileContext } from \"../../../ProfileContext\";\nimport { useUserDataContext } from \"../../../UserContext\";\nimport { getParam, featureToggles } from \"../../../utils\";\nimport useGa from \"../../../utils/useGa\";\nimport { useAuthAmplifyContext } from \"../../contexts/AmplifyContext\";\nimport { useLoadingContext } from \"../../contexts/LoadingContext\";\nimport { useRenderSteps } from \"../../contexts/renderSteps\";\nimport { useToast } from \"../../contexts/Toast\";\nimport Form from \"../../shared/components/Form\";\nimport HeaderLogin from \"../../shared/components/HeaderLogin\";\nimport Input from \"../../shared/components/Input\";\nimport InternalButton from \"../../shared/components/InternalButton\";\nimport Loading from \"../../shared/components/Loading\";\nimport SubTitle from \"../../shared/components/SubTitle\";\nimport Terms from \"../../shared/components/Terms\";\nimport Title from \"../../shared/components/Title\";\nimport { useUserData } from \"../../shared/hooks/UserContext\";\nimport translate from \"../../shared/i18n/translate\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Password = function Password(_ref) {\n  _s();\n\n  var intl = _ref.intl,\n      onCloseClick = _ref.onCloseClick,\n      isModal = _ref.isModal;\n  var classes = useStyles({});\n  var formRef = useRef(null);\n\n  var _useUserData = useUserData(),\n      user = _useUserData.user,\n      setUser = _useUserData.setUser;\n\n  var _useRenderSteps = useRenderSteps(),\n      renderNewStep = _useRenderSteps.renderNewStep,\n      setPreviousStep = _useRenderSteps.setPreviousStep;\n\n  var ctx = useContext(BrandContext);\n  var linkChangeEmail = intl.formatMessage({\n    id: \"Password.linkChangeEmail\"\n  });\n  var errorPasswordRequired = intl.formatMessage({\n    id: \"Password.errorPasswordRequired\"\n  });\n  var errorMessage = intl.formatMessage({\n    id: \"Password.errorMessage\"\n  });\n  var successToastMessageTitle = intl.formatMessage({\n    id: \"Password.successToastMessageTitle\"\n  });\n  var successToastMessageDescription = intl.formatMessage({\n    id: \"Password.successToastMessageDescription\"\n  });\n\n  var _useLoadingContext = useLoadingContext(),\n      loading = _useLoadingContext.loading,\n      setLoading = _useLoadingContext.setLoading;\n\n  var _useAuthAmplifyContex = useAuthAmplifyContext(),\n      setAmplifyPwd = _useAuthAmplifyContex.setAmplifyPwd;\n\n  var _useToast = useToast(),\n      addToast = _useToast.addToast;\n\n  var _useGa = useGa(),\n      saveOnGa = _useGa.saveOnGa;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasDoneProfileReq = _useState2[0],\n      setHasDoneProfileReq = _useState2[1];\n\n  var _useProfileContext = useProfileContext(),\n      getProfileInformations = _useProfileContext.getProfileInformations,\n      profileData = _useProfileContext.profileData;\n\n  var _useUserDataContext = useUserDataContext(),\n      setUserIdToken = _useUserDataContext.setUserIdToken,\n      setIsUserAuth = _useUserDataContext.setIsUserAuth;\n\n  var SignIn = useCallback( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var _siginRes$pool;\n\n      var email, password, siginRes, storagedData, i, key;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              email = _ref2.email, password = _ref2.password;\n              _context.next = 3;\n              return Auth.signIn(email, password);\n\n            case 3:\n              siginRes = _context.sent;\n              storagedData = siginRes === null || siginRes === void 0 ? void 0 : (_siginRes$pool = siginRes.pool) === null || _siginRes$pool === void 0 ? void 0 : _siginRes$pool.storage;\n\n              for (i = 0; i < storagedData.length; i += 1) {\n                key = storagedData.key(i);\n\n                if (key.startsWith(\"CognitoIdentityServiceProvider\") && key.endsWith(\"idToken\")) {\n                  setUserIdToken(storagedData.getItem(key));\n                }\n              }\n\n              setAmplifyPwd(password);\n\n              if (featureToggles(ctx, \"PROFILE\")) {\n                setHasDoneProfileReq(true);\n              } else {\n                handleSignInSucces();\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [setAmplifyPwd, setUserIdToken]);\n  var handleSignInSucces = useCallback(function () {\n    setIsUserAuth(true);\n    addToast({\n      type: \"success\",\n      title: successToastMessageTitle,\n      description: successToastMessageDescription\n    });\n    saveOnGa({\n      event: \"login_event\",\n      category: \"Account\",\n      action: \"Form Login\",\n      label: \"loggedUser ok\"\n    });\n\n    if (isModal) {\n      if (onCloseClick) {\n        onCloseClick();\n      }\n    } else {\n      if (getParam(\"path\")) {\n        window.location.href = \"\".concat(Redirect(ctx.hosts)).concat(getParam(\"path\"));\n        return;\n      }\n\n      window.location.href = \"\".concat(Redirect(ctx.hosts), \"/mytravels/reservations\");\n    }\n  }, [addToast, ctx.hosts, isModal, onCloseClick, saveOnGa, setIsUserAuth, successToastMessageDescription, successToastMessageTitle]);\n  useEffect(function () {\n    if (hasDoneProfileReq) {\n      setHasDoneProfileReq(false);\n      getProfileInformations();\n    }\n  }, [hasDoneProfileReq]);\n  var requiredProfileInformations = useMemo(function () {\n    return !!(profileData === null || profileData === void 0 ? void 0 : profileData.name) && !!(profileData === null || profileData === void 0 ? void 0 : profileData.birthdate) && !!(profileData === null || profileData === void 0 ? void 0 : profileData.contact) && !!(profileData === null || profileData === void 0 ? void 0 : profileData.cpf);\n  }, [profileData]);\n  useEffect(function () {\n    if (profileData === null || profileData === void 0 ? void 0 : profileData.email) {\n      setLoading(false);\n\n      if (!requiredProfileInformations) {\n        renderNewStep(\"AlmostThere\");\n        setPreviousStep(\"Password\");\n      } else {\n        handleSignInSucces();\n      }\n    }\n  }, [handleSignInSucces, profileData === null || profileData === void 0 ? void 0 : profileData.email, renderNewStep, requiredProfileInformations, setLoading, setPreviousStep]);\n  var handleSubmit = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n      var _formRef$current, schema, _formRef$current2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n              schema = Yup.object().shape({\n                password: Yup.string().required(errorPasswordRequired)\n              });\n              _context2.next = 5;\n              return schema.validate(data, {\n                abortEarly: false\n              });\n\n            case 5:\n              setLoading(true);\n              _context2.next = 8;\n              return SignIn({\n                email: user.email,\n                password: data.password\n              });\n\n            case 8:\n              _context2.next = 14;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              setLoading(false);\n              (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors({\n                password: errorMessage\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 10]]);\n    }));\n\n    return function (_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [SignIn, errorMessage, errorPasswordRequired, setLoading, user.email]);\n\n  var handleMainScreen = function handleMainScreen() {\n    saveOnGa({\n      event: \"login_event\",\n      category: \"Account\",\n      action: \"change email\",\n      label: \"action :: change email\"\n    });\n    setUser(_objectSpread(_objectSpread({}, user), {}, {\n      email: \"\"\n    }));\n    renderNewStep(\"MainScreen\");\n  };\n\n  var handleForgotPassword = function handleForgotPassword() {\n    saveOnGa({\n      event: \"login_event\",\n      category: \"Account\",\n      action: \"Recovery Password\",\n      label: \"step 1 | forgot password\"\n    });\n    renderNewStep(\"ForgotPassword\");\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 16\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderLogin, {\n      isModal: isModal,\n      previousStep: \"MainScreen\",\n      onCloseClick: onCloseClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: translate({\n          id: \"Password.title\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.emails,\n        children: [/*#__PURE__*/_jsxDEV(SubTitle, {\n          className: classes.subTitle,\n          children: user ? user.email : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          onClick: handleMainScreen,\n          className: classes.cursor,\n          children: /*#__PURE__*/_jsxDEV(SubTitle, {\n            style: {\n              marginLeft: \"5px\"\n            },\n            className: classes.subTitle,\n            children: linkChangeEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Form, {\n        ref: formRef,\n        handleSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          placeholderText: translate({\n            id: \"Password.password\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(InternalButton, {\n          type: \"submit\",\n          text: intl.formatMessage({\n            id: \"Password.actionButton\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"\".concat(classes.cursor, \" \").concat(classes.link),\n        onClick: function onClick() {\n          return handleForgotPassword();\n        },\n        children: /*#__PURE__*/_jsxDEV(SubTitle, {\n          variant: \"caption\",\n          className: classes.subTitle,\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: translate({\n              id: \"Password.forgotPassword\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Terms, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Password, \"pB/hlXqecjtLzaZ7GxCA5elRf/Q=\", false, function () {\n  return [useStyles, useUserData, useRenderSteps, useLoadingContext, useAuthAmplifyContext, useToast, useGa, useProfileContext, useUserDataContext];\n});\n\n_c = Password;\nexport default _c2 = injectIntl(Password);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Password\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/MyTravelLogin/UserAccessSteps/Password/index.tsx"],"names":["React","useRef","useCallback","useEffect","useState","useMemo","useContext","Link","Auth","injectIntl","Yup","BrandContext","Redirect","useProfileContext","useUserDataContext","getParam","featureToggles","useGa","useAuthAmplifyContext","useLoadingContext","useRenderSteps","useToast","Form","HeaderLogin","Input","InternalButton","Loading","SubTitle","Terms","Title","useUserData","translate","useStyles","Password","intl","onCloseClick","isModal","classes","formRef","user","setUser","renderNewStep","setPreviousStep","ctx","linkChangeEmail","formatMessage","id","errorPasswordRequired","errorMessage","successToastMessageTitle","successToastMessageDescription","loading","setLoading","setAmplifyPwd","addToast","saveOnGa","hasDoneProfileReq","setHasDoneProfileReq","getProfileInformations","profileData","setUserIdToken","setIsUserAuth","SignIn","email","password","signIn","siginRes","storagedData","pool","storage","i","length","key","startsWith","endsWith","getItem","handleSignInSucces","type","title","description","event","category","action","label","window","location","href","hosts","requiredProfileInformations","name","birthdate","contact","cpf","handleSubmit","data","current","setErrors","schema","object","shape","string","required","validate","abortEarly","handleMainScreen","handleForgotPassword","root","emails","subTitle","cursor","marginLeft","link"],"mappings":"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","sourcesContent":["/* eslint-disable no-empty */\nimport React, { useRef, useCallback, useEffect, useState, useMemo, useContext } from \"react\";\nimport Link from \"@material-ui/core/Link\";\nimport { FormHandles } from \"@unform/core\";\nimport { Auth } from \"aws-amplify\";\nimport { IntlShape, injectIntl } from \"react-intl\";\nimport * as Yup from \"yup\";\nimport { BrandContext } from \"../../../BrandContext\";\nimport { Redirect } from \"../../../BrandContext/amplify/aws.config\"\nimport {useProfileContext} from \"../../../ProfileContext\"\nimport { useUserDataContext } from \"../../../UserContext\";\nimport { getParam , featureToggles, verifyIsBrand } from \"../../../utils\";\nimport useGa from \"../../../utils/useGa\";\nimport { useAuthAmplifyContext } from \"../../contexts/AmplifyContext\";\nimport { useLoadingContext } from \"../../contexts/LoadingContext\";\nimport { useRenderSteps } from \"../../contexts/renderSteps\";\nimport { useToast } from \"../../contexts/Toast\";\nimport Form from \"../../shared/components/Form\";\nimport HeaderLogin from \"../../shared/components/HeaderLogin\";\nimport Input from \"../../shared/components/Input\";\nimport InternalButton from \"../../shared/components/InternalButton\";\nimport Loading from \"../../shared/components/Loading\";\nimport SubTitle from \"../../shared/components/SubTitle\";\nimport Terms from \"../../shared/components/Terms\";\nimport Title from \"../../shared/components/Title\";\nimport { useUserData } from \"../../shared/hooks/UserContext\";\nimport translate from \"../../shared/i18n/translate\";\nimport useStyles from \"./styles\";\n\ninterface IPasswordProps {\n    password: string;\n}\n\ninterface TPasswordProps {\n    onCloseClick?(): void;\n    intl: IntlShape;\n    isModal?: boolean;\n}\n\ninterface ISignIn {\n    email: string\n    password:string\n}\n\nconst Password: React.FC<TPasswordProps> = ({ intl, onCloseClick, isModal }) => {\n    const classes = useStyles({});\n    const formRef = useRef<FormHandles>(null);\n    const { user, setUser } = useUserData();\n    const { renderNewStep, setPreviousStep } = useRenderSteps();\n    const ctx = useContext(BrandContext);\n    const linkChangeEmail = intl.formatMessage({ id: \"Password.linkChangeEmail\" });\n    const errorPasswordRequired = intl.formatMessage({ id: \"Password.errorPasswordRequired\" });\n    const errorMessage = intl.formatMessage({ id: \"Password.errorMessage\" });\n    const successToastMessageTitle = intl.formatMessage({ id: \"Password.successToastMessageTitle\" });\n    const successToastMessageDescription = intl.formatMessage({ id: \"Password.successToastMessageDescription\" });\n    const { loading, setLoading } = useLoadingContext();\n    const { setAmplifyPwd } = useAuthAmplifyContext();\n    const { addToast } = useToast();\n    const { saveOnGa } = useGa();\n    const [hasDoneProfileReq , setHasDoneProfileReq] = useState(false)\n    const {  getProfileInformations, profileData  } = useProfileContext()\n    const { setUserIdToken, setIsUserAuth } = useUserDataContext();\n\n    const SignIn = useCallback( async({email, password}: ISignIn) => {\n        const siginRes =  await Auth.signIn(email, password);\n        const storagedData = siginRes?.pool?.storage\n\n        for (let i = 0; i < storagedData.length; i += 1) {\n            const key = storagedData.key(i)\n            if (key.startsWith(\"CognitoIdentityServiceProvider\") && key.endsWith(\"idToken\")) {\n                setUserIdToken(storagedData.getItem(key));\n            }\n        }\n        setAmplifyPwd(password);\n        if (featureToggles(ctx, \"PROFILE\")) {\n            setHasDoneProfileReq(true)\n        }else {\n            handleSignInSucces()\n        }\n    }, [setAmplifyPwd, setUserIdToken])\n\n    const handleSignInSucces = useCallback(() => {\n        setIsUserAuth(true)\n        addToast({\n            type: \"success\",\n            title: successToastMessageTitle,\n            description: successToastMessageDescription,\n        });\n\n        saveOnGa({\n            event: \"login_event\",\n            category: \"Account\",\n            action: \"Form Login\",\n            label: \"loggedUser ok\"\n        });\n\n        if (isModal) {\n            if (onCloseClick) {\n                onCloseClick();\n            }\n        } else {\n            if (getParam(\"path\")) {\n                window.location.href = `${Redirect(ctx.hosts)}${getParam(\"path\")}`\n                return\n            }\n            window.location.href = `${Redirect(ctx.hosts)}/mytravels/reservations`;\n\n        }\n    }, [addToast, ctx.hosts, isModal, onCloseClick, saveOnGa, setIsUserAuth, successToastMessageDescription, successToastMessageTitle])\n\n    useEffect(() => {\n        if(hasDoneProfileReq){\n            setHasDoneProfileReq(false)\n            getProfileInformations()\n        }\n\n    }, [hasDoneProfileReq])\n\n    const requiredProfileInformations = useMemo(() => {\n        return !!profileData?.name && !!profileData?.birthdate && !!profileData?.contact && !!profileData?.cpf\n    }, [profileData])\n\n    useEffect(() => {\n        if(profileData?.email) {\n            setLoading(false);\n            if(!requiredProfileInformations) {\n                renderNewStep(\"AlmostThere\")\n                setPreviousStep(\"Password\")\n            }else {\n                handleSignInSucces()\n            }\n        }\n    }, [handleSignInSucces, profileData?.email, renderNewStep, requiredProfileInformations, setLoading, setPreviousStep])\n\n    const handleSubmit = useCallback(async (data: IPasswordProps): Promise<void> => {\n        try {\n            formRef.current?.setErrors({});\n            const schema = Yup.object().shape({\n                password: Yup.string().required(errorPasswordRequired),\n            });\n\n            await schema.validate(data, {\n                abortEarly: false\n            });\n\n            setLoading(true);\n            await SignIn({email: user.email, password: data.password})\n        } catch (error) {\n            setLoading(false);\n            formRef.current?.setErrors({ password: errorMessage });\n        }\n    }, [SignIn, errorMessage, errorPasswordRequired, setLoading, user.email]);\n\n    const handleMainScreen = () => {\n        saveOnGa({\n            event: \"login_event\",\n            category: \"Account\",\n            action: \"change email\",\n            label: \"action :: change email\"\n        });\n        setUser({\n            ...user,\n            email: \"\"\n        });\n        renderNewStep(\"MainScreen\");\n    };\n\n    const handleForgotPassword = () => {\n        saveOnGa({\n            event: \"login_event\",\n            category: \"Account\",\n            action: \"Recovery Password\",\n            label: \"step 1 | forgot password\"\n        });\n        renderNewStep(\"ForgotPassword\");\n    };\n\n    if(loading) {\n        return <Loading />\n    }\n\n    return <>\n        <HeaderLogin isModal={isModal} previousStep=\"MainScreen\" onCloseClick={onCloseClick} />\n        <div className={classes.root}>\n            <Title>\n                {translate({ id: \"Password.title\" })}\n            </Title>\n            <div className={classes.emails}>\n                <SubTitle className={classes.subTitle} >\n                    {user ? user.email : \"\"}\n                </SubTitle>\n                <Link onClick={(handleMainScreen)} className={classes.cursor}>\n                    <SubTitle style={{ marginLeft: \"5px\" }} className={classes.subTitle} >\n                        {linkChangeEmail}\n                    </SubTitle>\n                </Link>\n            </div>\n\n            <Form ref={formRef} handleSubmit={handleSubmit} >\n                <Input\n                    type=\"password\"\n                    name=\"password\"\n                    placeholderText={translate({ id: \"Password.password\" })}\n                />\n                <InternalButton type=\"submit\" text={intl.formatMessage({ id: \"Password.actionButton\" })} />\n            </Form>\n\n            <Link\n                className={`${classes.cursor} ${classes.link}`}\n                onClick={() => handleForgotPassword()}\n            >\n                <SubTitle variant=\"caption\" className={classes.subTitle}>\n                    <b>{translate({ id: \"Password.forgotPassword\" })}</b>\n                </SubTitle>\n            </Link>\n\n        </div>\n        <Terms />\n    </>;\n};\n\nexport default injectIntl(Password);\n"]},"metadata":{},"sourceType":"module"}