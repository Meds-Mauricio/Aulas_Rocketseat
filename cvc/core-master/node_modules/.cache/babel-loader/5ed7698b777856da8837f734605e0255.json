{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\Checkbox\\\\Checkbox.js\",\n    _this = this;\n\nimport React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport { styles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CustomCheckbox = function CustomCheckbox(_ref) {\n  var checked = _ref.checked,\n      label = _ref.label,\n      classes = _ref.classes,\n      onChange = _ref.onChange,\n      inverted = _ref.inverted,\n      disabled = _ref.disabled;\n\n  var onHandleChange = function onHandleChange() {\n    if (onChange) onChange(!checked);\n  };\n\n  var checkBoxClasses = {\n    root: inverted ? classes.checkboxInverted : classes.checkbox,\n    disabled: classes.disabled\n  };\n  var formControlClasses = {\n    root: inverted ? classes.rootInverted : classes.root\n  };\n  var checkboxColor = inverted ? \"secondary\" : \"primary\";\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    classes: formControlClasses,\n    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n      color: checkboxColor,\n      onChange: onHandleChange,\n      classes: checkBoxClasses,\n      checked: checked,\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }, _this),\n    label: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = CustomCheckbox;\nCustomCheckbox.propTypes = {\n  classes: PropTypes.object.isRequired,\n  checked: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  onChange: PropTypes.func,\n  inverted: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nCustomCheckbox.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CustomCheckbox\",\n  \"props\": {\n    \"classes\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"checked\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"object\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"inverted\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(CustomCheckbox);\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomCheckbox\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\Checkbox\\\\Checkbox.js\"] = {\n    name: \"CustomCheckbox\",\n    docgenInfo: CustomCheckbox.__docgenInfo,\n    path: \"src\\\\Checkbox\\\\Checkbox.js\"\n  };\n}","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/Checkbox/Checkbox.js"],"names":["React","Checkbox","FormControlLabel","withStyles","PropTypes","styles","CustomCheckbox","checked","label","classes","onChange","inverted","disabled","onHandleChange","checkBoxClasses","root","checkboxInverted","checkbox","formControlClasses","rootInverted","checkboxColor","propTypes","object","isRequired","bool","oneOfType","string","func","withTheme"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAEjB;AAAA,MADFC,OACE,QADFA,OACE;AAAA,MADOC,KACP,QADOA,KACP;AAAA,MADcC,OACd,QADcA,OACd;AAAA,MADuBC,QACvB,QADuBA,QACvB;AAAA,MADiCC,QACjC,QADiCA,QACjC;AAAA,MAD2CC,QAC3C,QAD2CA,QAC3C;;AACF,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,QAAIH,QAAJ,EAAcA,QAAQ,CAAC,CAACH,OAAF,CAAR;AACjB,GAFD;;AAIA,MAAMO,eAAe,GAAG;AACpBC,IAAAA,IAAI,EAAEJ,QAAQ,GAAGF,OAAO,CAACO,gBAAX,GAA8BP,OAAO,CAACQ,QADhC;AAEpBL,IAAAA,QAAQ,EAAEH,OAAO,CAACG;AAFE,GAAxB;AAKA,MAAMM,kBAAkB,GAAG;AACvBH,IAAAA,IAAI,EAAEJ,QAAQ,GAAGF,OAAO,CAACU,YAAX,GAA0BV,OAAO,CAACM;AADzB,GAA3B;AAIA,MAAMK,aAAa,GAAGT,QAAQ,GAAG,WAAH,GAAiB,SAA/C;AAEA,sBACI,QAAC,gBAAD;AACI,IAAA,OAAO,EAAEO,kBADb;AAEI,IAAA,OAAO,eAAE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEE,aAAjB;AAAgC,MAAA,QAAQ,EAAEP,cAA1C;AAA0D,MAAA,OAAO,EAAEC,eAAnE;AAAoF,MAAA,OAAO,EAAEP,OAA7F;AAAsG,MAAA,QAAQ,EAAEK;AAAhH;AAAA;AAAA;AAAA;AAAA,aAFb;AAGI,IAAA,KAAK,EAAEJ;AAHX;AAAA;AAAA;AAAA;AAAA,WADJ;AAOH,CAzBD;;KAAMF,c;AA2BNA,cAAc,CAACe,SAAf,GAA2B;AACvBZ,EAAAA,OAAO,EAAEL,SAAS,CAACkB,MAAV,CAAiBC,UADH;AAEvBhB,EAAAA,OAAO,EAAEH,SAAS,CAACoB,IAFI;AAGvBhB,EAAAA,KAAK,EAAEJ,SAAS,CAACqB,SAAV,CAAoB,CAACrB,SAAS,CAACkB,MAAX,EAAmBlB,SAAS,CAACsB,MAA7B,CAApB,EAA0DH,UAH1C;AAIvBb,EAAAA,QAAQ,EAAEN,SAAS,CAACuB,IAJG;AAKvBhB,EAAAA,QAAQ,EAAEP,SAAS,CAACoB,IALG;AAMvBZ,EAAAA,QAAQ,EAAER,SAAS,CAACoB;AANG,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,eAAerB,UAAU,CAACE,MAAD,EAAS;AAAEuB,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwCtB,cAAxC,CAAf","sourcesContent":["import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from \"prop-types\";\nimport { styles } from \"./styles\";\n\nconst CustomCheckbox = ({\n    checked, label, classes, onChange, inverted, disabled\n}) => {\n    const onHandleChange = () => {\n        if (onChange) onChange(!checked);\n    };\n\n    const checkBoxClasses = {\n        root: inverted ? classes.checkboxInverted : classes.checkbox,\n        disabled: classes.disabled,\n    };\n\n    const formControlClasses = {\n        root: inverted ? classes.rootInverted : classes.root,\n    };\n\n    const checkboxColor = inverted ? \"secondary\" : \"primary\";\n\n    return (\n        <FormControlLabel\n            classes={formControlClasses}\n            control={<Checkbox color={checkboxColor} onChange={onHandleChange} classes={checkBoxClasses} checked={checked} disabled={disabled} />}\n            label={label}\n        />\n    );\n};\n\nCustomCheckbox.propTypes = {\n    classes: PropTypes.object.isRequired,\n    checked: PropTypes.bool,\n    label: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    onChange: PropTypes.func,\n    inverted: PropTypes.bool,\n    disabled: PropTypes.bool\n};\n\nexport default withStyles(styles, { withTheme: true })(CustomCheckbox);\n"]},"metadata":{},"sourceType":"module"}