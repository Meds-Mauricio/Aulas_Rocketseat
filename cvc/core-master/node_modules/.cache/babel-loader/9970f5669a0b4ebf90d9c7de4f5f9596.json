{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\MyTravelLogin\\\\UserAccessSteps\\\\NewRegister\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { injectIntl } from \"react-intl\";\nimport * as Yup from \"yup\";\nimport { useProfileContext } from \"../../../ProfileContext\";\nimport useGa from \"../../../utils/useGa\";\nimport { useAuthAmplifyContext } from \"../../contexts/AmplifyContext\";\nimport { useRenderSteps } from \"../../contexts/renderSteps\";\nimport { useToast } from \"../../contexts/Toast\";\nimport Form from \"../../shared/components/Form\";\nimport HeaderLogin from \"../../shared/components/HeaderLogin\";\nimport Input from \"../../shared/components/Input\";\nimport InternalButton from \"../../shared/components/InternalButton\";\nimport Terms from \"../../shared/components/Terms\";\nimport Title from \"../../shared/components/Title\";\nimport { useUserData } from \"../../shared/hooks/UserContext\";\nimport translate from \"../../shared/i18n/translate\";\nimport getValidationErrors from \"../../shared/utils/getValidationErrors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar NewRegister = function NewRegister(_ref) {\n  _s();\n\n  var intl = _ref.intl,\n      onCloseClick = _ref.onCloseClick,\n      isModal = _ref.isModal;\n\n  var _useUserData = useUserData(),\n      user = _useUserData.user;\n\n  var _useRenderSteps = useRenderSteps(),\n      renderNewStep = _useRenderSteps.renderNewStep,\n      setPreviousStep = _useRenderSteps.setPreviousStep;\n\n  var _useAuthAmplifyContex = useAuthAmplifyContext(),\n      setAuthAmplify = _useAuthAmplifyContex.setAuthAmplify,\n      setAmplifyPwd = _useAuthAmplifyContex.setAmplifyPwd;\n\n  var title = translate({\n    id: \"NewRegister.title\"\n  });\n  var placeHolderPwd = translate({\n    id: \"NewRegister.placeHolderPwd\"\n  });\n  var placeHolderConfirmPwd = translate({\n    id: \"NewRegister.placeHolderConfirmPwd\"\n  });\n  var errorPasswordRequired = intl.formatMessage({\n    id: \"NewRegister.errorPasswordRequired\"\n  });\n  var errorPasswordMatch = intl.formatMessage({\n    id: \"NewRegister.errorPasswordMatch\"\n  });\n  var errorMatchPwds = intl.formatMessage({\n    id: \"NewRegister.errorMatchPwds\"\n  });\n  var successToastMessageTitle = intl.formatMessage({\n    id: \"NewRegister.successToastMessageTitle\"\n  });\n  var successToastMessageDescription = intl.formatMessage({\n    id: \"NewRegister.successToastMessageDescription\"\n  });\n  var errorToastMessageTitle = intl.formatMessage({\n    id: \"NewRegister.errorToastMessageTitle\"\n  });\n  var errorToastMessageDescription = intl.formatMessage({\n    id: \"NewRegister.errorToastMessageDescription\"\n  });\n\n  var _useGa = useGa(),\n      saveOnGa = _useGa.saveOnGa;\n\n  var _useProfileContext = useProfileContext(),\n      setIsRegisterUserProfileStepToggle = _useProfileContext.setIsRegisterUserProfileStepToggle;\n\n  var formRef = useRef(null);\n\n  var _useToast = useToast(),\n      addToast = _useToast.addToast;\n\n  useEffect(function () {\n    setPreviousStep(\"ConfirmMainScreen\");\n    setIsRegisterUserProfileStepToggle(true);\n  }, [setIsRegisterUserProfileStepToggle, setPreviousStep]);\n  var submitForm = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formData) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve) {\n                  var _formRef$current, _formRef$current3, password, confirmPassword, schema, _formRef$current2, email, pwd, _formRef$current4;\n\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.prev = 0;\n                          (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n                          password = formData.password, confirmPassword = formData.confirmPassword;\n                          schema = Yup.object().shape({\n                            password: Yup.string().matches(/^(?=.*[0-9|#?!@$%^&*-]).{8,}$/, errorPasswordMatch).required(errorPasswordRequired)\n                          });\n                          _context.next = 6;\n                          return schema.validate(formData, {\n                            abortEarly: false\n                          });\n\n                        case 6:\n                          if (!(password !== confirmPassword)) {\n                            _context.next = 9;\n                            break;\n                          }\n\n                          (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors({\n                            confirmPassword: errorMatchPwds\n                          });\n                          return _context.abrupt(\"return\");\n\n                        case 9:\n                          (_formRef$current3 = formRef.current) === null || _formRef$current3 === void 0 ? void 0 : _formRef$current3.setErrors({\n                            confirmPassword: \"\"\n                          });\n                          email = user.email;\n                          pwd = formData.password;\n                          _context.next = 14;\n                          return SignUp(email, pwd);\n\n                        case 14:\n                          resolve(\"Success\");\n                          setAuthAmplify(\"confirmSignUp\");\n                          saveOnGa({\n                            event: \"login_event\",\n                            category: \"Account\",\n                            action: \"Registration\",\n                            label: \"step 2 | password registration\"\n                          });\n                          renderNewStep(\"ValidationCode\");\n                          _context.next = 23;\n                          break;\n\n                        case 20:\n                          _context.prev = 20;\n                          _context.t0 = _context[\"catch\"](0);\n\n                          if (_context.t0 instanceof Yup.ValidationError) {\n                            (_formRef$current4 = formRef.current) === null || _formRef$current4 === void 0 ? void 0 : _formRef$current4.setErrors(getValidationErrors(_context.t0));\n                          }\n\n                        case 23:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[0, 20]]);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n\n  var SignUp = function SignUp(email, pwd) {\n    return new Promise( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(resolve) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return Auth.signUp({\n                  username: email,\n                  password: pwd\n                });\n\n              case 3:\n                setAmplifyPwd(pwd);\n                resolve(\"Success\");\n                addToast({\n                  type: \"success\",\n                  title: successToastMessageTitle,\n                  description: successToastMessageDescription\n                });\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                addToast({\n                  type: \"error\",\n                  title: errorToastMessageTitle,\n                  description: errorToastMessageDescription\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 8]]);\n      }));\n\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderLogin, {\n      isModal: isModal,\n      previousStep: \"ConfirmMainScreen\",\n      onCloseClick: onCloseClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Form, {\n      ref: formRef,\n      handleSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"password\",\n        placeholderText: placeHolderPwd,\n        type: \"password\",\n        showTip: true,\n        infoMessage: errorPasswordMatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"confirmPassword\",\n        placeholderText: placeHolderConfirmPwd,\n        type: \"password\",\n        showTip: true,\n        infoMessage: errorPasswordMatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(InternalButton, {\n        text: \"Entrar\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Terms, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(NewRegister, \"sOYNCL4bFzZDrHO/7sAfX13kbQs=\", false, function () {\n  return [useUserData, useRenderSteps, useAuthAmplifyContext, useGa, useProfileContext, useToast];\n});\n\n_c = NewRegister;\nexport default _c2 = injectIntl(NewRegister);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewRegister\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/MyTravelLogin/UserAccessSteps/NewRegister/index.tsx"],"names":["React","useCallback","useEffect","useRef","Auth","injectIntl","Yup","useProfileContext","useGa","useAuthAmplifyContext","useRenderSteps","useToast","Form","HeaderLogin","Input","InternalButton","Terms","Title","useUserData","translate","getValidationErrors","NewRegister","intl","onCloseClick","isModal","user","renderNewStep","setPreviousStep","setAuthAmplify","setAmplifyPwd","title","id","placeHolderPwd","placeHolderConfirmPwd","errorPasswordRequired","formatMessage","errorPasswordMatch","errorMatchPwds","successToastMessageTitle","successToastMessageDescription","errorToastMessageTitle","errorToastMessageDescription","saveOnGa","setIsRegisterUserProfileStepToggle","formRef","addToast","submitForm","formData","Promise","resolve","current","setErrors","password","confirmPassword","schema","object","shape","string","matches","required","validate","abortEarly","email","pwd","SignUp","event","category","action","label","ValidationError","signUp","username","type","description"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef } from \"react\";\nimport { FormHandles } from \"@unform/core\";\nimport { Auth } from \"aws-amplify\";\nimport { injectIntl, IntlShape } from \"react-intl\";\nimport * as Yup from \"yup\";\nimport {useProfileContext} from \"../../../ProfileContext\"\nimport useGa from \"../../../utils/useGa\";\nimport { useAuthAmplifyContext } from \"../../contexts/AmplifyContext\";\nimport { useRenderSteps } from \"../../contexts/renderSteps\";\nimport { useToast } from \"../../contexts/Toast\";\nimport Form from \"../../shared/components/Form\";\nimport HeaderLogin from \"../../shared/components/HeaderLogin\";\nimport Input from \"../../shared/components/Input\";\nimport InternalButton from \"../../shared/components/InternalButton\";\nimport SubTitle from \"../../shared/components/SubTitle\";\nimport Terms from \"../../shared/components/Terms\";\nimport Title from \"../../shared/components/Title\";\nimport { useUserData } from \"../../shared/hooks/UserContext\";\nimport translate from \"../../shared/i18n/translate\";\nimport getValidationErrors from \"../../shared/utils/getValidationErrors\";\n\ninterface INewRegister {\n    intl: IntlShape;\n    onCloseClick?(): void;\n    isModal?: boolean;\n}\n\ninterface SubmitFormData {\n    name?: string;\n    surName?: string;\n    password: string;\n    confirmPassword: string;\n}\n\nconst NewRegister: React.FC<INewRegister> = ({ intl, onCloseClick, isModal }) => {\n    const { user } = useUserData();\n    const { renderNewStep, setPreviousStep } = useRenderSteps();\n    const { setAuthAmplify, setAmplifyPwd } = useAuthAmplifyContext();\n    const title = translate({ id: \"NewRegister.title\" });\n    const placeHolderPwd = translate({ id: \"NewRegister.placeHolderPwd\" });\n    const placeHolderConfirmPwd = translate({ id: \"NewRegister.placeHolderConfirmPwd\" });\n    const errorPasswordRequired = intl.formatMessage({ id: \"NewRegister.errorPasswordRequired\" });\n    const errorPasswordMatch = intl.formatMessage({ id: \"NewRegister.errorPasswordMatch\" });\n    const errorMatchPwds = intl.formatMessage({ id: \"NewRegister.errorMatchPwds\" });\n    const successToastMessageTitle = intl.formatMessage({ id: \"NewRegister.successToastMessageTitle\" });\n    const successToastMessageDescription = intl.formatMessage({ id: \"NewRegister.successToastMessageDescription\" });\n    const errorToastMessageTitle = intl.formatMessage({ id: \"NewRegister.errorToastMessageTitle\" });\n    const errorToastMessageDescription = intl.formatMessage({ id: \"NewRegister.errorToastMessageDescription\" });\n    const { saveOnGa } = useGa();\n    const {setIsRegisterUserProfileStepToggle} = useProfileContext()\n\n    const formRef = useRef<FormHandles>(null);\n    const { addToast } = useToast();\n\n    useEffect(() => {\n        setPreviousStep(\"ConfirmMainScreen\");\n        setIsRegisterUserProfileStepToggle(true)\n    }, [setIsRegisterUserProfileStepToggle, setPreviousStep]);\n\n    const submitForm = useCallback(async (formData: SubmitFormData) => new Promise(async (resolve) => {\n        try {\n            formRef.current?.setErrors({});\n            const { password, confirmPassword } = formData;\n\n            const schema = Yup.object().shape({\n                password: Yup.string().matches(/^(?=.*[0-9|#?!@$%^&*-]).{8,}$/, errorPasswordMatch).required(errorPasswordRequired),\n            });\n\n            await schema.validate(formData, {\n                abortEarly: false,\n            });\n\n            if (password !== confirmPassword) {\n                formRef.current?.setErrors({ confirmPassword: errorMatchPwds });\n                return;\n            }\n            formRef.current?.setErrors({ confirmPassword: \"\" });\n\n            const {email} = user;\n            const pwd = formData.password;\n\n            await SignUp(email, pwd);\n\n            resolve(\"Success\");\n            setAuthAmplify(\"confirmSignUp\");\n            saveOnGa({\n                event: \"login_event\",\n                category: \"Account\",\n                action: \"Registration\",\n                label: \"step 2 | password registration\"\n            });\n            renderNewStep(\"ValidationCode\");\n        } catch (err) {\n            if (err instanceof Yup.ValidationError) {\n                formRef.current?.setErrors(getValidationErrors(err));\n\n            }\n        }\n\n    }), []);\n\n    const SignUp = (email, pwd) => new Promise(async (resolve) => {\n        try {\n            await Auth.signUp({\n                username: email,\n                password: pwd\n            });\n            setAmplifyPwd(pwd);\n            resolve(\"Success\");\n            addToast({\n                type: \"success\",\n                title: successToastMessageTitle,\n                description: successToastMessageDescription\n            });\n        } catch (error) {\n            addToast({\n                type: \"error\",\n                title: errorToastMessageTitle,\n                description: errorToastMessageDescription\n            });\n        }\n    });\n\n    return (\n        <>\n            <HeaderLogin isModal={isModal} previousStep=\"ConfirmMainScreen\" onCloseClick={onCloseClick} />\n            <Form ref={formRef} handleSubmit={submitForm}>\n                <Title>{title}</Title>\n                <Input\n                    name=\"password\"\n                    placeholderText={placeHolderPwd}\n                    type=\"password\"\n                    showTip\n                    infoMessage={errorPasswordMatch}\n                />\n                <Input\n                    name=\"confirmPassword\"\n                    placeholderText={placeHolderConfirmPwd}\n                    type=\"password\"\n                    showTip\n                    infoMessage={errorPasswordMatch}\n                />\n\n                <InternalButton text=\"Entrar\" type=\"submit\" />\n                <Terms />\n            </Form>\n\n        </>\n    );\n};\n\nexport default injectIntl(NewRegister);\n"]},"metadata":{},"sourceType":"module"}