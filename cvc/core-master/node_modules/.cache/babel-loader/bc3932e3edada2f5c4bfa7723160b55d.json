{"ast":null,"code":"import _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\MapBundle\\\\Stories\\\\MapBundle.stories.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"\\nimport React, { useState } from \\\"react\\\";\\nimport { Paper, Divider, } from \\\"@material-ui/core\\\";\\nimport { makeStyles , MuiThemeProvider } from \\\"@material-ui/core/styles\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\nimport MapBundle from \\\"../MapBundle\\\";\\nimport mockHotel from \\\"./mockHotels.json\\\"\\n\\nconst useStyles = makeStyles((theme) => ({\\n    root: {\\n        background: theme.palette.background.default,\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n}));\\n\\ntype MapBundleStoryProps = {\\n    mode: string,\\n    brand: BrandType\\n}\\n\\nconst initDefaultData = () => {\\n    const middleLocation = mockHotel.hoteis[Math.floor(mockHotel.hoteis.length / 2)];\\n    return {\\n        title: \\\"2\\\",\\n        coordinates: {\\n            latitude: middleLocation.location.coordinates.latitude,\\n            longitude: middleLocation.location.coordinates.longitude,\\n        },\\n        zoom: 9\\n    }\\n}\\n\\nconst payloadMap = mockHotel.hoteis.map(mapData => {\\n    return {\\n        id: mapData.id,\\n        name: mapData.name,\\n        coordinates: {\\n            latitude: mapData.location.coordinates.latitude,\\n            longitude: mapData.location.coordinates.longitude\\n        },\\n        rate: {\\n            totalPrice: mapData.room.rate.pricePerDayWithTax,\\n        }\\n    }\\n})\\n\\nconst MapBundleStory = ({\\n    mode, brand\\n}: MapBundleStoryProps) => {\\n    const classes = useStyles(themes[brand]);\\n    const [defaultData] = useState(initDefaultData)\\n    \\n    return (\\n        <MuiThemeProvider theme={themes[brand]}>\\n            <Paper className={classes[mode]} id=\\\"MapBundle\\\">\\n                <Typography variant=\\\"h3\\\">MapBundle</Typography>\\n                <br />\\n                <Divider />\\n                <br />\\n                <MapBundle\\n                    gridSize={50}\\n                    maxZoom={14}\\n                    minimumClusterSize={1}\\n                    defaultData={defaultData}\\n                    data={payloadMap}\\n                    openInfo={false}\\n                    googleMapURL=\\\"https://www.google.com.br/maps/api/js?key=AIzaSyB_-QHk0PCeDlXgsi3bAuklXA--pfZQsdI&v=3.exp&libraries=geometry,drawing,places\\\"\\n                    loadingElement={<div style={{ height: \\\"100%\\\" }} />}\\n                    containerElement={<div style={{ height: \\\"400px\\\" }} />}\\n                    mapElement={<div style={{ height: \\\"100%\\\" }} />}\\n                    zoom={10}\\n                    active={false}\\n                    handleSelect={() => console.log(\\\"clicado\\\")}\\n                />\\n            </Paper>\\n        </MuiThemeProvider>\\n\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"CVC\\\",\\n        mode: \\\"root\\\",\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"]\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"root\\\", \\\"darkBg\\\"]\\n        },\\n    }\\n}\\n\\nstoriesOf(\\\"Components/Mapas/MapBundle\\\", module)\\n    .add(\\\"Default\\\", (args) => <MapBundleStory {...args}/>, argsControls);\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"default\": {\n    \"startLoc\": {\n      \"col\": 9,\n      \"line\": 108\n    },\n    \"endLoc\": {\n      \"col\": 71,\n      \"line\": 108\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 108\n    },\n    \"endBody\": {\n      \"col\": 57,\n      \"line\": 108\n    }\n  }\n};\n/* eslint-disable no-console */\n\nimport React, { useState } from \"react\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { storiesOf } from \"@storybook/react\";\nimport themes from \"../../Theme/themes\";\nimport MapBundle from \"../MapBundle\";\nimport mockHotel from \"./mockHotels.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      background: theme.palette.background[\"default\"],\n      boxShadow: theme.shadows[8],\n      padding: \"30px\"\n    },\n    darkBg: {\n      background: \"rgba(0, 0, 0, 0.6)\",\n      boxShadow: theme.shadows[8],\n      padding: \"30px\"\n    }\n  };\n});\n\nvar initDefaultData = function initDefaultData() {\n  var middleLocation = mockHotel.hoteis[Math.floor(mockHotel.hoteis.length / 2)];\n  return {\n    title: \"2\",\n    coordinates: {\n      latitude: middleLocation.location.coordinates.latitude,\n      longitude: middleLocation.location.coordinates.longitude\n    },\n    zoom: 9\n  };\n};\n\nvar payloadMap = mockHotel.hoteis.map(function (mapData) {\n  return {\n    id: mapData.id,\n    name: mapData.name,\n    coordinates: {\n      latitude: mapData.location.coordinates.latitude,\n      longitude: mapData.location.coordinates.longitude\n    },\n    rate: {\n      totalPrice: mapData.room.rate.pricePerDayWithTax\n    }\n  };\n});\n\nvar MapBundleStory = function MapBundleStory(_ref) {\n  _s();\n\n  var mode = _ref.mode,\n      brand = _ref.brand;\n  var classes = useStyles(themes[brand]);\n\n  var _useState = useState(initDefaultData),\n      _useState2 = _slicedToArray(_useState, 1),\n      defaultData = _useState2[0];\n\n  return /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n    theme: themes[brand],\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes[mode],\n      id: \"MapBundle\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"MapBundle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(MapBundle, {\n        gridSize: 50,\n        maxZoom: 14,\n        minimumClusterSize: 1,\n        defaultData: defaultData,\n        data: payloadMap,\n        openInfo: false,\n        googleMapURL: \"https://www.google.com.br/maps/api/js?key=AIzaSyB_-QHk0PCeDlXgsi3bAuklXA--pfZQsdI&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 37\n        }, _this),\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"400px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 39\n        }, _this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }, _this),\n        zoom: 10,\n        active: false,\n        handleSelect: function handleSelect() {\n          return console.log(\"clicado\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(MapBundleStory, \"S1klXgrEP9L/up0bY22NKSe28VA=\", false, function () {\n  return [useStyles];\n});\n\n_c = MapBundleStory;\nvar argsControls = {\n  args: {\n    brand: \"CVC\",\n    mode: \"root\"\n  },\n  argTypes: {\n    brand: {\n      type: \"select\",\n      options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n    },\n    mode: {\n      type: \"select\",\n      options: [\"root\", \"darkBg\"]\n    }\n  }\n};\nstoriesOf(\"Components/Mapas/MapBundle\", module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __LOCATIONS_MAP__\n  }\n}).add(\"Default\", function (args) {\n  return /*#__PURE__*/_jsxDEV(MapBundleStory, _objectSpread({}, args), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 31\n  }, _this);\n}, argsControls);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapBundleStory\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/MapBundle/Stories/MapBundle.stories.tsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","useState","Paper","Divider","makeStyles","MuiThemeProvider","Typography","storiesOf","themes","MapBundle","mockHotel","useStyles","theme","root","background","palette","boxShadow","shadows","padding","darkBg","initDefaultData","middleLocation","hoteis","Math","floor","length","title","coordinates","latitude","location","longitude","zoom","payloadMap","map","mapData","id","name","rate","totalPrice","room","pricePerDayWithTax","MapBundleStory","mode","brand","classes","defaultData","height","console","log","argsControls","args","argTypes","type","options","module","addParameters","storySource","source","locationsMap","add"],"mappings":"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","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"\\nimport React, { useState } from \\\"react\\\";\\nimport { Paper, Divider, } from \\\"@material-ui/core\\\";\\nimport { makeStyles , MuiThemeProvider } from \\\"@material-ui/core/styles\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\nimport MapBundle from \\\"../MapBundle\\\";\\nimport mockHotel from \\\"./mockHotels.json\\\"\\n\\nconst useStyles = makeStyles((theme) => ({\\n    root: {\\n        background: theme.palette.background.default,\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n}));\\n\\ntype MapBundleStoryProps = {\\n    mode: string,\\n    brand: BrandType\\n}\\n\\nconst initDefaultData = () => {\\n    const middleLocation = mockHotel.hoteis[Math.floor(mockHotel.hoteis.length / 2)];\\n    return {\\n        title: \\\"2\\\",\\n        coordinates: {\\n            latitude: middleLocation.location.coordinates.latitude,\\n            longitude: middleLocation.location.coordinates.longitude,\\n        },\\n        zoom: 9\\n    }\\n}\\n\\nconst payloadMap = mockHotel.hoteis.map(mapData => {\\n    return {\\n        id: mapData.id,\\n        name: mapData.name,\\n        coordinates: {\\n            latitude: mapData.location.coordinates.latitude,\\n            longitude: mapData.location.coordinates.longitude\\n        },\\n        rate: {\\n            totalPrice: mapData.room.rate.pricePerDayWithTax,\\n        }\\n    }\\n})\\n\\nconst MapBundleStory = ({\\n    mode, brand\\n}: MapBundleStoryProps) => {\\n    const classes = useStyles(themes[brand]);\\n    const [defaultData] = useState(initDefaultData)\\n    \\n    return (\\n        <MuiThemeProvider theme={themes[brand]}>\\n            <Paper className={classes[mode]} id=\\\"MapBundle\\\">\\n                <Typography variant=\\\"h3\\\">MapBundle</Typography>\\n                <br />\\n                <Divider />\\n                <br />\\n                <MapBundle\\n                    gridSize={50}\\n                    maxZoom={14}\\n                    minimumClusterSize={1}\\n                    defaultData={defaultData}\\n                    data={payloadMap}\\n                    openInfo={false}\\n                    googleMapURL=\\\"https://www.google.com.br/maps/api/js?key=AIzaSyB_-QHk0PCeDlXgsi3bAuklXA--pfZQsdI&v=3.exp&libraries=geometry,drawing,places\\\"\\n                    loadingElement={<div style={{ height: \\\"100%\\\" }} />}\\n                    containerElement={<div style={{ height: \\\"400px\\\" }} />}\\n                    mapElement={<div style={{ height: \\\"100%\\\" }} />}\\n                    zoom={10}\\n                    active={false}\\n                    handleSelect={() => console.log(\\\"clicado\\\")}\\n                />\\n            </Paper>\\n        </MuiThemeProvider>\\n\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"CVC\\\",\\n        mode: \\\"root\\\",\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"]\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"root\\\", \\\"darkBg\\\"]\\n        },\\n    }\\n}\\n\\nstoriesOf(\\\"Components/Mapas/MapBundle\\\", module)\\n    .add(\\\"Default\\\", (args) => <MapBundleStory {...args}/>, argsControls);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"default\":{\"startLoc\":{\"col\":9,\"line\":108},\"endLoc\":{\"col\":71,\"line\":108},\"startBody\":{\"col\":20,\"line\":108},\"endBody\":{\"col\":57,\"line\":108}}};\n    \n/* eslint-disable no-console */\nimport React, { useState } from \"react\";\nimport { Paper, Divider, } from \"@material-ui/core\";\nimport { makeStyles , MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { storiesOf } from \"@storybook/react\";\nimport themes from \"../../Theme/themes\";\nimport { BrandType } from \"../../types/brand\";\nimport MapBundle from \"../MapBundle\";\nimport mockHotel from \"./mockHotels.json\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: theme.palette.background.default,\n        boxShadow: theme.shadows[8],\n        padding: \"30px\",\n    },\n    darkBg: {\n        background: \"rgba(0, 0, 0, 0.6)\",\n        boxShadow: theme.shadows[8],\n        padding: \"30px\",\n    },\n}));\n\ntype MapBundleStoryProps = {\n    mode: string,\n    brand: BrandType\n}\n\nconst initDefaultData = () => {\n    const middleLocation = mockHotel.hoteis[Math.floor(mockHotel.hoteis.length / 2)];\n    return {\n        title: \"2\",\n        coordinates: {\n            latitude: middleLocation.location.coordinates.latitude,\n            longitude: middleLocation.location.coordinates.longitude,\n        },\n        zoom: 9\n    }\n}\n\nconst payloadMap = mockHotel.hoteis.map(mapData => {\n    return {\n        id: mapData.id,\n        name: mapData.name,\n        coordinates: {\n            latitude: mapData.location.coordinates.latitude,\n            longitude: mapData.location.coordinates.longitude\n        },\n        rate: {\n            totalPrice: mapData.room.rate.pricePerDayWithTax,\n        }\n    }\n})\n\nconst MapBundleStory = ({\n    mode, brand\n}: MapBundleStoryProps) => {\n    const classes = useStyles(themes[brand]);\n    const [defaultData] = useState(initDefaultData)\n    \n    return (\n        <MuiThemeProvider theme={themes[brand]}>\n            <Paper className={classes[mode]} id=\"MapBundle\">\n                <Typography variant=\"h3\">MapBundle</Typography>\n                <br />\n                <Divider />\n                <br />\n                <MapBundle\n                    gridSize={50}\n                    maxZoom={14}\n                    minimumClusterSize={1}\n                    defaultData={defaultData}\n                    data={payloadMap}\n                    openInfo={false}\n                    googleMapURL=\"https://www.google.com.br/maps/api/js?key=AIzaSyB_-QHk0PCeDlXgsi3bAuklXA--pfZQsdI&v=3.exp&libraries=geometry,drawing,places\"\n                    loadingElement={<div style={{ height: \"100%\" }} />}\n                    containerElement={<div style={{ height: \"400px\" }} />}\n                    mapElement={<div style={{ height: \"100%\" }} />}\n                    zoom={10}\n                    active={false}\n                    handleSelect={() => console.log(\"clicado\")}\n                />\n            </Paper>\n        </MuiThemeProvider>\n\n    );\n};\n\nconst argsControls = {\n    args: {\n        brand: \"CVC\",\n        mode: \"root\",\n    },\n    argTypes: {\n        brand: {\n            type: \"select\",\n            options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n        },\n        mode: {\n            type: \"select\",\n            options: [\"root\", \"darkBg\"]\n        },\n    }\n}\n\nstoriesOf(\"Components/Mapas/MapBundle\", module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } })\n    .add(\"Default\", (args) => <MapBundleStory {...args}/>, argsControls);\n"]},"metadata":{},"sourceType":"module"}