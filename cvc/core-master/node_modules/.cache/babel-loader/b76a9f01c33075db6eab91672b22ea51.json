{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { getHostName } from \"../BrandContext/BrandContextProvider\";\n\nvar useGa = function useGa() {\n  _s();\n\n  var saveOnGa = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dataLayer) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!getHostName().hostname.includes(\"local\")) {\n                if (typeof window !== \"undefined\") {\n                  window.dataLayer.push(_objectSpread({}, dataLayer));\n                }\n              } else {\n                // eslint-disable-next-line no-console\n                console.info(\"LOCALHOST: ENVIADO AO GA ==== \", _objectSpread({}, dataLayer));\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n  return {\n    saveOnGa: saveOnGa\n  };\n};\n\n_s(useGa, \"LY0EUxKT75qSXTGcDiaShBHh51Q=\");\n\nexport default useGa;","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/utils/useGa.ts"],"names":["useCallback","getHostName","useGa","saveOnGa","dataLayer","hostname","includes","window","push","console","info"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,sCAA5B;;AASA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAChB,MAAMC,QAAQ,GAAGH,WAAW;AAAA,wEAAC,iBAAOI,SAAP;AAAA;AAAA;AAAA;AAAA;AACzB,kBAAI,CAACH,WAAW,GAAGI,QAAd,CAAuBC,QAAvB,CAAgC,OAAhC,CAAL,EAA+C;AAC3C,oBAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC9BA,kBAAAA,MAAD,CAAgBH,SAAhB,CAA0BI,IAA1B,mBAAoCJ,SAApC;AACH;AACJ,eAJD,MAIO;AACH;AACAK,gBAAAA,OAAO,CAACC,IAAR,CAAa,gCAAb,oBAAoDN,SAApD;AACH;;AARwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAUzB,EAVyB,CAA5B;AAYA,SAAO;AAAED,IAAAA,QAAQ,EAARA;AAAF,GAAP;AACH,CAdD;;GAAMD,K;;AAgBN,eAAeA,KAAf","sourcesContent":["import { useCallback } from \"react\"\nimport { getHostName } from \"../BrandContext/BrandContextProvider\";\n\ntype DataLayer = {\n    event: string;\n    category: string;\n    action: string;\n    label: string;\n}\n\nconst useGa = () => {\n    const saveOnGa = useCallback(async (dataLayer: DataLayer) => {\n        if (!getHostName().hostname.includes(\"local\")) {\n            if (typeof window !== \"undefined\") {\n                (window as any).dataLayer.push({ ...dataLayer })\n            }\n        } else {\n            // eslint-disable-next-line no-console\n            console.info(\"LOCALHOST: ENVIADO AO GA ==== \", { ...dataLayer });\n        }\n\n    }, []);\n\n    return { saveOnGa };\n}\n\nexport default useGa;\n"]},"metadata":{},"sourceType":"module"}