{"ast":null,"code":"import _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\Button\\\\Stories\\\\AColorsButtons.stories.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from \\\"react\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { jsxDecorator } from \\\"storybook-addon-jsx\\\";\\nimport { Paper, Divider } from \\\"@material-ui/core\\\";\\nimport Grid from \\\"@material-ui/core/Grid\\\";\\nimport { makeStyles, MuiThemeProvider } from \\\"@material-ui/core/styles\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { muiTheme } from \\\"storybook-addon-material-ui\\\";\\nimport Theme from \\\"../../Theme\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport Button from \\\"../Button\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\n\\nconst useStyles = makeStyles((theme) => ({\\n    root: {\\n        boxShadow: theme.shadows[24],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        padding: \\\"20px\\\",\\n    },\\n}));\\n\\ntype TypeButtonsProps = {\\n    label: string,\\n    mode: string,\\n    size: string,\\n    brand: BrandType,\\n    color: string,\\n    variant: string,\\n    disabled: boolean,\\n    fullWidth: boolean,\\n}\\n\\nexport const TypeButtons = ({ label, mode, size, brand, color, variant, disabled, fullWidth }: TypeButtonsProps): JSX.Element => {\\n    const classes = useStyles(themes[brand]);\\n\\n    return (\\n        <MuiThemeProvider theme={themes[brand]}>\\n            <Paper className={classes[mode]} id=\\\"botoes\\\">\\n                <Typography variant=\\\"h3\\\">Tipos e Cores</Typography>\\n                <br />\\n                <Divider />\\n                <br />\\n                <Grid item xs={3}>\\n                    <Button fullWidth={fullWidth} color={color} label={label} variant={variant} size={size} disabled={disabled} />\\n                </Grid>\\n            </Paper>\\n        </MuiThemeProvider>\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        label: 'Button Text',\\n        brand: \\\"CVC\\\",\\n        mode: \\\"root\\\",\\n        size: 'medium',\\n        color: 'primary',\\n        variant: 'contained',\\n        disabled: false,\\n        fullWidth: false,\\n    },\\n    argTypes: {\\n        label: { type: 'string' },\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"]\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"root\\\", \\\"darkBg\\\"]\\n        },\\n        size: {\\n            options: ['small', 'medium', 'large'],\\n            control: { type: 'select' }\\n        },\\n        color: {\\n            options: ['default', 'primary', 'secondary'],\\n            control: { type: 'select' }\\n        },\\n        variant: {\\n            options: ['outlined', 'contained'],\\n            control: { type: 'radio' }\\n        },\\n        disabled: { type: 'boolean' },\\n        fullWidth: { type: 'boolean' }\\n    }\\n}\\n\\nstoriesOf(\\\"Components/Buttons/Button\\\", module)\\n    .addDecorator(muiTheme([Theme]))\\n    .addDecorator(jsxDecorator)\\n    .add(\\\"Default\\\", (args) => <TypeButtons {...args}/>, argsControls);\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"default\": {\n    \"startLoc\": {\n      \"col\": 9,\n      \"line\": 95\n    },\n    \"endLoc\": {\n      \"col\": 68,\n      \"line\": 95\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 95\n    },\n    \"endBody\": {\n      \"col\": 54,\n      \"line\": 95\n    }\n  }\n};\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDecorator } from \"storybook-addon-jsx\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { storiesOf } from \"@storybook/react\";\nimport { muiTheme } from \"storybook-addon-material-ui\";\nimport Theme from \"../../Theme\";\nimport themes from \"../../Theme/themes\";\nimport Button from \"../Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      boxShadow: theme.shadows[24],\n      padding: \"30px\"\n    },\n    darkBg: {\n      background: \"rgba(0, 0, 0, 0.6)\",\n      padding: \"20px\"\n    }\n  };\n});\nexport var TypeButtons = function TypeButtons(_ref) {\n  _s();\n\n  var label = _ref.label,\n      mode = _ref.mode,\n      size = _ref.size,\n      brand = _ref.brand,\n      color = _ref.color,\n      variant = _ref.variant,\n      disabled = _ref.disabled,\n      fullWidth = _ref.fullWidth;\n  var classes = useStyles(themes[brand]);\n  return /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n    theme: themes[brand],\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes[mode],\n      id: \"botoes\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Tipos e Cores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: fullWidth,\n          color: color,\n          label: label,\n          variant: variant,\n          size: size,\n          disabled: disabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TypeButtons, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TypeButtons;\nvar argsControls = {\n  args: {\n    label: 'Button Text',\n    brand: \"CVC\",\n    mode: \"root\",\n    size: 'medium',\n    color: 'primary',\n    variant: 'contained',\n    disabled: false,\n    fullWidth: false\n  },\n  argTypes: {\n    label: {\n      type: 'string'\n    },\n    brand: {\n      type: \"select\",\n      options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n    },\n    mode: {\n      type: \"select\",\n      options: [\"root\", \"darkBg\"]\n    },\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: {\n        type: 'select'\n      }\n    },\n    color: {\n      options: ['default', 'primary', 'secondary'],\n      control: {\n        type: 'select'\n      }\n    },\n    variant: {\n      options: ['outlined', 'contained'],\n      control: {\n        type: 'radio'\n      }\n    },\n    disabled: {\n      type: 'boolean'\n    },\n    fullWidth: {\n      type: 'boolean'\n    }\n  }\n};\nstoriesOf(\"Components/Buttons/Button\", module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __LOCATIONS_MAP__\n  }\n}).addDecorator(muiTheme([Theme])).addDecorator(jsxDecorator).add(\"Default\", function (args) {\n  return /*#__PURE__*/_jsxDEV(TypeButtons, _objectSpread({}, args), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 31\n  }, _this);\n}, argsControls);\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeButtons\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/Button/Stories/AColorsButtons.stories.tsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","Typography","jsxDecorator","Paper","Divider","Grid","makeStyles","MuiThemeProvider","storiesOf","muiTheme","Theme","themes","Button","useStyles","theme","root","boxShadow","shadows","padding","darkBg","background","TypeButtons","label","mode","size","brand","color","variant","disabled","fullWidth","classes","argsControls","args","argTypes","type","options","control","module","addParameters","storySource","source","locationsMap","addDecorator","add"],"mappings":"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","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { jsxDecorator } from \\\"storybook-addon-jsx\\\";\\nimport { Paper, Divider } from \\\"@material-ui/core\\\";\\nimport Grid from \\\"@material-ui/core/Grid\\\";\\nimport { makeStyles, MuiThemeProvider } from \\\"@material-ui/core/styles\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { muiTheme } from \\\"storybook-addon-material-ui\\\";\\nimport Theme from \\\"../../Theme\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport Button from \\\"../Button\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\n\\nconst useStyles = makeStyles((theme) => ({\\n    root: {\\n        boxShadow: theme.shadows[24],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        padding: \\\"20px\\\",\\n    },\\n}));\\n\\ntype TypeButtonsProps = {\\n    label: string,\\n    mode: string,\\n    size: string,\\n    brand: BrandType,\\n    color: string,\\n    variant: string,\\n    disabled: boolean,\\n    fullWidth: boolean,\\n}\\n\\nexport const TypeButtons = ({ label, mode, size, brand, color, variant, disabled, fullWidth }: TypeButtonsProps): JSX.Element => {\\n    const classes = useStyles(themes[brand]);\\n\\n    return (\\n        <MuiThemeProvider theme={themes[brand]}>\\n            <Paper className={classes[mode]} id=\\\"botoes\\\">\\n                <Typography variant=\\\"h3\\\">Tipos e Cores</Typography>\\n                <br />\\n                <Divider />\\n                <br />\\n                <Grid item xs={3}>\\n                    <Button fullWidth={fullWidth} color={color} label={label} variant={variant} size={size} disabled={disabled} />\\n                </Grid>\\n            </Paper>\\n        </MuiThemeProvider>\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        label: 'Button Text',\\n        brand: \\\"CVC\\\",\\n        mode: \\\"root\\\",\\n        size: 'medium',\\n        color: 'primary',\\n        variant: 'contained',\\n        disabled: false,\\n        fullWidth: false,\\n    },\\n    argTypes: {\\n        label: { type: 'string' },\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"]\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"root\\\", \\\"darkBg\\\"]\\n        },\\n        size: {\\n            options: ['small', 'medium', 'large'],\\n            control: { type: 'select' }\\n        },\\n        color: {\\n            options: ['default', 'primary', 'secondary'],\\n            control: { type: 'select' }\\n        },\\n        variant: {\\n            options: ['outlined', 'contained'],\\n            control: { type: 'radio' }\\n        },\\n        disabled: { type: 'boolean' },\\n        fullWidth: { type: 'boolean' }\\n    }\\n}\\n\\nstoriesOf(\\\"Components/Buttons/Button\\\", module)\\n    .addDecorator(muiTheme([Theme]))\\n    .addDecorator(jsxDecorator)\\n    .add(\\\"Default\\\", (args) => <TypeButtons {...args}/>, argsControls);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"default\":{\"startLoc\":{\"col\":9,\"line\":95},\"endLoc\":{\"col\":68,\"line\":95},\"startBody\":{\"col\":20,\"line\":95},\"endBody\":{\"col\":54,\"line\":95}}};\n    \nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDecorator } from \"storybook-addon-jsx\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { storiesOf } from \"@storybook/react\";\nimport { muiTheme } from \"storybook-addon-material-ui\";\nimport Theme from \"../../Theme\";\nimport themes from \"../../Theme/themes\";\nimport Button from \"../Button\";\nimport { BrandType } from \"../../types/brand\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        boxShadow: theme.shadows[24],\n        padding: \"30px\",\n    },\n    darkBg: {\n        background: \"rgba(0, 0, 0, 0.6)\",\n        padding: \"20px\",\n    },\n}));\n\ntype TypeButtonsProps = {\n    label: string,\n    mode: string,\n    size: string,\n    brand: BrandType,\n    color: string,\n    variant: string,\n    disabled: boolean,\n    fullWidth: boolean,\n}\n\nexport const TypeButtons = ({ label, mode, size, brand, color, variant, disabled, fullWidth }: TypeButtonsProps): JSX.Element => {\n    const classes = useStyles(themes[brand]);\n\n    return (\n        <MuiThemeProvider theme={themes[brand]}>\n            <Paper className={classes[mode]} id=\"botoes\">\n                <Typography variant=\"h3\">Tipos e Cores</Typography>\n                <br />\n                <Divider />\n                <br />\n                <Grid item xs={3}>\n                    <Button fullWidth={fullWidth} color={color} label={label} variant={variant} size={size} disabled={disabled} />\n                </Grid>\n            </Paper>\n        </MuiThemeProvider>\n    );\n};\n\nconst argsControls = {\n    args: {\n        label: 'Button Text',\n        brand: \"CVC\",\n        mode: \"root\",\n        size: 'medium',\n        color: 'primary',\n        variant: 'contained',\n        disabled: false,\n        fullWidth: false,\n    },\n    argTypes: {\n        label: { type: 'string' },\n        brand: {\n            type: \"select\",\n            options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n        },\n        mode: {\n            type: \"select\",\n            options: [\"root\", \"darkBg\"]\n        },\n        size: {\n            options: ['small', 'medium', 'large'],\n            control: { type: 'select' }\n        },\n        color: {\n            options: ['default', 'primary', 'secondary'],\n            control: { type: 'select' }\n        },\n        variant: {\n            options: ['outlined', 'contained'],\n            control: { type: 'radio' }\n        },\n        disabled: { type: 'boolean' },\n        fullWidth: { type: 'boolean' }\n    }\n}\n\nstoriesOf(\"Components/Buttons/Button\", module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } })\n    .addDecorator(muiTheme([Theme]))\n    .addDecorator(jsxDecorator)\n    .add(\"Default\", (args) => <TypeButtons {...args}/>, argsControls);\n"]},"metadata":{},"sourceType":"module"}