{"ast":null,"code":"import _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\Button\\\\Stories\\\\ChipsButtons.stories.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from \\\"react\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { jsxDecorator } from \\\"storybook-addon-jsx\\\";\\nimport { Paper, Divider } from \\\"@material-ui/core\\\";\\nimport Grid from \\\"@material-ui/core/Grid\\\";\\nimport { makeStyles, MuiThemeProvider } from \\\"@material-ui/core/styles\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { muiTheme } from \\\"storybook-addon-material-ui\\\";\\nimport { Filter } from \\\"@cvccorp-components/icons\\\";\\nimport Theme from \\\"../../Theme\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport CustomChip from \\\"../../CustomChip\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\n\\nconst useStyles = makeStyles((theme) => ({\\n    root: {\\n        boxShadow: theme.shadows[24],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        padding: \\\"20px\\\",\\n    },\\n}));\\n\\ntype ChipsProps = {\\n    label: string,\\n    mode: string,\\n    brand: BrandType,\\n    color: string,\\n    variant: string,\\n    disabled: boolean\\n}\\n\\nconst ChipsButtons = ({brand, mode, label, color, variant, disabled}: ChipsProps): JSX.Element => {\\n    const classes = useStyles(themes[brand]);\\n\\n    return (\\n        <MuiThemeProvider theme={themes[brand]}>\\n            <Paper className={classes[mode]} id=\\\"botoes\\\">\\n                <Typography variant=\\\"h3\\\">Custom Chips</Typography>\\n                <br />\\n                <Divider />\\n                <Grid container direction=\\\"column\\\" justify=\\\"center\\\" spacing={2}>\\n                    <Grid item xs={12}>\\n                        <br />\\n                        <CustomChip label={label} variant={variant} disabled={disabled} color={color}/>\\n                    </Grid>\\n                    <Grid item xs={12}>\\n                        <Typography variant=\\\"subtitle1\\\">Chips com √çcone</Typography>\\n                        <br />\\n                        <CustomChip label={label} disabled={disabled} icon={<Filter />} />\\n                    </Grid>\\n                </Grid>\\n            </Paper>\\n        </MuiThemeProvider>\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        label: 'Button Text',\\n        brand: \\\"CVC\\\",\\n        mode: \\\"root\\\",\\n        color: 'default',\\n        variant: 'contained',\\n        disabled: false\\n    },\\n    argTypes: {\\n        label: { type: 'string' },\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"]\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"root\\\", \\\"darkBg\\\"]\\n        },\\n        color: {\\n            options: ['default', 'primary', 'secondary'],\\n            control: { type: 'select' }\\n        },\\n        variant: {\\n            options: ['outlined', 'contained'],\\n            control: { type: 'radio' }\\n        },\\n        disabled: { type: 'boolean' }\\n    }\\n}\\n\\nstoriesOf(\\\"Components/Buttons/CustomChip\\\", module)\\n    .addDecorator(muiTheme([Theme]))\\n    .addDecorator(jsxDecorator)\\n    .add(\\\"Default\\\", (args) => <ChipsButtons {...args} />, argsControls);\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"default\": {\n    \"startLoc\": {\n      \"col\": 9,\n      \"line\": 94\n    },\n    \"endLoc\": {\n      \"col\": 70,\n      \"line\": 94\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 94\n    },\n    \"endBody\": {\n      \"col\": 56,\n      \"line\": 94\n    }\n  }\n};\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDecorator } from \"storybook-addon-jsx\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { storiesOf } from \"@storybook/react\";\nimport { muiTheme } from \"storybook-addon-material-ui\";\nimport { Filter } from \"@cvccorp-components/icons\";\nimport Theme from \"../../Theme\";\nimport themes from \"../../Theme/themes\";\nimport CustomChip from \"../../CustomChip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      boxShadow: theme.shadows[24],\n      padding: \"30px\"\n    },\n    darkBg: {\n      background: \"rgba(0, 0, 0, 0.6)\",\n      padding: \"20px\"\n    }\n  };\n});\n\nvar ChipsButtons = function ChipsButtons(_ref) {\n  _s();\n\n  var brand = _ref.brand,\n      mode = _ref.mode,\n      label = _ref.label,\n      color = _ref.color,\n      variant = _ref.variant,\n      disabled = _ref.disabled;\n  var classes = useStyles(themes[brand]);\n  return /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n    theme: themes[brand],\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes[mode],\n      id: \"botoes\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Custom Chips\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(CustomChip, {\n            label: label,\n            variant: variant,\n            disabled: disabled,\n            color: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Chips com \\xCDcone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(CustomChip, {\n            label: label,\n            disabled: disabled,\n            icon: /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 77\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ChipsButtons, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChipsButtons;\nvar argsControls = {\n  args: {\n    label: 'Button Text',\n    brand: \"CVC\",\n    mode: \"root\",\n    color: 'default',\n    variant: 'contained',\n    disabled: false\n  },\n  argTypes: {\n    label: {\n      type: 'string'\n    },\n    brand: {\n      type: \"select\",\n      options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n    },\n    mode: {\n      type: \"select\",\n      options: [\"root\", \"darkBg\"]\n    },\n    color: {\n      options: ['default', 'primary', 'secondary'],\n      control: {\n        type: 'select'\n      }\n    },\n    variant: {\n      options: ['outlined', 'contained'],\n      control: {\n        type: 'radio'\n      }\n    },\n    disabled: {\n      type: 'boolean'\n    }\n  }\n};\nstoriesOf(\"Components/Buttons/CustomChip\", module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __LOCATIONS_MAP__\n  }\n}).addDecorator(muiTheme([Theme])).addDecorator(jsxDecorator).add(\"Default\", function (args) {\n  return /*#__PURE__*/_jsxDEV(ChipsButtons, _objectSpread({}, args), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 31\n  }, _this);\n}, argsControls);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChipsButtons\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/Button/Stories/ChipsButtons.stories.tsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","Typography","jsxDecorator","Paper","Divider","Grid","makeStyles","MuiThemeProvider","storiesOf","muiTheme","Filter","Theme","themes","CustomChip","useStyles","theme","root","boxShadow","shadows","padding","darkBg","background","ChipsButtons","brand","mode","label","color","variant","disabled","classes","argsControls","args","argTypes","type","options","control","module","addParameters","storySource","source","locationsMap","addDecorator","add"],"mappings":";;;;;;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,+kGAAhB,C,CACA;;AACA,IAAIC,iBAAiB,GAAG;AAAC,aAAU;AAAC,gBAAW;AAAC,aAAM,CAAP;AAAS,cAAO;AAAhB,KAAZ;AAAgC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAzC;AAA8D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1E;AAA+F,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAAzG;AAAX,CAAxB;AAEJ,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,mBAA/B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,0BAA7C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAGA,IAAMC,SAAS,GAAGR,UAAU,CAAC,UAACS,KAAD;AAAA,SAAY;AACrCC,IAAAA,IAAI,EAAE;AACFC,MAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,EAAd,CADT;AAEFC,MAAAA,OAAO,EAAE;AAFP,KAD+B;AAKrCC,IAAAA,MAAM,EAAE;AACJC,MAAAA,UAAU,EAAE,oBADR;AAEJF,MAAAA,OAAO,EAAE;AAFL;AAL6B,GAAZ;AAAA,CAAD,CAA5B;;AAoBA,IAAMG,YAAY,GAAG,SAAfA,YAAe,OAA6E;AAAA;;AAAA,MAA3EC,KAA2E,QAA3EA,KAA2E;AAAA,MAApEC,IAAoE,QAApEA,IAAoE;AAAA,MAA9DC,KAA8D,QAA9DA,KAA8D;AAAA,MAAvDC,KAAuD,QAAvDA,KAAuD;AAAA,MAAhDC,OAAgD,QAAhDA,OAAgD;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAC9F,MAAMC,OAAO,GAAGf,SAAS,CAACF,MAAM,CAACW,KAAD,CAAP,CAAzB;AAEA,sBACI,QAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEX,MAAM,CAACW,KAAD,CAA/B;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEM,OAAO,CAACL,IAAD,CAAzB;AAAiC,MAAA,EAAE,EAAC,QAApC;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,eAHJ,eAII,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,OAAO,EAAC,QAA3C;AAAoD,QAAA,OAAO,EAAE,CAA7D;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAEC,KAAnB;AAA0B,YAAA,OAAO,EAAEE,OAAnC;AAA4C,YAAA,QAAQ,EAAEC,QAAtD;AAAgE,YAAA,KAAK,EAAEF;AAAvE;AAAA;AAAA;AAAA;AAAA,mBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAKI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAED,KAAnB;AAA0B,YAAA,QAAQ,EAAEG,QAApC;AAA8C,YAAA,IAAI,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,mBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAoBH,CAvBD;;GAAMN,Y;UACcR,S;;;KADdQ,Y;AAyBN,IAAMQ,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFN,IAAAA,KAAK,EAAE,aADL;AAEFF,IAAAA,KAAK,EAAE,KAFL;AAGFC,IAAAA,IAAI,EAAE,MAHJ;AAIFE,IAAAA,KAAK,EAAE,SAJL;AAKFC,IAAAA,OAAO,EAAE,WALP;AAMFC,IAAAA,QAAQ,EAAE;AANR,GADW;AASjBI,EAAAA,QAAQ,EAAE;AACNP,IAAAA,KAAK,EAAE;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KADD;AAENV,IAAAA,KAAK,EAAE;AACHU,MAAAA,IAAI,EAAE,QADH;AAEHC,MAAAA,OAAO,EAAE,CAAC,eAAD,EAAkB,aAAlB,EAAiC,KAAjC,EAAwC,SAAxC,EAAmD,WAAnD,EAAgE,KAAhE;AAFN,KAFD;AAMNV,IAAAA,IAAI,EAAE;AACFS,MAAAA,IAAI,EAAE,QADJ;AAEFC,MAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,QAAT;AAFP,KANA;AAUNR,IAAAA,KAAK,EAAE;AACHQ,MAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,WAAvB,CADN;AAEHC,MAAAA,OAAO,EAAE;AAAEF,QAAAA,IAAI,EAAE;AAAR;AAFN,KAVD;AAcNN,IAAAA,OAAO,EAAE;AACLO,MAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,WAAb,CADJ;AAELC,MAAAA,OAAO,EAAE;AAAEF,QAAAA,IAAI,EAAE;AAAR;AAFJ,KAdH;AAkBNL,IAAAA,QAAQ,EAAE;AAAEK,MAAAA,IAAI,EAAE;AAAR;AAlBJ;AATO,CAArB;AA+BAzB,SAAS,CAAC,+BAAD,EAAkC4B,MAAlC,CAAT,CAAmDC,aAAnD,CAAiE;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAEzC,SAAV;AAAqB0C,IAAAA,YAAY,EAAEzC;AAAnC;AAAf,CAAjE,EACK0C,YADL,CACkBhC,QAAQ,CAAC,CAACE,KAAD,CAAD,CAD1B,EAEK8B,YAFL,CAEkBvC,YAFlB,EAGKwC,GAHL,CAGS,SAHT,EAGoB,UAACX,IAAD;AAAA,sBAAU,QAAC,YAAD,oBAAkBA,IAAlB;AAAA;AAAA;AAAA;AAAA,WAAV;AAAA,CAHpB,EAG0DD,YAH1D","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { jsxDecorator } from \\\"storybook-addon-jsx\\\";\\nimport { Paper, Divider } from \\\"@material-ui/core\\\";\\nimport Grid from \\\"@material-ui/core/Grid\\\";\\nimport { makeStyles, MuiThemeProvider } from \\\"@material-ui/core/styles\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { muiTheme } from \\\"storybook-addon-material-ui\\\";\\nimport { Filter } from \\\"@cvccorp-components/icons\\\";\\nimport Theme from \\\"../../Theme\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport CustomChip from \\\"../../CustomChip\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\n\\nconst useStyles = makeStyles((theme) => ({\\n    root: {\\n        boxShadow: theme.shadows[24],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        padding: \\\"20px\\\",\\n    },\\n}));\\n\\ntype ChipsProps = {\\n    label: string,\\n    mode: string,\\n    brand: BrandType,\\n    color: string,\\n    variant: string,\\n    disabled: boolean\\n}\\n\\nconst ChipsButtons = ({brand, mode, label, color, variant, disabled}: ChipsProps): JSX.Element => {\\n    const classes = useStyles(themes[brand]);\\n\\n    return (\\n        <MuiThemeProvider theme={themes[brand]}>\\n            <Paper className={classes[mode]} id=\\\"botoes\\\">\\n                <Typography variant=\\\"h3\\\">Custom Chips</Typography>\\n                <br />\\n                <Divider />\\n                <Grid container direction=\\\"column\\\" justify=\\\"center\\\" spacing={2}>\\n                    <Grid item xs={12}>\\n                        <br />\\n                        <CustomChip label={label} variant={variant} disabled={disabled} color={color}/>\\n                    </Grid>\\n                    <Grid item xs={12}>\\n                        <Typography variant=\\\"subtitle1\\\">Chips com √çcone</Typography>\\n                        <br />\\n                        <CustomChip label={label} disabled={disabled} icon={<Filter />} />\\n                    </Grid>\\n                </Grid>\\n            </Paper>\\n        </MuiThemeProvider>\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        label: 'Button Text',\\n        brand: \\\"CVC\\\",\\n        mode: \\\"root\\\",\\n        color: 'default',\\n        variant: 'contained',\\n        disabled: false\\n    },\\n    argTypes: {\\n        label: { type: 'string' },\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"]\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"root\\\", \\\"darkBg\\\"]\\n        },\\n        color: {\\n            options: ['default', 'primary', 'secondary'],\\n            control: { type: 'select' }\\n        },\\n        variant: {\\n            options: ['outlined', 'contained'],\\n            control: { type: 'radio' }\\n        },\\n        disabled: { type: 'boolean' }\\n    }\\n}\\n\\nstoriesOf(\\\"Components/Buttons/CustomChip\\\", module)\\n    .addDecorator(muiTheme([Theme]))\\n    .addDecorator(jsxDecorator)\\n    .add(\\\"Default\\\", (args) => <ChipsButtons {...args} />, argsControls);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"default\":{\"startLoc\":{\"col\":9,\"line\":94},\"endLoc\":{\"col\":70,\"line\":94},\"startBody\":{\"col\":20,\"line\":94},\"endBody\":{\"col\":56,\"line\":94}}};\n    \nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDecorator } from \"storybook-addon-jsx\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { storiesOf } from \"@storybook/react\";\nimport { muiTheme } from \"storybook-addon-material-ui\";\nimport { Filter } from \"@cvccorp-components/icons\";\nimport Theme from \"../../Theme\";\nimport themes from \"../../Theme/themes\";\nimport CustomChip from \"../../CustomChip\";\nimport { BrandType } from \"../../types/brand\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        boxShadow: theme.shadows[24],\n        padding: \"30px\",\n    },\n    darkBg: {\n        background: \"rgba(0, 0, 0, 0.6)\",\n        padding: \"20px\",\n    },\n}));\n\ntype ChipsProps = {\n    label: string,\n    mode: string,\n    brand: BrandType,\n    color: string,\n    variant: string,\n    disabled: boolean\n}\n\nconst ChipsButtons = ({brand, mode, label, color, variant, disabled}: ChipsProps): JSX.Element => {\n    const classes = useStyles(themes[brand]);\n\n    return (\n        <MuiThemeProvider theme={themes[brand]}>\n            <Paper className={classes[mode]} id=\"botoes\">\n                <Typography variant=\"h3\">Custom Chips</Typography>\n                <br />\n                <Divider />\n                <Grid container direction=\"column\" justify=\"center\" spacing={2}>\n                    <Grid item xs={12}>\n                        <br />\n                        <CustomChip label={label} variant={variant} disabled={disabled} color={color}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"subtitle1\">Chips com √çcone</Typography>\n                        <br />\n                        <CustomChip label={label} disabled={disabled} icon={<Filter />} />\n                    </Grid>\n                </Grid>\n            </Paper>\n        </MuiThemeProvider>\n    );\n};\n\nconst argsControls = {\n    args: {\n        label: 'Button Text',\n        brand: \"CVC\",\n        mode: \"root\",\n        color: 'default',\n        variant: 'contained',\n        disabled: false\n    },\n    argTypes: {\n        label: { type: 'string' },\n        brand: {\n            type: \"select\",\n            options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n        },\n        mode: {\n            type: \"select\",\n            options: [\"root\", \"darkBg\"]\n        },\n        color: {\n            options: ['default', 'primary', 'secondary'],\n            control: { type: 'select' }\n        },\n        variant: {\n            options: ['outlined', 'contained'],\n            control: { type: 'radio' }\n        },\n        disabled: { type: 'boolean' }\n    }\n}\n\nstoriesOf(\"Components/Buttons/CustomChip\", module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } })\n    .addDecorator(muiTheme([Theme]))\n    .addDecorator(jsxDecorator)\n    .add(\"Default\", (args) => <ChipsButtons {...args} />, argsControls);\n"]},"metadata":{},"sourceType":"module"}