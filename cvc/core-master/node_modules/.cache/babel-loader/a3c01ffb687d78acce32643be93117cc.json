{"ast":null,"code":"import _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\ColorsGuide\\\\ColorsGuide.stories.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from \\\"react\\\";\\nimport { Paper, Typography, Divider } from \\\"@material-ui/core\\\";\\nimport { makeStyles } from \\\"@material-ui/core/styles\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { jsxDecorator } from \\\"storybook-addon-jsx\\\";\\nimport { muiTheme } from \\\"storybook-addon-material-ui\\\";\\nimport Theme from \\\"../Theme\\\";\\nimport * as Themes from \\\"../Theme/themes\\\";\\nimport { StyledPre, themeOverWrites } from \\\"./ColorsGuide.stories.styles\\\";\\n\\nconst useStyles = makeStyles(themeOverWrites);\\n\\nconst getThemePalleteObject = theme => Themes.default[theme].palette;\\nconst pretiffyData = obj => JSON.stringify(obj, null, 2);\\n\\nconst Section = ({ sectionKey, brand }) => {\\n    const capitalize = str => str.charAt(0).toUpperCase() + str.slice(1);\\n    const content = pretiffyData(getThemePalleteObject(brand)[sectionKey]);\\n\\n    return content ? (\\n        <>\\n            <Typography variant=\\\"subtitle1\\\">{capitalize(sectionKey)}</Typography>\\n            <StyledPre>{`${sectionKey}: ${content}`}</StyledPre>\\n        </>\\n    ) : null;\\n};\\n\\nconst ColorsGuide = ({ brand }) => {\\n    const classes = useStyles();\\n\\n    const paletteKeys = Object.keys(getThemePalleteObject(brand));\\n\\n    return (\\n        <Paper className={classes.root} id=\\\"chips\\\">\\n            <Typography variant=\\\"h3\\\">Cores - {brand}</Typography>\\n            <br />\\n            <Divider />\\n            <br />\\n            {paletteKeys.map(palette => {\\n                return <Section brand={brand} key={palette} sectionKey={palette} />;\\n            })}\\n            <Typography variant=\\\"h3\\\">Objeto Completo - {brand}</Typography>\\n            <StyledPre>{pretiffyData(getThemePalleteObject(brand))}</StyledPre>\\n        </Paper>\\n    );\\n};\\n\\nconst argsOptions = {\\n    args: {\\n        brand: \\\"CVC\\\"\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"]\\n        }\\n    }\\n};\\n\\nstoriesOf(\\\"Theme/Colors\\\", module)\\n    .addDecorator(muiTheme([Theme]))\\n    .addDecorator(jsxDecorator)\\n    .add(\\\"Guia de cores\\\", args => <ColorsGuide {...args} />, argsOptions);\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"guia-de-cores\": {\n    \"startLoc\": {\n      \"col\": 9,\n      \"line\": 63\n    },\n    \"endLoc\": {\n      \"col\": 72,\n      \"line\": 63\n    },\n    \"startBody\": {\n      \"col\": 26,\n      \"line\": 63\n    },\n    \"endBody\": {\n      \"col\": 59,\n      \"line\": 63\n    }\n  }\n};\nimport React from \"react\";\nimport { Paper, Typography, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { storiesOf } from \"@storybook/react\";\nimport { jsxDecorator } from \"storybook-addon-jsx\";\nimport { muiTheme } from \"storybook-addon-material-ui\";\nimport Theme from \"../Theme\";\nimport * as Themes from \"../Theme/themes\";\nimport { StyledPre, themeOverWrites } from \"./ColorsGuide.stories.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(themeOverWrites);\n\nvar getThemePalleteObject = function getThemePalleteObject(theme) {\n  return Themes[\"default\"][theme].palette;\n};\n\nvar pretiffyData = function pretiffyData(obj) {\n  return JSON.stringify(obj, null, 2);\n};\n\nvar Section = function Section(_ref) {\n  var sectionKey = _ref.sectionKey,\n      brand = _ref.brand;\n\n  var capitalize = function capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  var content = pretiffyData(getThemePalleteObject(brand)[sectionKey]);\n  return content ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      children: capitalize(sectionKey)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(StyledPre, {\n      children: \"\".concat(sectionKey, \": \").concat(content)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true) : null;\n};\n\n_c = Section;\n\nvar ColorsGuide = function ColorsGuide(_ref2) {\n  _s();\n\n  var brand = _ref2.brand;\n  var classes = useStyles();\n  var paletteKeys = Object.keys(getThemePalleteObject(brand));\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    id: \"chips\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: [\"Cores - \", brand]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this), paletteKeys.map(function (palette) {\n      return /*#__PURE__*/_jsxDEV(Section, {\n        brand: brand,\n        sectionKey: palette\n      }, palette, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 24\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: [\"Objeto Completo - \", brand]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(StyledPre, {\n      children: pretiffyData(getThemePalleteObject(brand))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ColorsGuide, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = ColorsGuide;\nvar argsOptions = {\n  args: {\n    brand: \"CVC\"\n  },\n  argTypes: {\n    brand: {\n      type: \"select\",\n      options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n    }\n  }\n};\nstoriesOf(\"Theme/Colors\", module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __LOCATIONS_MAP__\n  }\n}).addDecorator(muiTheme([Theme])).addDecorator(jsxDecorator).add(\"Guia de cores\", function (args) {\n  return /*#__PURE__*/_jsxDEV(ColorsGuide, _objectSpread({}, args), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 35\n  }, _this);\n}, argsOptions);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"ColorsGuide\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/ColorsGuide/ColorsGuide.stories.js"],"names":["__STORY__","__LOCATIONS_MAP__","React","Paper","Typography","Divider","makeStyles","storiesOf","jsxDecorator","muiTheme","Theme","Themes","StyledPre","themeOverWrites","useStyles","getThemePalleteObject","theme","palette","pretiffyData","obj","JSON","stringify","Section","sectionKey","brand","capitalize","str","charAt","toUpperCase","slice","content","ColorsGuide","classes","paletteKeys","Object","keys","root","map","argsOptions","args","argTypes","type","options","module","addParameters","storySource","source","locationsMap","addDecorator","add"],"mappings":"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","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { Paper, Typography, Divider } from \\\"@material-ui/core\\\";\\nimport { makeStyles } from \\\"@material-ui/core/styles\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { jsxDecorator } from \\\"storybook-addon-jsx\\\";\\nimport { muiTheme } from \\\"storybook-addon-material-ui\\\";\\nimport Theme from \\\"../Theme\\\";\\nimport * as Themes from \\\"../Theme/themes\\\";\\nimport { StyledPre, themeOverWrites } from \\\"./ColorsGuide.stories.styles\\\";\\n\\nconst useStyles = makeStyles(themeOverWrites);\\n\\nconst getThemePalleteObject = theme => Themes.default[theme].palette;\\nconst pretiffyData = obj => JSON.stringify(obj, null, 2);\\n\\nconst Section = ({ sectionKey, brand }) => {\\n    const capitalize = str => str.charAt(0).toUpperCase() + str.slice(1);\\n    const content = pretiffyData(getThemePalleteObject(brand)[sectionKey]);\\n\\n    return content ? (\\n        <>\\n            <Typography variant=\\\"subtitle1\\\">{capitalize(sectionKey)}</Typography>\\n            <StyledPre>{`${sectionKey}: ${content}`}</StyledPre>\\n        </>\\n    ) : null;\\n};\\n\\nconst ColorsGuide = ({ brand }) => {\\n    const classes = useStyles();\\n\\n    const paletteKeys = Object.keys(getThemePalleteObject(brand));\\n\\n    return (\\n        <Paper className={classes.root} id=\\\"chips\\\">\\n            <Typography variant=\\\"h3\\\">Cores - {brand}</Typography>\\n            <br />\\n            <Divider />\\n            <br />\\n            {paletteKeys.map(palette => {\\n                return <Section brand={brand} key={palette} sectionKey={palette} />;\\n            })}\\n            <Typography variant=\\\"h3\\\">Objeto Completo - {brand}</Typography>\\n            <StyledPre>{pretiffyData(getThemePalleteObject(brand))}</StyledPre>\\n        </Paper>\\n    );\\n};\\n\\nconst argsOptions = {\\n    args: {\\n        brand: \\\"CVC\\\"\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"]\\n        }\\n    }\\n};\\n\\nstoriesOf(\\\"Theme/Colors\\\", module)\\n    .addDecorator(muiTheme([Theme]))\\n    .addDecorator(jsxDecorator)\\n    .add(\\\"Guia de cores\\\", args => <ColorsGuide {...args} />, argsOptions);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"guia-de-cores\":{\"startLoc\":{\"col\":9,\"line\":63},\"endLoc\":{\"col\":72,\"line\":63},\"startBody\":{\"col\":26,\"line\":63},\"endBody\":{\"col\":59,\"line\":63}}};\n    \nimport React from \"react\";\nimport { Paper, Typography, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { storiesOf } from \"@storybook/react\";\nimport { jsxDecorator } from \"storybook-addon-jsx\";\nimport { muiTheme } from \"storybook-addon-material-ui\";\nimport Theme from \"../Theme\";\nimport * as Themes from \"../Theme/themes\";\nimport { StyledPre, themeOverWrites } from \"./ColorsGuide.stories.styles\";\n\nconst useStyles = makeStyles(themeOverWrites);\n\nconst getThemePalleteObject = theme => Themes.default[theme].palette;\nconst pretiffyData = obj => JSON.stringify(obj, null, 2);\n\nconst Section = ({ sectionKey, brand }) => {\n    const capitalize = str => str.charAt(0).toUpperCase() + str.slice(1);\n    const content = pretiffyData(getThemePalleteObject(brand)[sectionKey]);\n\n    return content ? (\n        <>\n            <Typography variant=\"subtitle1\">{capitalize(sectionKey)}</Typography>\n            <StyledPre>{`${sectionKey}: ${content}`}</StyledPre>\n        </>\n    ) : null;\n};\n\nconst ColorsGuide = ({ brand }) => {\n    const classes = useStyles();\n\n    const paletteKeys = Object.keys(getThemePalleteObject(brand));\n\n    return (\n        <Paper className={classes.root} id=\"chips\">\n            <Typography variant=\"h3\">Cores - {brand}</Typography>\n            <br />\n            <Divider />\n            <br />\n            {paletteKeys.map(palette => {\n                return <Section brand={brand} key={palette} sectionKey={palette} />;\n            })}\n            <Typography variant=\"h3\">Objeto Completo - {brand}</Typography>\n            <StyledPre>{pretiffyData(getThemePalleteObject(brand))}</StyledPre>\n        </Paper>\n    );\n};\n\nconst argsOptions = {\n    args: {\n        brand: \"CVC\"\n    },\n    argTypes: {\n        brand: {\n            type: \"select\",\n            options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n        }\n    }\n};\n\nstoriesOf(\"Theme/Colors\", module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } })\n    .addDecorator(muiTheme([Theme]))\n    .addDecorator(jsxDecorator)\n    .add(\"Guia de cores\", args => <ColorsGuide {...args} />, argsOptions);\n"]},"metadata":{},"sourceType":"module"}