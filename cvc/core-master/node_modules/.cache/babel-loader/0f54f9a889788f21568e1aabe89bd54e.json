{"ast":null,"code":"import _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\MyTravelLogin\\\\Stories\\\\Login.stories.tsx\",\n    _this = this;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from \\\"react\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { BrandContext } from \\\"../../BrandContext\\\";\\nimport { UserDataProviderCustom } from \\\"../../BrandContext/BrandContextProvider\\\"\\nimport ThemeProviderCustom from \\\"../../ThemeProviderCustom\\\";\\nimport mockBrands from \\\"../../utils/brandMock\\\"\\nimport MyTravelLogin from \\\"../index\\\";\\nimport ModalLogin from \\\"../shared/components/ModalLogin\\\";\\n\\nconst LoginStory = ({ brand, isModal }) => {\\n    return (\\n        <BrandContext.Provider value={mockBrands[brand]}>\\n            <ThemeProviderCustom>\\n                <UserDataProviderCustom>\\n                    {isModal ?  <div style={{\\n                        backgroundColor: \\\"rgb(35, 127, 208)\\\",\\n                        padding: \\\"0 40px\\\",\\n                    }}>\\n                        <ModalLogin textBtnLogin=\\\"ENTRAR\\\" /></div> : <MyTravelLogin /> }\\n\\n                </UserDataProviderCustom>\\n            </ThemeProviderCustom>\\n        </BrandContext.Provider>\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"cvc\\\",\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"cvc\\\", \\\"cvccorp\\\", \\\"sub\\\"]\\n        },\\n        isModal: {\\n            type: \\\"boolean\\\",\\n        }\\n    }\\n}\\n\\nstoriesOf(\\\"Components/Login\\\", module)\\n    .add(\\\"Default\\\", (args) => <LoginStory {...args} />, argsControls);\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"default\": {\n    \"startLoc\": {\n      \"col\": 9,\n      \"line\": 43\n    },\n    \"endLoc\": {\n      \"col\": 68,\n      \"line\": 43\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 43\n    },\n    \"endBody\": {\n      \"col\": 54,\n      \"line\": 43\n    }\n  }\n};\nimport React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\nimport { BrandContext } from \"../../BrandContext\";\nimport { UserDataProviderCustom } from \"../../BrandContext/BrandContextProvider\";\nimport ThemeProviderCustom from \"../../ThemeProviderCustom\";\nimport mockBrands from \"../../utils/brandMock\";\nimport MyTravelLogin from \"../index\";\nimport ModalLogin from \"../shared/components/ModalLogin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar LoginStory = function LoginStory(_ref) {\n  var brand = _ref.brand,\n      isModal = _ref.isModal;\n  return /*#__PURE__*/_jsxDEV(BrandContext.Provider, {\n    value: mockBrands[brand],\n    children: /*#__PURE__*/_jsxDEV(ThemeProviderCustom, {\n      children: /*#__PURE__*/_jsxDEV(UserDataProviderCustom, {\n        children: isModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"rgb(35, 127, 208)\",\n            padding: \"0 40px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ModalLogin, {\n            textBtnLogin: \"ENTRAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 33\n        }, _this) : /*#__PURE__*/_jsxDEV(MyTravelLogin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 70\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = LoginStory;\nvar argsControls = {\n  args: {\n    brand: \"cvc\"\n  },\n  argTypes: {\n    brand: {\n      type: \"select\",\n      options: [\"cvc\", \"cvccorp\", \"sub\"]\n    },\n    isModal: {\n      type: \"boolean\"\n    }\n  }\n};\nstoriesOf(\"Components/Login\", module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __LOCATIONS_MAP__\n  }\n}).add(\"Default\", function (args) {\n  return /*#__PURE__*/_jsxDEV(LoginStory, _objectSpread({}, args), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 31\n  }, _this);\n}, argsControls);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginStory\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/MyTravelLogin/Stories/Login.stories.tsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","storiesOf","BrandContext","UserDataProviderCustom","ThemeProviderCustom","mockBrands","MyTravelLogin","ModalLogin","LoginStory","brand","isModal","backgroundColor","padding","argsControls","args","argTypes","type","options","module","addParameters","storySource","source","locationsMap","add"],"mappings":";;;;;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,q5CAAhB,C,CACA;;AACA,IAAIC,iBAAiB,GAAG;AAAC,aAAU;AAAC,gBAAW;AAAC,aAAM,CAAP;AAAS,cAAO;AAAhB,KAAZ;AAAgC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAzC;AAA8D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1E;AAA+F,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAAzG;AAAX,CAAxB;AAEJ,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,sBAAT,QAAuC,yCAAvC;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,aAAP,MAA0B,UAA1B;AACA,OAAOC,UAAP,MAAuB,iCAAvB;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAwB;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACvC,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEL,UAAU,CAACI,KAAD,CAAxC;AAAA,2BACI,QAAC,mBAAD;AAAA,6BACI,QAAC,sBAAD;AAAA,kBACKC,OAAO,gBAAI;AAAK,UAAA,KAAK,EAAE;AACpBC,YAAAA,eAAe,EAAE,mBADG;AAEpBC,YAAAA,OAAO,EAAE;AAFW,WAAZ;AAAA,iCAIR,QAAC,UAAD;AAAY,YAAA,YAAY,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AAJQ;AAAA;AAAA;AAAA;AAAA,iBAAJ,gBAIyC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AALrD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAcH,CAfD;;KAAMJ,U;AAiBN,IAAMK,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFL,IAAAA,KAAK,EAAE;AADL,GADW;AAIjBM,EAAAA,QAAQ,EAAE;AACNN,IAAAA,KAAK,EAAE;AACHO,MAAAA,IAAI,EAAE,QADH;AAEHC,MAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,SAAR,EAAmB,KAAnB;AAFN,KADD;AAKNP,IAAAA,OAAO,EAAE;AACLM,MAAAA,IAAI,EAAE;AADD;AALH;AAJO,CAArB;AAeAf,SAAS,CAAC,kBAAD,EAAqBiB,MAArB,CAAT,CAAsCC,aAAtC,CAAoD;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAEvB,SAAV;AAAqBwB,IAAAA,YAAY,EAAEvB;AAAnC;AAAf,CAApD,EACKwB,GADL,CACS,SADT,EACoB,UAACT,IAAD;AAAA,sBAAU,QAAC,UAAD,oBAAgBA,IAAhB;AAAA;AAAA;AAAA;AAAA,WAAV;AAAA,CADpB,EACwDD,YADxD","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { BrandContext } from \\\"../../BrandContext\\\";\\nimport { UserDataProviderCustom } from \\\"../../BrandContext/BrandContextProvider\\\"\\nimport ThemeProviderCustom from \\\"../../ThemeProviderCustom\\\";\\nimport mockBrands from \\\"../../utils/brandMock\\\"\\nimport MyTravelLogin from \\\"../index\\\";\\nimport ModalLogin from \\\"../shared/components/ModalLogin\\\";\\n\\nconst LoginStory = ({ brand, isModal }) => {\\n    return (\\n        <BrandContext.Provider value={mockBrands[brand]}>\\n            <ThemeProviderCustom>\\n                <UserDataProviderCustom>\\n                    {isModal ?  <div style={{\\n                        backgroundColor: \\\"rgb(35, 127, 208)\\\",\\n                        padding: \\\"0 40px\\\",\\n                    }}>\\n                        <ModalLogin textBtnLogin=\\\"ENTRAR\\\" /></div> : <MyTravelLogin /> }\\n\\n                </UserDataProviderCustom>\\n            </ThemeProviderCustom>\\n        </BrandContext.Provider>\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"cvc\\\",\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"cvc\\\", \\\"cvccorp\\\", \\\"sub\\\"]\\n        },\\n        isModal: {\\n            type: \\\"boolean\\\",\\n        }\\n    }\\n}\\n\\nstoriesOf(\\\"Components/Login\\\", module)\\n    .add(\\\"Default\\\", (args) => <LoginStory {...args} />, argsControls);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"default\":{\"startLoc\":{\"col\":9,\"line\":43},\"endLoc\":{\"col\":68,\"line\":43},\"startBody\":{\"col\":20,\"line\":43},\"endBody\":{\"col\":54,\"line\":43}}};\n    \nimport React from \"react\";\nimport { storiesOf } from \"@storybook/react\";\nimport { BrandContext } from \"../../BrandContext\";\nimport { UserDataProviderCustom } from \"../../BrandContext/BrandContextProvider\"\nimport ThemeProviderCustom from \"../../ThemeProviderCustom\";\nimport mockBrands from \"../../utils/brandMock\"\nimport MyTravelLogin from \"../index\";\nimport ModalLogin from \"../shared/components/ModalLogin\";\n\nconst LoginStory = ({ brand, isModal }) => {\n    return (\n        <BrandContext.Provider value={mockBrands[brand]}>\n            <ThemeProviderCustom>\n                <UserDataProviderCustom>\n                    {isModal ?  <div style={{\n                        backgroundColor: \"rgb(35, 127, 208)\",\n                        padding: \"0 40px\",\n                    }}>\n                        <ModalLogin textBtnLogin=\"ENTRAR\" /></div> : <MyTravelLogin /> }\n\n                </UserDataProviderCustom>\n            </ThemeProviderCustom>\n        </BrandContext.Provider>\n    );\n};\n\nconst argsControls = {\n    args: {\n        brand: \"cvc\",\n    },\n    argTypes: {\n        brand: {\n            type: \"select\",\n            options: [\"cvc\", \"cvccorp\", \"sub\"]\n        },\n        isModal: {\n            type: \"boolean\",\n        }\n    }\n}\n\nstoriesOf(\"Components/Login\", module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } })\n    .add(\"Default\", (args) => <LoginStory {...args} />, argsControls);\n"]},"metadata":{},"sourceType":"module"}