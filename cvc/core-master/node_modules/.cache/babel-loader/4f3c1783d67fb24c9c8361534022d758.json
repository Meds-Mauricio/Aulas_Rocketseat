{"ast":null,"code":"import _slicedToArray from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\MyTravelLogin\\\\shared\\\\hooks\\\\UserContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useCallback, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar UserDataContext = /*#__PURE__*/createContext({});\n\nvar UserDataProvider = function UserDataProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState({\n    email: \"\",\n    name: \"\",\n    lastName: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userIdToken = _useState4[0],\n      setIdToken = _useState4[1];\n\n  var setUser = useCallback(function (user) {\n    setUserData(user);\n  }, []);\n  var setUserIdToken = useCallback(function (idToken) {\n    setIdToken(idToken);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserDataContext.Provider, {\n    value: {\n      setUser: setUser,\n      user: userData,\n      setUserIdToken: setUserIdToken,\n      userIdToken: userIdToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(UserDataProvider, \"IfmAzRyZWITwMDClYqH8sxkTdgA=\");\n\n_c = UserDataProvider;\n\nfunction useUserData() {\n  _s2();\n\n  var context = useContext(UserDataContext);\n\n  if (!context) {\n    throw new Error(\"useUserData must be used within an UserDataProvider\");\n  }\n\n  return context;\n}\n\n_s2(useUserData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { UserDataProvider, useUserData };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDataProvider\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/MyTravelLogin/shared/hooks/UserContext.tsx"],"names":["React","createContext","useCallback","useContext","useState","UserDataContext","UserDataProvider","children","email","name","lastName","userData","setUserData","userIdToken","setIdToken","setUser","user","setUserIdToken","idToken","useUserData","context","Error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,QAAxD,QAAwE,OAAxE;;AAcA,IAAMC,eAAe,gBAAGJ,aAAa,CAAkB,EAAlB,CAArC;;AAEA,IAAMK,gBAA0B,GAAG,SAA7BA,gBAA6B,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACjD,kBAAgCH,QAAQ,CAAY;AAChDI,IAAAA,KAAK,EAAE,EADyC;AAEhDC,IAAAA,IAAI,EAAE,EAF0C;AAGhDC,IAAAA,QAAQ,EAAE;AAHsC,GAAZ,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAKA,mBAAkCR,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAoBC,UAApB;;AAEA,MAAMC,OAAO,GAAGb,WAAW,CAAC,UAACc,IAAD,EAAqB;AAC7CJ,IAAAA,WAAW,CAACI,IAAD,CAAX;AACH,GAF0B,EAExB,EAFwB,CAA3B;AAIA,MAAMC,cAAc,GAAGf,WAAW,CAAC,UAACgB,OAAD,EAAqB;AACpDJ,IAAAA,UAAU,CAACI,OAAD,CAAV;AACH,GAFiC,EAE/B,EAF+B,CAAlC;AAIA,sBACI,QAAC,eAAD,CAAiB,QAAjB;AACI,IAAA,KAAK,EAAE;AACHH,MAAAA,OAAO,EAAPA,OADG;AAEHC,MAAAA,IAAI,EAAEL,QAFH;AAGHM,MAAAA,cAAc,EAAdA,cAHG;AAIHJ,MAAAA,WAAW,EAAXA;AAJG,KADX;AAAA,cAQKN;AARL;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CA5BD;;GAAMD,gB;;KAAAA,gB;;AA8BN,SAASa,WAAT,GAAwC;AAAA;;AACpC,MAAMC,OAAO,GAAGjB,UAAU,CAACE,eAAD,CAA1B;;AAEA,MAAI,CAACe,OAAL,EAAc;AACV,UAAM,IAAIC,KAAJ,CAAU,qDAAV,CAAN;AACH;;AAED,SAAOD,OAAP;AACH;;IARQD,W;;AAUT,SAASb,gBAAT,EAA2Ba,WAA3B","sourcesContent":["import React, { createContext, useCallback, useContext, useState } from \"react\";\n\nexport interface IUserData {\n    email: string;\n    name: string;\n    lastName: string;\n}\n\ninterface IUserContexData {\n    user: IUserData;\n    setUser(use: IUserData): void;\n    setUserIdToken(idToken: string): void\n    userIdToken: string\n}\nconst UserDataContext = createContext<IUserContexData>({} as IUserContexData);\n\nconst UserDataProvider: React.FC = ({ children }) => {\n    const [userData, setUserData] = useState<IUserData>({\n        email: \"\",\n        name: \"\",\n        lastName: \"\"\n    });\n    const [userIdToken, setIdToken] = useState(\"\")\n\n    const setUser = useCallback((user: IUserData) => {\n        setUserData(user);\n    }, []);\n\n    const setUserIdToken = useCallback((idToken: string) => {\n        setIdToken(idToken)\n    }, [])\n\n    return (\n        <UserDataContext.Provider\n            value={{\n                setUser,\n                user: userData,\n                setUserIdToken,\n                userIdToken\n            }}\n        >\n            {children}\n        </UserDataContext.Provider>\n    );\n};\n\nfunction useUserData(): IUserContexData {\n    const context = useContext(UserDataContext);\n\n    if (!context) {\n        throw new Error(\"useUserData must be used within an UserDataProvider\");\n    }\n\n    return context;\n}\n\nexport { UserDataProvider, useUserData };\n"]},"metadata":{},"sourceType":"module"}