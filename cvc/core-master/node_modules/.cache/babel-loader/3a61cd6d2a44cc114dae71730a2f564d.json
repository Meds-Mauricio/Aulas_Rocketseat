{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\FilterOptionWithTotal\\\\FilterOptionWithTotal.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-filename-extension */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Checkbox from \"../Checkbox\";\nimport Filter from \"../Filter\";\nimport { useStyles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar FilterOptionWithTotal = function FilterOptionWithTotal(_ref) {\n  _s();\n\n  var filter = _ref.filter,\n      items = _ref.items,\n      sufix = _ref.sufix,\n      onChange = _ref.onChange,\n      isMobile = _ref.isMobile,\n      className = _ref.className,\n      noModal = _ref.noModal,\n      label = _ref.label,\n      open = _ref.open,\n      _onOpen = _ref.onOpen,\n      _onClose = _ref.onClose,\n      _onApply = _ref.onApply,\n      _onReset = _ref.onReset,\n      onActive = _ref.onActive,\n      height = _ref.height;\n  var classes = useStyles({});\n\n  function getSelectedValues() {\n    return items.filter(function (el) {\n      return el.checked;\n    }).map(function (el) {\n      if (el.label != null && typeof el.label === \"object\") return el.value.toString();\n      return el.label.toString();\n    });\n  }\n\n  var change = function change(option, index, isChecked) {\n    Object.assign(option, {\n      checked: isChecked\n    });\n    Object.assign(items[index], {\n      checked: isChecked\n    });\n    if (onChange) onChange(option, items);\n    if (onActive) onActive(getSelectedValues().length > 0);\n  };\n\n  var isActive = function isActive() {\n    return !!getSelectedValues().length && !noModal;\n  };\n\n  var disabled = getSelectedValues().length <= 0;\n\n  var cleanFilterOnClose = function cleanFilterOnClose() {\n    if (!filter.applied) {\n      var newItems = items.filter(function (el) {\n        return el.checked;\n      }).map(function (el) {\n        el.checked = false;\n        return el;\n      });\n      if (onChange) onChange(items, newItems);\n      if (onActive) onActive(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Filter, {\n    sufix: sufix,\n    type: \"list\",\n    isMobile: isMobile,\n    className: className,\n    noModal: noModal,\n    label: label,\n    height: height,\n    items: items.map(function (option, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.optionsCheckboxes,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          disabled: option.disabled,\n          checked: option.checked,\n          onChange: function onChange(isChecked) {\n            return change(option, index, isChecked);\n          },\n          label: option.label\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: option.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, _this)]\n      }, option.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, _this);\n    }),\n    onOpen: function onOpen() {\n      return _onOpen();\n    },\n    isOpen: open,\n    onApply: function onApply() {\n      return _onApply();\n    },\n    onReset: function onReset() {\n      return _onReset();\n    },\n    onClose: function onClose() {\n      cleanFilterOnClose();\n\n      _onClose();\n    },\n    isActive: isActive() && !open,\n    value: getSelectedValues().length ? getSelectedValues() : [\"\"],\n    disabled: disabled,\n    header: undefined,\n    more: undefined,\n    qtdFilters: undefined\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FilterOptionWithTotal, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = FilterOptionWithTotal;\nFilterOptionWithTotal.defaultProps = {\n  open: false,\n  className: undefined,\n  isMobile: false,\n  sufix: \"\",\n  items: [],\n  noModal: false,\n  onOpen: function onOpen() {},\n  onApply: function onApply() {},\n  onReset: function onReset() {},\n  onChange: function onChange() {}\n};\nFilterOptionWithTotal.propTypes = {\n  open: PropTypes.bool,\n  className: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  items: PropTypes.arrayOf(PropTypes.object),\n  isMobile: PropTypes.bool,\n  sufix: PropTypes.string,\n  noModal: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  onOpen: PropTypes.func,\n  onApply: PropTypes.func,\n  onReset: PropTypes.func,\n  onChange: PropTypes.func\n};\nexport default FilterOptionWithTotal;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterOptionWithTotal\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/FilterOptionWithTotal/FilterOptionWithTotal.tsx"],"names":["React","PropTypes","Checkbox","Filter","useStyles","FilterOptionWithTotal","filter","items","sufix","onChange","isMobile","className","noModal","label","open","onOpen","onClose","onApply","onReset","onActive","height","classes","getSelectedValues","el","checked","map","value","toString","change","option","index","isChecked","Object","assign","length","isActive","disabled","cleanFilterOnClose","applied","newItems","optionsCheckboxes","total","key","undefined","defaultProps","propTypes","bool","oneOfType","object","string","arrayOf","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Checkbox from \"../Checkbox\";\nimport Filter from \"../Filter\";\nimport { useStyles } from \"./styles\";\n\nconst FilterOptionWithTotal = ({\n    filter,\n    items,\n    sufix,\n    onChange,\n    isMobile,\n    className,\n    noModal,\n    label,\n    open,\n    onOpen,\n    onClose,\n    onApply,\n    onReset,\n    onActive,\n    height,\n}) => {\n    const classes = useStyles({});\n    function getSelectedValues() {\n        return items.filter(el => el.checked).map(el => {\n            if (el.label != null && typeof el.label === \"object\")\n                return el.value.toString();\n            return el.label.toString();\n        });\n    }\n\n    const change = (option, index, isChecked) => {\n        Object.assign(option, { checked: isChecked });\n        Object.assign(items[index], { checked: isChecked });\n        if (onChange) onChange(option, items);\n        if (onActive) onActive(getSelectedValues().length > 0);\n    };\n\n    const isActive = () => !!getSelectedValues().length && !noModal;\n\n    const disabled = getSelectedValues().length <= 0;\n\n    const cleanFilterOnClose = () => {\n        if (!filter.applied) {\n            const newItems = items\n                .filter(el => el.checked)\n                .map(el => {\n                    el.checked = false;\n                    return el;\n                });\n            if (onChange) onChange(items, newItems);\n            if (onActive) onActive(false);\n        }\n    };\n\n    return (\n        <Filter\n            sufix={sufix}\n            type=\"list\"\n            isMobile={isMobile}\n            className={className}\n            noModal={noModal}\n            label={label}\n            height={height}\n            items={items.map((option, index) => {\n                return (\n                    <div key={option.key} className={classes.optionsCheckboxes}>\n                        <Checkbox\n                            key={option}\n                            disabled={option.disabled}\n                            checked={option.checked}\n                            onChange={isChecked => change(option, index, isChecked)}\n                            label={option.label} />\n                        <span>{option.total}</span>\n                    </div>\n                );\n            })}\n            onOpen={() => onOpen()}\n            isOpen={open}\n            onApply={() => onApply()}\n            onReset={() => onReset()}\n            onClose={() => { cleanFilterOnClose(); onClose(); } }\n            isActive={isActive() && !open}\n            value={getSelectedValues().length ? getSelectedValues() : [\"\"]}\n            disabled={disabled} header={undefined} more={undefined} qtdFilters={undefined}        />\n    );\n};\n\nFilterOptionWithTotal.defaultProps = {\n    open: false,\n    className: undefined,\n    isMobile: false,\n    sufix: \"\",\n    items: [],\n    noModal: false,\n    onOpen: () => { },\n    onApply: () => { },\n    onReset: () => { },\n    onChange: () => { },\n};\n\nFilterOptionWithTotal.propTypes = {\n    open: PropTypes.bool,\n    className: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    items: PropTypes.arrayOf(PropTypes.object),\n    isMobile: PropTypes.bool,\n    sufix: PropTypes.string,\n    noModal: PropTypes.bool,\n    label: PropTypes.string.isRequired,\n    onOpen: PropTypes.func,\n    onApply: PropTypes.func,\n    onReset: PropTypes.func,\n    onChange: PropTypes.func,\n};\n\nexport default (FilterOptionWithTotal);\n"]},"metadata":{},"sourceType":"module"}