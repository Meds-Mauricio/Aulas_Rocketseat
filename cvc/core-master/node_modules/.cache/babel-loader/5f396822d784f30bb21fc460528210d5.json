{"ast":null,"code":"import _slicedToArray from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\Calendar\\\\Calendar2days\\\\Calendar2days.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport DayPickerRangeController from \"react-dates/lib/components/DayPickerRangeController\";\nimport { styles } from \"../styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar NUMBER_OF_MONTHS_SHOWN_ON_DESKTOP = 2;\nvar MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE = 13; // precisa ser 13 pra contemplar um ano inteiro\n\nvar Calendar = function Calendar(_ref) {\n  _s();\n\n  var minDate = _ref.minDate,\n      maxDate = _ref.maxDate,\n      startDate = _ref.startDate,\n      endDate = _ref.endDate,\n      _onDatesChange = _ref.onDatesChange,\n      isMobile = _ref.isMobile,\n      classes = _ref.classes,\n      _onFocusChange = _ref.onFocusChange,\n      focus = _ref.focus,\n      isOutsideRange = _ref.isOutsideRange;\n\n  var _useState = useState(focus),\n      _useState2 = _slicedToArray(_useState, 2),\n      focusedInput = _useState2[0],\n      setFocusedInput = _useState2[1];\n\n  var _useState3 = useState(startDate),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dStart = _useState4[0],\n      setStart = _useState4[1];\n\n  var _useState5 = useState(endDate),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dEnd = _useState6[0],\n      setEnd = _useState6[1];\n\n  var _useState7 = useState(NUMBER_OF_MONTHS_SHOWN_ON_DESKTOP),\n      _useState8 = _slicedToArray(_useState7, 2),\n      numberOfMonths = _useState8[0],\n      setNumberOfMonths = _useState8[1];\n\n  var setNumberOfMonthsBasedOnScreenTypeAndStartAndEndDates = useCallback(function (isMobile, startDate, endDate) {\n    var todayMoment = moment();\n\n    if (isMobile) {\n      var startDateMoment = moment(startDate);\n      var startDateIsBeforeToday = startDateMoment.isBefore(todayMoment);\n\n      if (startDateIsBeforeToday) {\n        var startDateDay = startDateMoment.date();\n        var todayDay = todayMoment.date();\n        var daysOffset = startDateDay > todayDay ? 1 : 0;\n        var totalMonthsDistancePassed = todayMoment.diff(startDateMoment, \"months\");\n        var totalNumberOfMonthsUsingPreviousStartDate = totalMonthsDistancePassed + MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE + daysOffset;\n        setNumberOfMonths(totalNumberOfMonthsUsingPreviousStartDate);\n      } else {\n        var endDateMoment = moment(endDate);\n        var totalMonthsDistance = endDateMoment.diff(todayMoment, \"months\");\n        var totalNumberOfMonthsUsingFutureEndDate = totalMonthsDistance >= MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE ? totalMonthsDistance + 1 : MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE;\n        setNumberOfMonths(totalNumberOfMonthsUsingFutureEndDate);\n      }\n    } else {\n      setNumberOfMonths(NUMBER_OF_MONTHS_SHOWN_ON_DESKTOP);\n    }\n  }, []);\n  var getInitialVisibleMonthByStartDate = useCallback(function () {\n    if (isMobile) {\n      return minDate || moment();\n    }\n\n    if (startDate) {\n      var todayMoment = moment();\n      var result = todayMoment.isBefore(startDate) ? startDate : todayMoment;\n      return result;\n    }\n\n    return minDate || moment();\n  }, [startDate]);\n  var isOutsideRangeVerification = useCallback(function (day) {\n    var _moment, _defaultMinDate;\n\n    var onlyStartDateIsFilled = startDate && !endDate;\n    var todayMoment = moment();\n    var startDateIsNotBeforeToday = ((_moment = moment(startDate)) === null || _moment === void 0 ? void 0 : _moment.diff(todayMoment)) >= 0;\n\n    if (onlyStartDateIsFilled && startDateIsNotBeforeToday) {\n      var defaultOutsideRange = 330;\n\n      if (isOutsideRange === undefined || isOutsideRange === null) {\n        isOutsideRange = defaultOutsideRange;\n      }\n\n      var maxDateBasedOnStartDate = moment(startDate).add(isOutsideRange, \"days\");\n      var isNotAfterStartDate = (day === null || day === void 0 ? void 0 : day.diff(startDate)) <= 0;\n      var isAfterMaxDateBasedOnStartDate = (maxDateBasedOnStartDate === null || maxDateBasedOnStartDate === void 0 ? void 0 : maxDateBasedOnStartDate.diff(day)) < 0;\n      return isNotAfterStartDate || isAfterMaxDateBasedOnStartDate;\n    }\n\n    var defaultMinDate = moment().add(1, \"days\").startOf(\"day\");\n\n    if (minDate !== undefined) {\n      defaultMinDate = minDate;\n    }\n\n    var isBeforeMinDate = ((_defaultMinDate = defaultMinDate) === null || _defaultMinDate === void 0 ? void 0 : _defaultMinDate.diff(day)) > 0;\n    var isAfterMaxDate = (maxDate === null || maxDate === void 0 ? void 0 : maxDate.diff(day)) < 0;\n    return isBeforeMinDate || isAfterMaxDate;\n  }, [minDate, maxDate, startDate, endDate]);\n\n  var renderDay = function renderDay(day) {\n    var tomorrowDay = moment().add(1, \"days\").format(\"YYYY-MM-DD\");\n    var currentDay = day.format(\"YYYY-MM-DD\");\n    var startDateIsNotBeforeToday = tomorrowDay === currentDay;\n    return startDateIsNotBeforeToday ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DayPicker__firstDayUnlockedMobileContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DayPicker__firstDayUnlockedMobile\",\n        children: day.format(\"D\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, _this) : day.format(\"D\");\n  };\n\n  useEffect(function () {\n    setNumberOfMonthsBasedOnScreenTypeAndStartAndEndDates(isMobile, startDate, endDate);\n  }, [isMobile, startDate, endDate, setNumberOfMonthsBasedOnScreenTypeAndStartAndEndDates]);\n  useEffect(function () {\n    setStart(startDate);\n    setEnd(endDate);\n  }, [startDate, endDate]);\n  useEffect(function () {\n    setStart(startDate);\n    setEnd(endDate);\n  }, [startDate, endDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(DayPickerRangeController, {\n      renderDayContents: renderDay,\n      minDate: minDate,\n      maxDate: maxDate,\n      startDate: dStart,\n      endDate: dEnd,\n      onDatesChange: function onDatesChange(_ref2) {\n        var startDate = _ref2.startDate,\n            endDate = _ref2.endDate;\n        setStart(startDate);\n        setEnd(endDate);\n\n        _onDatesChange({\n          startDate: startDate,\n          endDate: endDate\n        });\n      },\n      focusedInput: focusedInput,\n      onFocusChange: function onFocusChange(e) {\n        var focus = !e ? \"startDate\" : \"endDate\";\n        setFocusedInput(focus);\n\n        _onFocusChange(focus);\n      },\n      numberOfMonths: numberOfMonths,\n      initialVisibleMonth: getInitialVisibleMonthByStartDate,\n      orientation: isMobile ? \"verticalScrollable\" : \"horizontal\",\n      isOutsideRange: isOutsideRangeVerification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, _this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Calendar, \"fPGjaydE74Zom9parJXXOiuz6Jk=\");\n\n_c = Calendar;\nCalendar.propTypes = {\n  onDateChange: PropTypes.func,\n  isMobile: PropTypes.bool,\n  startDate: PropTypes.date,\n  endDate: PropTypes.date,\n  isOutsideRange: PropTypes.number\n};\nCalendar.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Calendar\",\n  \"props\": {\n    \"onDateChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isMobile\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"startDate\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"PropTypes.date\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"endDate\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"PropTypes.date\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isOutsideRange\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(Calendar);\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\Calendar\\\\Calendar2days\\\\Calendar2days.js\"] = {\n    name: \"Calendar\",\n    docgenInfo: Calendar.__docgenInfo,\n    path: \"src\\\\Calendar\\\\Calendar2days\\\\Calendar2days.js\"\n  };\n}","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/Calendar/Calendar2days/Calendar2days.js"],"names":["withStyles","moment","PropTypes","React","useCallback","useEffect","useState","DayPickerRangeController","styles","NUMBER_OF_MONTHS_SHOWN_ON_DESKTOP","MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE","Calendar","minDate","maxDate","startDate","endDate","onDatesChange","isMobile","classes","onFocusChange","focus","isOutsideRange","focusedInput","setFocusedInput","dStart","setStart","dEnd","setEnd","numberOfMonths","setNumberOfMonths","setNumberOfMonthsBasedOnScreenTypeAndStartAndEndDates","todayMoment","startDateMoment","startDateIsBeforeToday","isBefore","startDateDay","date","todayDay","daysOffset","totalMonthsDistancePassed","diff","totalNumberOfMonthsUsingPreviousStartDate","endDateMoment","totalMonthsDistance","totalNumberOfMonthsUsingFutureEndDate","getInitialVisibleMonthByStartDate","result","isOutsideRangeVerification","day","onlyStartDateIsFilled","startDateIsNotBeforeToday","defaultOutsideRange","undefined","maxDateBasedOnStartDate","add","isNotAfterStartDate","isAfterMaxDateBasedOnStartDate","defaultMinDate","startOf","isBeforeMinDate","isAfterMaxDate","renderDay","tomorrowDay","format","currentDay","root","e","propTypes","onDateChange","func","bool","number","withTheme"],"mappings":"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","sourcesContent":["import { withStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport DayPickerRangeController from \"react-dates/lib/components/DayPickerRangeController\";\nimport { styles } from \"../styles\";\n\nconst NUMBER_OF_MONTHS_SHOWN_ON_DESKTOP = 2;\nconst MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE = 13; // precisa ser 13 pra contemplar um ano inteiro\n\nconst Calendar = ({ minDate, maxDate, startDate, endDate, onDatesChange, isMobile, classes, onFocusChange, focus, isOutsideRange }) => {\n    const [focusedInput, setFocusedInput] = useState(focus);\n    const [dStart, setStart] = useState(startDate);\n    const [dEnd, setEnd] = useState(endDate);\n    const [numberOfMonths, setNumberOfMonths] = useState(NUMBER_OF_MONTHS_SHOWN_ON_DESKTOP);\n\n    const setNumberOfMonthsBasedOnScreenTypeAndStartAndEndDates = useCallback((isMobile, startDate, endDate) => {\n        const todayMoment = moment();\n        if (isMobile) {\n            const startDateMoment = moment(startDate);\n            const startDateIsBeforeToday = startDateMoment.isBefore(todayMoment);\n            if (startDateIsBeforeToday) {\n                const startDateDay = startDateMoment.date();\n                const todayDay = todayMoment.date();\n                const daysOffset = startDateDay > todayDay ? 1 : 0;\n                const totalMonthsDistancePassed = todayMoment.diff(startDateMoment, \"months\");\n                const totalNumberOfMonthsUsingPreviousStartDate = totalMonthsDistancePassed + MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE + daysOffset;\n                setNumberOfMonths(totalNumberOfMonthsUsingPreviousStartDate);\n            } else {\n                const endDateMoment = moment(endDate);\n                const totalMonthsDistance = endDateMoment.diff(todayMoment, \"months\");\n                const totalNumberOfMonthsUsingFutureEndDate = totalMonthsDistance >= MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE ? totalMonthsDistance + 1 : MIN_NUMBER_OF_MONTHS_SHOWN_ON_MOBILE;\n                setNumberOfMonths(totalNumberOfMonthsUsingFutureEndDate);\n            }\n        } else {\n            setNumberOfMonths(NUMBER_OF_MONTHS_SHOWN_ON_DESKTOP);\n        }\n    }, []);\n\n    const getInitialVisibleMonthByStartDate = useCallback(() => {\n        if (isMobile) {\n            return minDate || moment();\n        }\n        if (startDate) {\n            const todayMoment = moment();\n            const result = todayMoment.isBefore(startDate) ? startDate : todayMoment;\n            return result;\n        }\n        return minDate || moment();\n    }, [startDate]);\n\n    const isOutsideRangeVerification = useCallback(\n        day => {\n            const onlyStartDateIsFilled = startDate && !endDate;\n            const todayMoment = moment();\n            const startDateIsNotBeforeToday = moment(startDate)?.diff(todayMoment) >= 0;\n\t\t\t\tif (onlyStartDateIsFilled && startDateIsNotBeforeToday) {\n\t\t\t\t\tlet defaultOutsideRange = 330;\n\t\t\t\t\tif(isOutsideRange === undefined|| isOutsideRange === null ) {\n\t\t\t\t\t\tisOutsideRange = defaultOutsideRange;\n\t\t\t\t\t}\n\t\t\t\t\tconst maxDateBasedOnStartDate = moment(startDate).add(isOutsideRange, \"days\");\n\t\t\t\t\tconst isNotAfterStartDate = day?.diff(startDate) <= 0;\n\t\t\t\t\tconst isAfterMaxDateBasedOnStartDate = maxDateBasedOnStartDate?.diff(day) < 0;\n\t\t\t\t\treturn isNotAfterStartDate || isAfterMaxDateBasedOnStartDate;\n\t\t\t\t}\n\t\t\t\tlet defaultMinDate = moment().add(1, \"days\").startOf(\"day\");\n\t\t\t\tif(minDate !== undefined) {\n\t\t\t\t\tdefaultMinDate = minDate;\n\t\t\t\t}\n\t\t\t\tconst isBeforeMinDate = defaultMinDate?.diff(day) > 0;\n\t\t\t\tconst isAfterMaxDate = maxDate?.diff(day) < 0;\n\t\t\t\treturn isBeforeMinDate || isAfterMaxDate;\n        },\n        [minDate, maxDate, startDate, endDate]\n    );\n\n    const renderDay = day => {\n        const tomorrowDay = moment()\n            .add(1, \"days\")\n            .format(\"YYYY-MM-DD\");\n        const currentDay = day.format(\"YYYY-MM-DD\");\n        const startDateIsNotBeforeToday = tomorrowDay === currentDay;\n        return startDateIsNotBeforeToday ? (\n            <div className=\"DayPicker__firstDayUnlockedMobileContainer\">\n                <div className=\"DayPicker__firstDayUnlockedMobile\">{day.format(\"D\")}</div>\n            </div>\n        ) : (\n            day.format(\"D\")\n        );\n    };\n\n    useEffect(() => {\n        setNumberOfMonthsBasedOnScreenTypeAndStartAndEndDates(isMobile, startDate, endDate);\n    }, [isMobile, startDate, endDate, setNumberOfMonthsBasedOnScreenTypeAndStartAndEndDates]);\n\n    useEffect(() => {\n        setStart(startDate);\n        setEnd(endDate);\n    }, [startDate, endDate]);\n\n    useEffect(() => {\n        setStart(startDate);\n        setEnd(endDate);\n    }, [startDate, endDate]);\n\n    return (\n        <div className={classes.root}>\n            <DayPickerRangeController\n                renderDayContents={renderDay}\n                minDate={minDate}\n                maxDate={maxDate}\n                startDate={dStart}\n                endDate={dEnd}\n                onDatesChange={({ startDate, endDate }) => {\n                    setStart(startDate);\n                    setEnd(endDate);\n                    onDatesChange({\n                        startDate,\n                        endDate\n                    });\n                }}\n                focusedInput={focusedInput}\n                onFocusChange={e => {\n                    const focus = !e ? \"startDate\" : \"endDate\";\n                    setFocusedInput(focus);\n                    onFocusChange(focus);\n                }}\n                numberOfMonths={numberOfMonths}\n                initialVisibleMonth={getInitialVisibleMonthByStartDate}\n                orientation={isMobile ? \"verticalScrollable\" : \"horizontal\"}\n                isOutsideRange={isOutsideRangeVerification}\n            />{\" \"}\n        </div>\n    );\n};\n\nCalendar.propTypes = {\n    onDateChange: PropTypes.func,\n    isMobile: PropTypes.bool,\n    startDate: PropTypes.date,\n    endDate: PropTypes.date,\n    isOutsideRange: PropTypes.number\n};\n\n\nexport default withStyles(styles, {\n    withTheme: true\n})(Calendar);\n"]},"metadata":{},"sourceType":"module"}