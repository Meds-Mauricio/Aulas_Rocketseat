{"ast":null,"code":"import _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\CoreHeader\\\\Stories\\\\CoreHeader.stories.tsx\",\n    _this = this;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from \\\"react\\\";\\nimport { Grid } from \\\"@material-ui/core\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { BrandContext } from \\\"../../BrandContext\\\";\\nimport ThemeProviderCustom from \\\"../../ThemeProviderCustom\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\nimport mockBrands from \\\"../../utils/brandMock\\\";\\nimport CoreHeader from \\\"../CoreHeader\\\";\\n\\ninterface ICoreHeader  {\\n    brand: BrandType,\\n    isMobile: boolean,\\n    showCovidAlert: boolean,\\n}\\n\\nconst CoreHeaderStory = ({ brand, isMobile, showCovidAlert }: ICoreHeader) => (\\n    <BrandContext.Provider value={mockBrands[brand]}>\\n        <ThemeProviderCustom>\\n            <Grid item xs={isMobile ? 2 : 12}>\\n                <CoreHeader\\n                    isMobile={isMobile}\\n                    showCovidAlert={showCovidAlert}                    \\n                />\\n            </Grid>\\n        </ThemeProviderCustom>\\n    </BrandContext.Provider>\\n);\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"cvc\\\",\\n        isMobile: false,\\n        showCovidAlert: true,\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"cvc\\\", \\\"cvccorp\\\", \\\"sub\\\"]\\n        },\\n        isMobile: { type: \\\"boolean\\\" },\\n        showCovidAlert: { type: \\\"boolean\\\" },\\n    }\\n}\\n\\nstoriesOf(\\\"Components/CoreHeader\\\", module)\\n    .add(\\\"Default\\\", (args) => <CoreHeaderStory {...args}/>, argsControls);\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"default\": {\n    \"startLoc\": {\n      \"col\": 9,\n      \"line\": 46\n    },\n    \"endLoc\": {\n      \"col\": 72,\n      \"line\": 46\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 46\n    },\n    \"endBody\": {\n      \"col\": 58,\n      \"line\": 46\n    }\n  }\n};\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { storiesOf } from \"@storybook/react\";\nimport { BrandContext } from \"../../BrandContext\";\nimport ThemeProviderCustom from \"../../ThemeProviderCustom\";\nimport mockBrands from \"../../utils/brandMock\";\nimport CoreHeader from \"../CoreHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CoreHeaderStory = function CoreHeaderStory(_ref) {\n  var brand = _ref.brand,\n      isMobile = _ref.isMobile,\n      showCovidAlert = _ref.showCovidAlert;\n  return /*#__PURE__*/_jsxDEV(BrandContext.Provider, {\n    value: mockBrands[brand],\n    children: /*#__PURE__*/_jsxDEV(ThemeProviderCustom, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: isMobile ? 2 : 12,\n        children: /*#__PURE__*/_jsxDEV(CoreHeader, {\n          isMobile: isMobile,\n          showCovidAlert: showCovidAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = CoreHeaderStory;\nvar argsControls = {\n  args: {\n    brand: \"cvc\",\n    isMobile: false,\n    showCovidAlert: true\n  },\n  argTypes: {\n    brand: {\n      type: \"select\",\n      options: [\"cvc\", \"cvccorp\", \"sub\"]\n    },\n    isMobile: {\n      type: \"boolean\"\n    },\n    showCovidAlert: {\n      type: \"boolean\"\n    }\n  }\n};\nstoriesOf(\"Components/CoreHeader\", module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __LOCATIONS_MAP__\n  }\n}).add(\"Default\", function (args) {\n  return /*#__PURE__*/_jsxDEV(CoreHeaderStory, _objectSpread({}, args), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 31\n  }, _this);\n}, argsControls);\n\nvar _c;\n\n$RefreshReg$(_c, \"CoreHeaderStory\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/CoreHeader/Stories/CoreHeader.stories.tsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","Grid","storiesOf","BrandContext","ThemeProviderCustom","mockBrands","CoreHeader","CoreHeaderStory","brand","isMobile","showCovidAlert","argsControls","args","argTypes","type","options","module","addParameters","storySource","source","locationsMap","add"],"mappings":";;;;;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,06CAAhB,C,CACA;;AACA,IAAIC,iBAAiB,GAAG;AAAC,aAAU;AAAC,gBAAW;AAAC,aAAM,CAAP;AAAS,cAAO;AAAhB,KAAZ;AAAgC,cAAS;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAzC;AAA8D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1E;AAA+F,eAAU;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB;AAAzG;AAAX,CAAxB;AAEJ,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,QAAV,QAAUA,QAAV;AAAA,MAAoBC,cAApB,QAAoBA,cAApB;AAAA,sBACpB,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEL,UAAU,CAACG,KAAD,CAAxC;AAAA,2BACI,QAAC,mBAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAEC,QAAQ,GAAG,CAAH,GAAO,EAA9B;AAAA,+BACI,QAAC,UAAD;AACI,UAAA,QAAQ,EAAEA,QADd;AAEI,UAAA,cAAc,EAAEC;AAFpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADoB;AAAA,CAAxB;;KAAMH,e;AAaN,IAAMI,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFJ,IAAAA,KAAK,EAAE,KADL;AAEFC,IAAAA,QAAQ,EAAE,KAFR;AAGFC,IAAAA,cAAc,EAAE;AAHd,GADW;AAMjBG,EAAAA,QAAQ,EAAE;AACNL,IAAAA,KAAK,EAAE;AACHM,MAAAA,IAAI,EAAE,QADH;AAEHC,MAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,SAAR,EAAmB,KAAnB;AAFN,KADD;AAKNN,IAAAA,QAAQ,EAAE;AAAEK,MAAAA,IAAI,EAAE;AAAR,KALJ;AAMNJ,IAAAA,cAAc,EAAE;AAAEI,MAAAA,IAAI,EAAE;AAAR;AANV;AANO,CAArB;AAgBAZ,SAAS,CAAC,uBAAD,EAA0Bc,MAA1B,CAAT,CAA2CC,aAA3C,CAAyD;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAErB,SAAV;AAAqBsB,IAAAA,YAAY,EAAErB;AAAnC;AAAf,CAAzD,EACKsB,GADL,CACS,SADT,EACoB,UAACT,IAAD;AAAA,sBAAU,QAAC,eAAD,oBAAqBA,IAArB;AAAA;AAAA;AAAA;AAAA,WAAV;AAAA,CADpB,EAC4DD,YAD5D","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { Grid } from \\\"@material-ui/core\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport { BrandContext } from \\\"../../BrandContext\\\";\\nimport ThemeProviderCustom from \\\"../../ThemeProviderCustom\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\nimport mockBrands from \\\"../../utils/brandMock\\\";\\nimport CoreHeader from \\\"../CoreHeader\\\";\\n\\ninterface ICoreHeader  {\\n    brand: BrandType,\\n    isMobile: boolean,\\n    showCovidAlert: boolean,\\n}\\n\\nconst CoreHeaderStory = ({ brand, isMobile, showCovidAlert }: ICoreHeader) => (\\n    <BrandContext.Provider value={mockBrands[brand]}>\\n        <ThemeProviderCustom>\\n            <Grid item xs={isMobile ? 2 : 12}>\\n                <CoreHeader\\n                    isMobile={isMobile}\\n                    showCovidAlert={showCovidAlert}                    \\n                />\\n            </Grid>\\n        </ThemeProviderCustom>\\n    </BrandContext.Provider>\\n);\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"cvc\\\",\\n        isMobile: false,\\n        showCovidAlert: true,\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"cvc\\\", \\\"cvccorp\\\", \\\"sub\\\"]\\n        },\\n        isMobile: { type: \\\"boolean\\\" },\\n        showCovidAlert: { type: \\\"boolean\\\" },\\n    }\\n}\\n\\nstoriesOf(\\\"Components/CoreHeader\\\", module)\\n    .add(\\\"Default\\\", (args) => <CoreHeaderStory {...args}/>, argsControls);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"default\":{\"startLoc\":{\"col\":9,\"line\":46},\"endLoc\":{\"col\":72,\"line\":46},\"startBody\":{\"col\":20,\"line\":46},\"endBody\":{\"col\":58,\"line\":46}}};\n    \nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { storiesOf } from \"@storybook/react\";\nimport { BrandContext } from \"../../BrandContext\";\nimport ThemeProviderCustom from \"../../ThemeProviderCustom\";\nimport { BrandType } from \"../../types/brand\";\nimport mockBrands from \"../../utils/brandMock\";\nimport CoreHeader from \"../CoreHeader\";\n\ninterface ICoreHeader  {\n    brand: BrandType,\n    isMobile: boolean,\n    showCovidAlert: boolean,\n}\n\nconst CoreHeaderStory = ({ brand, isMobile, showCovidAlert }: ICoreHeader) => (\n    <BrandContext.Provider value={mockBrands[brand]}>\n        <ThemeProviderCustom>\n            <Grid item xs={isMobile ? 2 : 12}>\n                <CoreHeader\n                    isMobile={isMobile}\n                    showCovidAlert={showCovidAlert}                    \n                />\n            </Grid>\n        </ThemeProviderCustom>\n    </BrandContext.Provider>\n);\n\nconst argsControls = {\n    args: {\n        brand: \"cvc\",\n        isMobile: false,\n        showCovidAlert: true,\n    },\n    argTypes: {\n        brand: {\n            type: \"select\",\n            options: [\"cvc\", \"cvccorp\", \"sub\"]\n        },\n        isMobile: { type: \"boolean\" },\n        showCovidAlert: { type: \"boolean\" },\n    }\n}\n\nstoriesOf(\"Components/CoreHeader\", module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } })\n    .add(\"Default\", (args) => <CoreHeaderStory {...args}/>, argsControls);\n"]},"metadata":{},"sourceType":"module"}