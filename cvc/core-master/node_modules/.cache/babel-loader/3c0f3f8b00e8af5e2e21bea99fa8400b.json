{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\Typography\\\\Typography.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { styles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Typography = function Typography(_ref) {\n  var classes = _ref.classes,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      children = _ref.children,\n      type = _ref.type,\n      onClick = _ref.onClick,\n      style = _ref.style,\n      key = _ref.key;\n\n  var handleClick = function handleClick(e) {\n    if (onClick) onClick(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: style,\n    className: \"\\n                \".concat(classes.root, \"\\n                \").concat(classes[type], \"\\n                \").concat(className, \"\\n            \"),\n    onClick: function onClick(e) {\n      return handleClick(e);\n    },\n    children: children\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = Typography;\nexport default withStyles(styles, {\n  withTheme: true\n})(Typography);\n\nvar _c;\n\n$RefreshReg$(_c, \"Typography\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/Typography/Typography.tsx"],"names":["React","withStyles","styles","Typography","classes","className","children","type","onClick","style","key","handleClick","e","root","withTheme"],"mappings":";;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAEA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAcA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAQA;AAAA,MAPfC,OAOe,QAPfA,OAOe;AAAA,4BANfC,SAMe;AAAA,MANfA,SAMe,+BANH,EAMG;AAAA,MALfC,QAKe,QALfA,QAKe;AAAA,MAJfC,IAIe,QAJfA,IAIe;AAAA,MAHfC,OAGe,QAHfA,OAGe;AAAA,MAFfC,KAEe,QAFfA,KAEe;AAAA,MADfC,GACe,QADfA,GACe;;AACf,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAY;AAC5B,QAAIJ,OAAJ,EAAaA,OAAO,CAACI,CAAD,CAAP;AAChB,GAFD;;AAIA,sBACI;AAEI,IAAA,KAAK,EAAEH,KAFX;AAGI,IAAA,SAAS,8BACHL,OAAO,CAACS,IADL,+BAEHT,OAAO,CAACG,IAAD,CAFJ,+BAGHF,SAHG,mBAHb;AAQI,IAAA,OAAO,EAAE,iBAAAO,CAAC;AAAA,aAAID,WAAW,CAACC,CAAD,CAAf;AAAA,KARd;AAAA,cAUKN;AAVL,KACSI,GADT;AAAA;AAAA;AAAA;AAAA,WADJ;AAcH,CA3BD;;KAAMP,U;AA6BN,eAAeF,UAAU,CAACC,MAAD,EAAS;AAAEY,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CAAwCX,UAAxC,CAAf","sourcesContent":["import React, { ReactNode } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { styles } from \"./styles\";\n\ninterface ITypography {\n    classes: {\n        root: string\n    }\n    className?: string\n    children: ReactNode\n    type: string\n    onClick?: (e: any) => void\n    style?: any\n    key?: string\n}\n\nconst Typography = ({\n    classes,\n    className = '',\n    children,\n    type,\n    onClick,\n    style,\n    key,\n}: ITypography) => {\n    const handleClick = (e: any) => {\n        if (onClick) onClick(e);\n    };\n\n    return (\n        <span\n            key={key}\n            style={style}\n            className={`\n                ${classes.root}\n                ${classes[type]}\n                ${className}\n            `}\n            onClick={e => handleClick(e)}\n        >\n            {children}\n        </span>\n    );\n};\n\nexport default withStyles(styles, { withTheme: true })(Typography);\n"]},"metadata":{},"sourceType":"module"}