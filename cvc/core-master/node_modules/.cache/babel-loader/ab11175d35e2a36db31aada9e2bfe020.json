{"ast":null,"code":"import _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\OrderEngine\\\\Stories\\\\OrderEngine.stories.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from \\\"react\\\";\\nimport { Paper, Divider, } from \\\"@material-ui/core\\\";\\nimport Grid from \\\"@material-ui/core/Grid\\\";\\nimport { makeStyles , MuiThemeProvider } from \\\"@material-ui/core/styles\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\nimport OrderEngine from \\\"../OrderEngine\\\";\\nimport dbAir from \\\"./dbAir.json\\\";\\n\\nconst useStyles = makeStyles((theme) => ({\\n    root: {\\n        background: theme.palette.background.default,\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n}));\\n\\nconst orders = [\\n    {\\n        value: \\\"Menor valor\\\",\\n        field: \\\"total\\\",\\n        operation: \\\"asc\\\"\\n    },\\n    {\\n        value: \\\"Maior valor\\\",\\n        field: \\\"total\\\",\\n        operation: \\\"desc\\\"\\n    },\\n    {\\n        value: \\\"Mais rápido\\\",\\n        field: item => {\\n            const totalMinutesGo = item.segments[0].totalMinuteDuration;\\n            const totalMinutesBack = (item.segments.find(s => s.segmentIndex === 1) || {}).totalMinuteDuration;\\n            return [totalMinutesGo, totalMinutesBack, item.total];\\n        },\\n        operation: [\\\"asc\\\", \\\"asc\\\", \\\"desc\\\"]\\n    },\\n]\\n\\ntype OrderEngineStoryProps = {\\n    mode: string,\\n    brand: BrandType\\n}\\n\\nconst OrderEngineStory = ({\\n    mode, brand\\n}: OrderEngineStoryProps) => {\\n    const classes = useStyles(themes[brand]);\\n\\n    return (\\n        <MuiThemeProvider theme={themes[brand]}>\\n            <Paper className={classes[mode]} id=\\\"OrderEngine\\\">\\n                <Typography variant=\\\"h3\\\">OrderEngine</Typography>\\n                <br />\\n                <Divider />\\n                <br />\\n                <Grid item xs={2}>\\n                    <OrderEngine\\n                        orders={orders}\\n                        dataSource={dbAir.priceGroups}\\n                        onOrdered={() => undefined}\\n                    />\\n                </Grid>\\n            </Paper>\\n        </MuiThemeProvider>\\n\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"CVC\\\",\\n        mode: \\\"root\\\",\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"]\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"root\\\", \\\"darkBg\\\"]\\n        },\\n    }\\n}\\n\\nstoriesOf(\\\"Components/OrderEngine\\\", module)\\n    .add(\\\"Default\\\", (args) => <OrderEngineStory {...args}/>, argsControls);\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"default\": {\n    \"startLoc\": {\n      \"col\": 9,\n      \"line\": 95\n    },\n    \"endLoc\": {\n      \"col\": 73,\n      \"line\": 95\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 95\n    },\n    \"endBody\": {\n      \"col\": 59,\n      \"line\": 95\n    }\n  }\n};\nimport React from \"react\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { storiesOf } from \"@storybook/react\";\nimport themes from \"../../Theme/themes\";\nimport OrderEngine from \"../OrderEngine\";\nimport dbAir from \"./dbAir.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      background: theme.palette.background[\"default\"],\n      boxShadow: theme.shadows[8],\n      padding: \"30px\"\n    },\n    darkBg: {\n      background: \"rgba(0, 0, 0, 0.6)\",\n      boxShadow: theme.shadows[8],\n      padding: \"30px\"\n    }\n  };\n});\nvar orders = [{\n  value: \"Menor valor\",\n  field: \"total\",\n  operation: \"asc\"\n}, {\n  value: \"Maior valor\",\n  field: \"total\",\n  operation: \"desc\"\n}, {\n  value: \"Mais rápido\",\n  field: function field(item) {\n    var totalMinutesGo = item.segments[0].totalMinuteDuration;\n    var totalMinutesBack = (item.segments.find(function (s) {\n      return s.segmentIndex === 1;\n    }) || {}).totalMinuteDuration;\n    return [totalMinutesGo, totalMinutesBack, item.total];\n  },\n  operation: [\"asc\", \"asc\", \"desc\"]\n}];\n\nvar OrderEngineStory = function OrderEngineStory(_ref) {\n  _s();\n\n  var mode = _ref.mode,\n      brand = _ref.brand;\n  var classes = useStyles(themes[brand]);\n  return /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n    theme: themes[brand],\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes[mode],\n      id: \"OrderEngine\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"OrderEngine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(OrderEngine, {\n          orders: orders,\n          dataSource: dbAir.priceGroups,\n          onOrdered: function onOrdered() {\n            return undefined;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(OrderEngineStory, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = OrderEngineStory;\nvar argsControls = {\n  args: {\n    brand: \"CVC\",\n    mode: \"root\"\n  },\n  argTypes: {\n    brand: {\n      type: \"select\",\n      options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n    },\n    mode: {\n      type: \"select\",\n      options: [\"root\", \"darkBg\"]\n    }\n  }\n};\nstoriesOf(\"Components/OrderEngine\", module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __LOCATIONS_MAP__\n  }\n}).add(\"Default\", function (args) {\n  return /*#__PURE__*/_jsxDEV(OrderEngineStory, _objectSpread({}, args), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 31\n  }, _this);\n}, argsControls);\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderEngineStory\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/OrderEngine/Stories/OrderEngine.stories.tsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","Paper","Divider","Grid","makeStyles","MuiThemeProvider","Typography","storiesOf","themes","OrderEngine","dbAir","useStyles","theme","root","background","palette","boxShadow","shadows","padding","darkBg","orders","value","field","operation","item","totalMinutesGo","segments","totalMinuteDuration","totalMinutesBack","find","s","segmentIndex","total","OrderEngineStory","mode","brand","classes","priceGroups","undefined","argsControls","args","argTypes","type","options","module","addParameters","storySource","source","locationsMap","add"],"mappings":"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","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { Paper, Divider, } from \\\"@material-ui/core\\\";\\nimport Grid from \\\"@material-ui/core/Grid\\\";\\nimport { makeStyles , MuiThemeProvider } from \\\"@material-ui/core/styles\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\nimport OrderEngine from \\\"../OrderEngine\\\";\\nimport dbAir from \\\"./dbAir.json\\\";\\n\\nconst useStyles = makeStyles((theme) => ({\\n    root: {\\n        background: theme.palette.background.default,\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n}));\\n\\nconst orders = [\\n    {\\n        value: \\\"Menor valor\\\",\\n        field: \\\"total\\\",\\n        operation: \\\"asc\\\"\\n    },\\n    {\\n        value: \\\"Maior valor\\\",\\n        field: \\\"total\\\",\\n        operation: \\\"desc\\\"\\n    },\\n    {\\n        value: \\\"Mais rápido\\\",\\n        field: item => {\\n            const totalMinutesGo = item.segments[0].totalMinuteDuration;\\n            const totalMinutesBack = (item.segments.find(s => s.segmentIndex === 1) || {}).totalMinuteDuration;\\n            return [totalMinutesGo, totalMinutesBack, item.total];\\n        },\\n        operation: [\\\"asc\\\", \\\"asc\\\", \\\"desc\\\"]\\n    },\\n]\\n\\ntype OrderEngineStoryProps = {\\n    mode: string,\\n    brand: BrandType\\n}\\n\\nconst OrderEngineStory = ({\\n    mode, brand\\n}: OrderEngineStoryProps) => {\\n    const classes = useStyles(themes[brand]);\\n\\n    return (\\n        <MuiThemeProvider theme={themes[brand]}>\\n            <Paper className={classes[mode]} id=\\\"OrderEngine\\\">\\n                <Typography variant=\\\"h3\\\">OrderEngine</Typography>\\n                <br />\\n                <Divider />\\n                <br />\\n                <Grid item xs={2}>\\n                    <OrderEngine\\n                        orders={orders}\\n                        dataSource={dbAir.priceGroups}\\n                        onOrdered={() => undefined}\\n                    />\\n                </Grid>\\n            </Paper>\\n        </MuiThemeProvider>\\n\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"CVC\\\",\\n        mode: \\\"root\\\",\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"]\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"root\\\", \\\"darkBg\\\"]\\n        },\\n    }\\n}\\n\\nstoriesOf(\\\"Components/OrderEngine\\\", module)\\n    .add(\\\"Default\\\", (args) => <OrderEngineStory {...args}/>, argsControls);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"default\":{\"startLoc\":{\"col\":9,\"line\":95},\"endLoc\":{\"col\":73,\"line\":95},\"startBody\":{\"col\":20,\"line\":95},\"endBody\":{\"col\":59,\"line\":95}}};\n    \nimport React from \"react\";\nimport { Paper, Divider, } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles , MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { storiesOf } from \"@storybook/react\";\nimport themes from \"../../Theme/themes\";\nimport { BrandType } from \"../../types/brand\";\nimport OrderEngine from \"../OrderEngine\";\nimport dbAir from \"./dbAir.json\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: theme.palette.background.default,\n        boxShadow: theme.shadows[8],\n        padding: \"30px\",\n    },\n    darkBg: {\n        background: \"rgba(0, 0, 0, 0.6)\",\n        boxShadow: theme.shadows[8],\n        padding: \"30px\",\n    },\n}));\n\nconst orders = [\n    {\n        value: \"Menor valor\",\n        field: \"total\",\n        operation: \"asc\"\n    },\n    {\n        value: \"Maior valor\",\n        field: \"total\",\n        operation: \"desc\"\n    },\n    {\n        value: \"Mais rápido\",\n        field: item => {\n            const totalMinutesGo = item.segments[0].totalMinuteDuration;\n            const totalMinutesBack = (item.segments.find(s => s.segmentIndex === 1) || {}).totalMinuteDuration;\n            return [totalMinutesGo, totalMinutesBack, item.total];\n        },\n        operation: [\"asc\", \"asc\", \"desc\"]\n    },\n]\n\ntype OrderEngineStoryProps = {\n    mode: string,\n    brand: BrandType\n}\n\nconst OrderEngineStory = ({\n    mode, brand\n}: OrderEngineStoryProps) => {\n    const classes = useStyles(themes[brand]);\n\n    return (\n        <MuiThemeProvider theme={themes[brand]}>\n            <Paper className={classes[mode]} id=\"OrderEngine\">\n                <Typography variant=\"h3\">OrderEngine</Typography>\n                <br />\n                <Divider />\n                <br />\n                <Grid item xs={2}>\n                    <OrderEngine\n                        orders={orders}\n                        dataSource={dbAir.priceGroups}\n                        onOrdered={() => undefined}\n                    />\n                </Grid>\n            </Paper>\n        </MuiThemeProvider>\n\n    );\n};\n\nconst argsControls = {\n    args: {\n        brand: \"CVC\",\n        mode: \"root\",\n    },\n    argTypes: {\n        brand: {\n            type: \"select\",\n            options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n        },\n        mode: {\n            type: \"select\",\n            options: [\"root\", \"darkBg\"]\n        },\n    }\n}\n\nstoriesOf(\"Components/OrderEngine\", module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } })\n    .add(\"Default\", (args) => <OrderEngineStory {...args}/>, argsControls);\n"]},"metadata":{},"sourceType":"module"}