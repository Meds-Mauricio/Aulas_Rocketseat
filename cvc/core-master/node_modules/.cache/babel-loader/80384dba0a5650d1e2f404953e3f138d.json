{"ast":null,"code":"import _slicedToArray from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\Dialog\\\\Dialog.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { styles } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AlertDialog = function AlertDialog(_ref) {\n  _s();\n\n  var classes = _ref.classes,\n      btn = _ref.btn,\n      title = _ref.title,\n      actions = _ref.actions,\n      content = _ref.content;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose(callBack) {\n    if (callBack) {\n      callBack();\n    }\n\n    setOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: btn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: function onClose() {\n        return handleClose();\n      },\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      classes: {\n        paper: classes.paper\n      },\n      BackdropProps: {\n        className: classes.backdrop\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        classes: {\n          root: classes.title\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        classes: {\n          root: classes.content\n        },\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: [\" \", content, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        classes: {\n          root: classes.actions\n        },\n        children: actions.map(function (item, key) {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: function onClick() {\n              return handleClose(item.callBack);\n            },\n            color: item.color,\n            className: \"\".concat(classes.btn, \" \").concat(classes[item.color]),\n            children: item.label\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AlertDialog, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = AlertDialog;\nAlertDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nAlertDialog.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AlertDialog\",\n  \"props\": {\n    \"classes\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(AlertDialog);\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertDialog\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\Dialog\\\\Dialog.js\"] = {\n    name: \"AlertDialog\",\n    docgenInfo: AlertDialog.__docgenInfo,\n    path: \"src\\\\Dialog\\\\Dialog.js\"\n  };\n}","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/Dialog/Dialog.js"],"names":["React","PropTypes","withStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","styles","AlertDialog","classes","btn","title","actions","content","useState","open","setOpen","handleClickOpen","handleClose","callBack","paper","className","backdrop","root","map","item","key","color","label","propTypes","object","isRequired","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { styles } from \"./styles\";\n\nconst AlertDialog = ({ classes, btn, title, actions, content }) => {\n    const [open, setOpen] = React.useState(false);\n\n    function handleClickOpen() {\n        setOpen(true);\n    }\n\n    function handleClose(callBack) {\n        if (callBack) {\n            callBack();\n        }\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                {btn}\n            </Button>\n            <Dialog\n                open={open}\n                onClose={() => handleClose()}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                classes={{ paper: classes.paper }}\n                BackdropProps={{ className: classes.backdrop }}\n            >\n                <DialogTitle classes={{ root: classes.title }}>{title}</DialogTitle>\n                <DialogContent classes={{ root: classes.content }}>\n                    <DialogContentText> {content} </DialogContentText>\n                </DialogContent>\n                <DialogActions classes={{ root: classes.actions }}>\n                    {actions.map((item, key) => (\n                        <span\n                            key={key}\n                            onClick={() => handleClose(item.callBack)}\n                            color={item.color}\n                            className={`${classes.btn} ${classes[item.color]}`}\n                        >\n                            {item.label}\n                        </span>\n                    ))}\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nAlertDialog.propTypes = { classes: PropTypes.object.isRequired };\n\nexport default withStyles(styles, { withTheme: true })(AlertDialog);\n"]},"metadata":{},"sourceType":"module"}