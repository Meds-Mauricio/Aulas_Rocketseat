{"ast":null,"code":"import _objectSpread from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\PriceFixed\\\\Stories\\\\PriceFixed.stories.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from \\\"react\\\";\\nimport { Paper, Divider, } from \\\"@material-ui/core\\\";\\nimport Grid from \\\"@material-ui/core/Grid\\\";\\nimport { makeStyles , MuiThemeProvider } from \\\"@material-ui/core/styles\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\nimport PriceFixed from \\\"../PriceFixed\\\";\\n\\nconst useStyles = makeStyles((theme) => ({\\n    rootBg: {\\n        background: theme.palette.background.default,\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n}));\\n\\ntype PriceFixedStoryProps = {\\n    mode: string,\\n    brand: BrandType,\\n    dailyPrice: string,\\n    totalDays: string\\n    totalPrice: string\\n    suffix: string\\n    prefix: string\\n    labelButton: string\\n}\\n\\nconst PriceFixedStory = ({\\n    mode, brand, dailyPrice, totalDays, totalPrice, suffix, prefix, labelButton\\n}: PriceFixedStoryProps) => {\\n    const classes = useStyles(themes[brand]);\\n\\n    return (\\n        <MuiThemeProvider theme={themes[brand]}>\\n            <Paper className={classes[mode]} id=\\\"PriceFixed\\\">\\n                <Typography variant=\\\"h3\\\">PriceFixed</Typography>\\n                <br />\\n                <Divider />\\n                <br />\\n                <Grid item xs={6}>\\n                    <PriceFixed\\n                        dailyPrice={dailyPrice}\\n                        totalDays={totalDays}\\n                        totalPrice={totalPrice}\\n                        suffix={suffix}\\n                        prefix={prefix}\\n                        className=\\\"\\\"\\n                        labelButton={labelButton}\\n                    />\\n                </Grid>\\n            </Paper>\\n        </MuiThemeProvider>\\n\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"CVC\\\",\\n        mode: \\\"rootBg\\\",\\n        dailyPrice: \\\"2000,00\\\",\\n        totalDays: \\\"3\\\",\\n        totalPrice: \\\"6000,00\\\",\\n        suffix: \\\"dias\\\",\\n        prefix: \\\"dia\\\",\\n        labelButton: \\\"Default Button\\\",\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"]\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"rootBg\\\", \\\"darkBg\\\"]\\n        },\\n        dailyPrice: { type: \\\"string\\\" },\\n        totalDays: { type: \\\"string\\\" },\\n        totalPrice: { type: \\\"string\\\" },\\n        suffix: { type: \\\"string\\\" },\\n        prefix: { type: \\\"string\\\" },\\n        labelButton: { type: \\\"string\\\" }\\n    }\\n}\\n\\nstoriesOf(\\\"Components/PriceFixed\\\", module)\\n    .add(\\\"Default\\\", (args) => <PriceFixedStory {...args}/>, argsControls);\\n\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"default\": {\n    \"startLoc\": {\n      \"col\": 9,\n      \"line\": 94\n    },\n    \"endLoc\": {\n      \"col\": 72,\n      \"line\": 94\n    },\n    \"startBody\": {\n      \"col\": 20,\n      \"line\": 94\n    },\n    \"endBody\": {\n      \"col\": 58,\n      \"line\": 94\n    }\n  }\n};\nimport React from \"react\";\nimport { Paper, Divider } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { storiesOf } from \"@storybook/react\";\nimport themes from \"../../Theme/themes\";\nimport PriceFixed from \"../PriceFixed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    rootBg: {\n      background: theme.palette.background[\"default\"],\n      boxShadow: theme.shadows[8],\n      padding: \"30px\"\n    },\n    darkBg: {\n      background: \"rgba(0, 0, 0, 0.6)\",\n      boxShadow: theme.shadows[8],\n      padding: \"30px\"\n    }\n  };\n});\n\nvar PriceFixedStory = function PriceFixedStory(_ref) {\n  _s();\n\n  var mode = _ref.mode,\n      brand = _ref.brand,\n      dailyPrice = _ref.dailyPrice,\n      totalDays = _ref.totalDays,\n      totalPrice = _ref.totalPrice,\n      suffix = _ref.suffix,\n      prefix = _ref.prefix,\n      labelButton = _ref.labelButton;\n  var classes = useStyles(themes[brand]);\n  return /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n    theme: themes[brand],\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes[mode],\n      id: \"PriceFixed\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"PriceFixed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(PriceFixed, {\n          dailyPrice: dailyPrice,\n          totalDays: totalDays,\n          totalPrice: totalPrice,\n          suffix: suffix,\n          prefix: prefix,\n          className: \"\",\n          labelButton: labelButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PriceFixedStory, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PriceFixedStory;\nvar argsControls = {\n  args: {\n    brand: \"CVC\",\n    mode: \"rootBg\",\n    dailyPrice: \"2000,00\",\n    totalDays: \"3\",\n    totalPrice: \"6000,00\",\n    suffix: \"dias\",\n    prefix: \"dia\",\n    labelButton: \"Default Button\"\n  },\n  argTypes: {\n    brand: {\n      type: \"select\",\n      options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n    },\n    mode: {\n      type: \"select\",\n      options: [\"rootBg\", \"darkBg\"]\n    },\n    dailyPrice: {\n      type: \"string\"\n    },\n    totalDays: {\n      type: \"string\"\n    },\n    totalPrice: {\n      type: \"string\"\n    },\n    suffix: {\n      type: \"string\"\n    },\n    prefix: {\n      type: \"string\"\n    },\n    labelButton: {\n      type: \"string\"\n    }\n  }\n};\nstoriesOf(\"Components/PriceFixed\", module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __LOCATIONS_MAP__\n  }\n}).add(\"Default\", function (args) {\n  return /*#__PURE__*/_jsxDEV(PriceFixedStory, _objectSpread({}, args), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 31\n  }, _this);\n}, argsControls);\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceFixedStory\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/PriceFixed/Stories/PriceFixed.stories.tsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","Paper","Divider","Grid","makeStyles","MuiThemeProvider","Typography","storiesOf","themes","PriceFixed","useStyles","theme","rootBg","background","palette","boxShadow","shadows","padding","darkBg","PriceFixedStory","mode","brand","dailyPrice","totalDays","totalPrice","suffix","prefix","labelButton","classes","argsControls","args","argTypes","type","options","module","addParameters","storySource","source","locationsMap","add"],"mappings":"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","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { Paper, Divider, } from \\\"@material-ui/core\\\";\\nimport Grid from \\\"@material-ui/core/Grid\\\";\\nimport { makeStyles , MuiThemeProvider } from \\\"@material-ui/core/styles\\\";\\nimport Typography from \\\"@material-ui/core/Typography\\\";\\nimport { storiesOf } from \\\"@storybook/react\\\";\\nimport themes from \\\"../../Theme/themes\\\";\\nimport { BrandType } from \\\"../../types/brand\\\";\\nimport PriceFixed from \\\"../PriceFixed\\\";\\n\\nconst useStyles = makeStyles((theme) => ({\\n    rootBg: {\\n        background: theme.palette.background.default,\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n    darkBg: {\\n        background: \\\"rgba(0, 0, 0, 0.6)\\\",\\n        boxShadow: theme.shadows[8],\\n        padding: \\\"30px\\\",\\n    },\\n}));\\n\\ntype PriceFixedStoryProps = {\\n    mode: string,\\n    brand: BrandType,\\n    dailyPrice: string,\\n    totalDays: string\\n    totalPrice: string\\n    suffix: string\\n    prefix: string\\n    labelButton: string\\n}\\n\\nconst PriceFixedStory = ({\\n    mode, brand, dailyPrice, totalDays, totalPrice, suffix, prefix, labelButton\\n}: PriceFixedStoryProps) => {\\n    const classes = useStyles(themes[brand]);\\n\\n    return (\\n        <MuiThemeProvider theme={themes[brand]}>\\n            <Paper className={classes[mode]} id=\\\"PriceFixed\\\">\\n                <Typography variant=\\\"h3\\\">PriceFixed</Typography>\\n                <br />\\n                <Divider />\\n                <br />\\n                <Grid item xs={6}>\\n                    <PriceFixed\\n                        dailyPrice={dailyPrice}\\n                        totalDays={totalDays}\\n                        totalPrice={totalPrice}\\n                        suffix={suffix}\\n                        prefix={prefix}\\n                        className=\\\"\\\"\\n                        labelButton={labelButton}\\n                    />\\n                </Grid>\\n            </Paper>\\n        </MuiThemeProvider>\\n\\n    );\\n};\\n\\nconst argsControls = {\\n    args: {\\n        brand: \\\"CVC\\\",\\n        mode: \\\"rootBg\\\",\\n        dailyPrice: \\\"2000,00\\\",\\n        totalDays: \\\"3\\\",\\n        totalPrice: \\\"6000,00\\\",\\n        suffix: \\\"dias\\\",\\n        prefix: \\\"dia\\\",\\n        labelButton: \\\"Default Button\\\",\\n    },\\n    argTypes: {\\n        brand: {\\n            type: \\\"select\\\",\\n            options: [\\\"BlackAndWhite\\\", \\\"BlackFriday\\\", \\\"CVC\\\", \\\"CVCCorp\\\", \\\"CVCYellow\\\", \\\"Sub\\\"]\\n        },\\n        mode: {\\n            type: \\\"select\\\",\\n            options: [\\\"rootBg\\\", \\\"darkBg\\\"]\\n        },\\n        dailyPrice: { type: \\\"string\\\" },\\n        totalDays: { type: \\\"string\\\" },\\n        totalPrice: { type: \\\"string\\\" },\\n        suffix: { type: \\\"string\\\" },\\n        prefix: { type: \\\"string\\\" },\\n        labelButton: { type: \\\"string\\\" }\\n    }\\n}\\n\\nstoriesOf(\\\"Components/PriceFixed\\\", module)\\n    .add(\\\"Default\\\", (args) => <PriceFixedStory {...args}/>, argsControls);\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"default\":{\"startLoc\":{\"col\":9,\"line\":94},\"endLoc\":{\"col\":72,\"line\":94},\"startBody\":{\"col\":20,\"line\":94},\"endBody\":{\"col\":58,\"line\":94}}};\n    \nimport React from \"react\";\nimport { Paper, Divider, } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles , MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { storiesOf } from \"@storybook/react\";\nimport themes from \"../../Theme/themes\";\nimport { BrandType } from \"../../types/brand\";\nimport PriceFixed from \"../PriceFixed\";\n\nconst useStyles = makeStyles((theme) => ({\n    rootBg: {\n        background: theme.palette.background.default,\n        boxShadow: theme.shadows[8],\n        padding: \"30px\",\n    },\n    darkBg: {\n        background: \"rgba(0, 0, 0, 0.6)\",\n        boxShadow: theme.shadows[8],\n        padding: \"30px\",\n    },\n}));\n\ntype PriceFixedStoryProps = {\n    mode: string,\n    brand: BrandType,\n    dailyPrice: string,\n    totalDays: string\n    totalPrice: string\n    suffix: string\n    prefix: string\n    labelButton: string\n}\n\nconst PriceFixedStory = ({\n    mode, brand, dailyPrice, totalDays, totalPrice, suffix, prefix, labelButton\n}: PriceFixedStoryProps) => {\n    const classes = useStyles(themes[brand]);\n\n    return (\n        <MuiThemeProvider theme={themes[brand]}>\n            <Paper className={classes[mode]} id=\"PriceFixed\">\n                <Typography variant=\"h3\">PriceFixed</Typography>\n                <br />\n                <Divider />\n                <br />\n                <Grid item xs={6}>\n                    <PriceFixed\n                        dailyPrice={dailyPrice}\n                        totalDays={totalDays}\n                        totalPrice={totalPrice}\n                        suffix={suffix}\n                        prefix={prefix}\n                        className=\"\"\n                        labelButton={labelButton}\n                    />\n                </Grid>\n            </Paper>\n        </MuiThemeProvider>\n\n    );\n};\n\nconst argsControls = {\n    args: {\n        brand: \"CVC\",\n        mode: \"rootBg\",\n        dailyPrice: \"2000,00\",\n        totalDays: \"3\",\n        totalPrice: \"6000,00\",\n        suffix: \"dias\",\n        prefix: \"dia\",\n        labelButton: \"Default Button\",\n    },\n    argTypes: {\n        brand: {\n            type: \"select\",\n            options: [\"BlackAndWhite\", \"BlackFriday\", \"CVC\", \"CVCCorp\", \"CVCYellow\", \"Sub\"]\n        },\n        mode: {\n            type: \"select\",\n            options: [\"rootBg\", \"darkBg\"]\n        },\n        dailyPrice: { type: \"string\" },\n        totalDays: { type: \"string\" },\n        totalPrice: { type: \"string\" },\n        suffix: { type: \"string\" },\n        prefix: { type: \"string\" },\n        labelButton: { type: \"string\" }\n    }\n}\n\nstoriesOf(\"Components/PriceFixed\", module).addParameters({ storySource: { source: __STORY__, locationsMap: __LOCATIONS_MAP__ } })\n    .add(\"Default\", (args) => <PriceFixedStory {...args}/>, argsControls);\n"]},"metadata":{},"sourceType":"module"}