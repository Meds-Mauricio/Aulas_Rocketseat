{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\MapGroup\\\\MapGroup.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { GoogleMap, Marker, withGoogleMap, withScriptjs } from \"react-google-maps\";\nimport MarkerClusterer from \"react-google-maps/lib/components/addons/MarkerClusterer\";\nimport map from \"../assets/img/map.png\";\nimport { Bubbly, CustomInfoBox } from \"./styles\";\nimport \"./styles.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar clusterStyles = [{\n  url: map,\n  height: 40,\n  width: 40,\n  textColor: \"#97007C\"\n}];\nvar MapGroup = withScriptjs(_c2 = withGoogleMap(_c = _s(function (_ref) {\n  _s();\n\n  var defaultData = _ref.defaultData,\n      data = _ref.data,\n      zoom = _ref.zoom,\n      active = _ref.active,\n      handleSelect = _ref.handleSelect,\n      handleMarkerCluster = _ref.handleMarkerCluster,\n      gridSize = _ref.gridSize,\n      maxZoom = _ref.maxZoom,\n      minimumClusterSize = _ref.minimumClusterSize,\n      onZoomChanged = _ref.onZoomChanged;\n  var mapRefs = useRef(null);\n\n  var onMarkerCluster = function onMarkerCluster(cluster) {\n    if (handleMarkerCluster) handleMarkerCluster(cluster.getMarkers());\n  };\n\n  var handleOnZoomChanged = function handleOnZoomChanged() {\n    if (onZoomChanged) onZoomChanged(mapRefs.current);\n  };\n\n  return data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      zoom: zoom,\n      center: {\n        lat: defaultData.coords.lat,\n        lng: defaultData.coords.lng\n      },\n      options: {\n        streetViewControl: false,\n        fullscreenControl: false,\n        mapTypeControl: false\n      },\n      ref: mapRefs,\n      onZoomChanged: handleOnZoomChanged,\n      children: /*#__PURE__*/_jsxDEV(MarkerClusterer, {\n        averageCenter: true,\n        enableRetinaIcons: true,\n        gridSize: gridSize,\n        maxZoom: maxZoom,\n        minimumClusterSize: minimumClusterSize,\n        defaultStyles: clusterStyles,\n        onClick: function onClick(cluster) {\n          return onMarkerCluster(cluster);\n        },\n        children: children ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: children\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: data && data.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              title: JSON.stringify(item),\n              name: item.id,\n              position: {\n                lat: item.location.coordinates.latitude,\n                lng: item.location.coordinates.longitude\n              },\n              visible: false,\n              children: /*#__PURE__*/_jsxDEV(InfoBox, {\n                options: {\n                  closeBoxURL: \"\",\n                  enableEventPropagation: true\n                },\n                children: /*#__PURE__*/_jsxDEV(Bubbly, {\n                  active: active === item.id,\n                  onClick: function onClick() {\n                    return handleSelect(item);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [\"R$\", \" \", get(item, [\"room\", \"rate\", \"pricePerDayWithTax\"], {}).toFixed()]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 49\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 45\n              }, _this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 41\n            }, _this);\n          })\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false) : null;\n}, \"ozMLCqvcJTGFbU/mmVn9SUw7dUU=\")));\n_c3 = MapGroup;\nexport default MapGroup;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MapGroup$withScriptjs$withGoogleMap\");\n$RefreshReg$(_c2, \"MapGroup$withScriptjs\");\n$RefreshReg$(_c3, \"MapGroup\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/MapGroup/MapGroup.js"],"names":["React","useRef","GoogleMap","Marker","withGoogleMap","withScriptjs","MarkerClusterer","map","Bubbly","CustomInfoBox","clusterStyles","url","height","width","textColor","MapGroup","defaultData","data","zoom","active","handleSelect","handleMarkerCluster","gridSize","maxZoom","minimumClusterSize","onZoomChanged","mapRefs","onMarkerCluster","cluster","getMarkers","handleOnZoomChanged","current","lat","coords","lng","streetViewControl","fullscreenControl","mapTypeControl","children","item","JSON","stringify","id","location","coordinates","latitude","longitude","closeBoxURL","enableEventPropagation","get","toFixed"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport {\n    GoogleMap,\n    Marker,\n    withGoogleMap,\n    withScriptjs\n} from \"react-google-maps\";\nimport MarkerClusterer from \"react-google-maps/lib/components/addons/MarkerClusterer\";\nimport map from \"../assets/img/map.png\";\nimport { Bubbly, CustomInfoBox } from \"./styles\";\nimport \"./styles.css\";\n\nconst clusterStyles = [\n    {\n        url: map,\n        height: 40,\n        width: 40,\n        textColor: \"#97007C\",\n    },\n];\n\nconst MapGroup = withScriptjs(withGoogleMap(({\n    defaultData,\n    data,\n    zoom,\n    active,\n    handleSelect,\n    handleMarkerCluster,\n    gridSize,\n    maxZoom,\n    minimumClusterSize,\n    onZoomChanged,\n}) => {\n    const mapRefs = useRef(null);\n\n    const onMarkerCluster = cluster => {\n        if (handleMarkerCluster) handleMarkerCluster(cluster.getMarkers());\n    };\n\n    const handleOnZoomChanged = () => {\n        if (onZoomChanged) onZoomChanged(mapRefs.current);\n    };\n\n    return data ? (\n        <>\n            <GoogleMap\n                zoom={zoom}\n                center={{\n                    lat: defaultData.coords.lat,\n                    lng: defaultData.coords.lng,\n                }}\n                options={{\n                    streetViewControl: false,\n                    fullscreenControl: false,\n                    mapTypeControl: false,\n                }}\n                ref={mapRefs}\n                onZoomChanged={handleOnZoomChanged}\n            >\n                <MarkerClusterer\n                    averageCenter\n                    enableRetinaIcons\n                    gridSize={gridSize}\n                    maxZoom={maxZoom}\n                    minimumClusterSize={minimumClusterSize}\n                    defaultStyles={clusterStyles}\n                    onClick={cluster => onMarkerCluster(cluster)}\n                >\n\n                    {children ? (\n                        <>\n                            {children}\n                        </>\n                    ) : (\n                        <>\n                            {data &&\n                                data.map(item => {\n                                    return (\n                                        <Marker\n                                            title={JSON.stringify(item)}\n                                            name={item.id}\n                                            key={item.id}\n                                            position={{\n                                                lat: item.location.coordinates.latitude,\n                                                lng: item.location.coordinates.longitude,\n                                            }}\n                                            visible={false}\n                                        >\n                                            <InfoBox\n                                                options={{\n                                                    closeBoxURL: \"\",\n                                                    enableEventPropagation: true,\n                                                }}\n                                            >\n                                                <Bubbly\n                                                    active={active === item.id}\n                                                    onClick={() => handleSelect(item)}\n                                                >\n                                                    <>\n                                                        R${\" \"}\n                                                        {get(item,\n                                                            [\"room\", \"rate\", \"pricePerDayWithTax\"],\n                                                            {}).toFixed()}\n                                                    </>\n                                                </Bubbly>\n                                            </InfoBox>\n                                        </Marker>\n                                    );\n                                })}\n                        </>\n                    )}\n                </MarkerClusterer>\n            </GoogleMap>\n        </>\n    ) : null;\n}));\n\nexport default MapGroup;\n"]},"metadata":{},"sourceType":"module"}