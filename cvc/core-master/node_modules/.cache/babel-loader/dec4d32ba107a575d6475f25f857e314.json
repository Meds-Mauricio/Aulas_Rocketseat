{"ast":null,"code":"import _slicedToArray from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\GenericModal\\\\GenericModal.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Dialog, DialogContent, Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useStyles } from \"./styles\";\n/**\n *  Modal component.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ModalGeneric = function ModalGeneric(_ref) {\n  _s();\n\n  var children = _ref.children,\n      testId = _ref.testId,\n      isOpen = _ref.isOpen,\n      onClose = _ref.onClose;\n  var classes = useStyles({});\n\n  var _useState = useState(isOpen),\n      _useState2 = _slicedToArray(_useState, 2),\n      _isOpen = _useState2[0],\n      _setIsOpen = _useState2[1];\n\n  var handleClose = function handleClose() {\n    _setIsOpen(false);\n\n    onClose();\n  };\n\n  useEffect(function () {\n    _setIsOpen(isOpen);\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: _isOpen,\n    PaperProps: {\n      className: classes.modalDialogWrapper\n    },\n    \"data-testid\": testId,\n    children: /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: classes.modalDialogButtonDesktop,\n        onClick: handleClose,\n        \"data-testid\": \"close\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 14 14\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12.5835 0.833252L7.00016 6.41658L1.41683 0.833252C1.25016 0.666585 1.00016 0.666585 0.833496 0.833252C0.666829 0.999919 0.666829 1.24992 0.833496 1.41659L6.41683 6.99992L0.833496 12.5833C0.666829 12.7499 0.666829 12.9999 0.833496 13.1666C1.00016 13.3333 1.25016 13.3333 1.41683 13.1666L7.00016 7.58325L12.5835 13.1666C12.7502 13.3333 13.0002 13.3333 13.1668 13.1666C13.3335 12.9999 13.3335 12.7499 13.1668 12.5833L7.5835 6.99992L13.1668 1.41659C13.3335 1.24992 13.3335 0.999919 13.1668 0.833252C13.0002 0.666585 12.7502 0.666585 12.5835 0.833252Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.modalWrapper,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.modalContentWrapper,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ModalGeneric, \"g5EHZlu9xO9RE4SHxf8ULBs/ook=\", false, function () {\n  return [useStyles];\n});\n\n_c = ModalGeneric;\nModalGeneric.defaultProps = {\n  testId: \"\",\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 15\n  }, this),\n  onClose: function onClose() {\n    return null;\n  }\n};\nModalGeneric.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  testId: PropTypes.string,\n  children: PropTypes.element,\n  onClose: PropTypes.func\n};\nexport default ModalGeneric;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalGeneric\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/GenericModal/GenericModal.tsx"],"names":["React","useEffect","useState","Box","Dialog","DialogContent","Grid","PropTypes","useStyles","ModalGeneric","children","testId","isOpen","onClose","classes","_isOpen","_setIsOpen","handleClose","className","modalDialogWrapper","modalDialogButtonDesktop","modalWrapper","modalContentWrapper","defaultProps","propTypes","bool","isRequired","string","element","func"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACIC,GADJ,EAEIC,MAFJ,EAGIC,aAHJ,EAIIC,IAJJ,QAKO,mBALP;AAMA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA;AACA;AACA;;;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAKf;AAAA;;AAAA,MAJFC,QAIE,QAJFA,QAIE;AAAA,MAHFC,MAGE,QAHFA,MAGE;AAAA,MAFFC,MAEE,QAFFA,MAEE;AAAA,MADFC,OACE,QADFA,OACE;AACF,MAAMC,OAAO,GAAGN,SAAS,CAAC,EAAD,CAAzB;;AACA,kBAA8BN,QAAQ,CAACU,MAAD,CAAtC;AAAA;AAAA,MAAOG,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBD,IAAAA,UAAU,CAAC,KAAD,CAAV;;AACAH,IAAAA,OAAO;AACV,GAHD;;AAKAZ,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,UAAU,CAACJ,MAAD,CAAV;AACH,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAIA,sBACI,QAAC,MAAD;AACI,IAAA,IAAI,EAAEG,OADV;AAEI,IAAA,UAAU,EAAE;AAAEG,MAAAA,SAAS,EAAEJ,OAAO,CAACK;AAArB,KAFhB;AAGI,mBAAaR,MAHjB;AAAA,2BAKI,QAAC,aAAD;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAEG,OAAO,CAACM,wBAFvB;AAGI,QAAA,OAAO,EAAEH,WAHb;AAII,uBAAY,OAJhB;AAAA,+BAMI;AAAK,UAAA,OAAO,EAAC,WAAb;AAAyB,UAAA,KAAK,EAAC,4BAA/B;AAAA,iCACI;AAAM,YAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,eADJ,eAYI,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAEH,OAAO,CAACO,YAAnC;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,SAAS,EAAEP,OAAO,CAACQ,mBAAxB;AAAA,oBAA8CZ;AAA9C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAwBH,CA1CD;;GAAMD,Y;UAMcD,S;;;KANdC,Y;AA4CNA,YAAY,CAACc,YAAb,GAA4B;AACxBZ,EAAAA,MAAM,EAAE,EADgB;AAExBD,EAAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFc;AAGxBG,EAAAA,OAAO,EAAE;AAAA,WAAM,IAAN;AAAA;AAHe,CAA5B;AAMAJ,YAAY,CAACe,SAAb,GAAyB;AACrBZ,EAAAA,MAAM,EAAEL,SAAS,CAACkB,IAAV,CAAeC,UADF;AAErBf,EAAAA,MAAM,EAAEJ,SAAS,CAACoB,MAFG;AAGrBjB,EAAAA,QAAQ,EAAEH,SAAS,CAACqB,OAHC;AAIrBf,EAAAA,OAAO,EAAEN,SAAS,CAACsB;AAJE,CAAzB;AAOA,eAAgBpB,YAAhB","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\nimport React, { useEffect, useState } from \"react\";\nimport {\n    Box,\n    Dialog,\n    DialogContent,\n    Grid\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { useStyles } from \"./styles\";\n\n/**\n *  Modal component.\n */\nconst ModalGeneric = ({\n    children,\n    testId,\n    isOpen,\n    onClose\n}) => {\n    const classes = useStyles({});\n    const [_isOpen, _setIsOpen] = useState(isOpen);\n\n    const handleClose = () => {\n        _setIsOpen(false);\n        onClose();\n    };\n\n    useEffect(() => {\n        _setIsOpen(isOpen);\n    }, [isOpen]);\n\n    return (\n        <Dialog\n            open={_isOpen}\n            PaperProps={{ className: classes.modalDialogWrapper }}\n            data-testid={testId}\n        >\n            <DialogContent>\n                <button\n                    type=\"button\"\n                    className={classes.modalDialogButtonDesktop}\n                    onClick={handleClose}\n                    data-testid=\"close\"\n                >\n                    <svg viewBox=\"0 0 14 14\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M12.5835 0.833252L7.00016 6.41658L1.41683 0.833252C1.25016 0.666585 1.00016 0.666585 0.833496 0.833252C0.666829 0.999919 0.666829 1.24992 0.833496 1.41659L6.41683 6.99992L0.833496 12.5833C0.666829 12.7499 0.666829 12.9999 0.833496 13.1666C1.00016 13.3333 1.25016 13.3333 1.41683 13.1666L7.00016 7.58325L12.5835 13.1666C12.7502 13.3333 13.0002 13.3333 13.1668 13.1666C13.3335 12.9999 13.3335 12.7499 13.1668 12.5833L7.5835 6.99992L13.1668 1.41659C13.3335 1.24992 13.3335 0.999919 13.1668 0.833252C13.0002 0.666585 12.7502 0.666585 12.5835 0.833252Z\"/>\n                    </svg>\n                </button>\n\n                <Grid container className={classes.modalWrapper}>\n                    <Box className={classes.modalContentWrapper}>{children}</Box>\n                </Grid>\n            </DialogContent>\n        </Dialog>\n    );\n};\n\nModalGeneric.defaultProps = {\n    testId: \"\",\n    children: <p>test</p>,\n    onClose: () => null\n};\n\nModalGeneric.propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    testId: PropTypes.string,\n    children: PropTypes.element,\n    onClose: PropTypes.func\n};\n\nexport default (ModalGeneric);\n"]},"metadata":{},"sourceType":"module"}