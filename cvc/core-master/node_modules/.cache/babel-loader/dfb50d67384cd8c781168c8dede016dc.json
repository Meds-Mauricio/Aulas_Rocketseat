{"ast":null,"code":"import _slicedToArray from \"C:/Users/felip/OneDrive/Dokumente/cvc/core-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\felip\\\\OneDrive\\\\Dokumente\\\\cvc\\\\core-master\\\\src\\\\MyTravelLogin\\\\contexts\\\\LoadingContext.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useCallback, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar LoadingContext = /*#__PURE__*/createContext({});\n\nvar LoadingProvider = function LoadingProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setloading = _useState2[1];\n\n  var setLoading = useCallback(function (isLoading) {\n    setloading(isLoading);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoadingContext.Provider, {\n    value: {\n      loading: loading,\n      setLoading: setLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LoadingProvider, \"28dUqa2R+oR3mLKEdoq9pnTzY44=\");\n\n_c = LoadingProvider;\n\nfunction useLoadingContext() {\n  _s2();\n\n  var context = useContext(LoadingContext);\n  return context;\n}\n\n_s2(useLoadingContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { LoadingProvider, useLoadingContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingProvider\");","map":{"version":3,"sources":["C:/Users/felip/OneDrive/Dokumente/cvc/core-master/src/MyTravelLogin/contexts/LoadingContext.tsx"],"names":["React","createContext","useCallback","useContext","useState","LoadingContext","LoadingProvider","children","loading","setloading","setLoading","isLoading","useLoadingContext","context"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAAgCC,WAAhC,EAA6CC,UAA7C,EAAyDC,QAAzD,QAAyE,OAAzE;;AAOA,IAAMC,cAAc,gBAAGJ,aAAa,CAAkB,EAAlB,CAApC;;AAEA,IAAMK,eAAyB,GAAG,SAA5BA,eAA4B,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAChD,kBAA8BH,QAAQ,CAAU,KAAV,CAAtC;AAAA;AAAA,MAAOI,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,UAAU,GAAGR,WAAW,CAAC,UAACS,SAAD,EAAa;AACxCF,IAAAA,UAAU,CAACE,SAAD,CAAV;AACH,GAF6B,EAE5B,EAF4B,CAA9B;AAIA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEH,MAAAA,OAAO,EAAPA,OAAF;AAAWE,MAAAA,UAAU,EAAVA;AAAX,KAAhC;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAZD;;GAAMD,e;;KAAAA,e;;AAcN,SAASM,iBAAT,GAA8C;AAAA;;AAC1C,MAAMC,OAAO,GAAGV,UAAU,CAACE,cAAD,CAA1B;AACA,SAAOQ,OAAP;AACH;;IAHQD,iB;;AAKT,SAASN,eAAT,EAA0BM,iBAA1B","sourcesContent":["import React, { createContext , useCallback, useContext, useState } from \"react\";\n\ninterface ILoadingContext {\n    loading: boolean;\n    setLoading( isLoading: boolean ): void;\n}\n\nconst LoadingContext = createContext<ILoadingContext>({} as ILoadingContext);\n\nconst LoadingProvider: React.FC = ({ children }) => {\n    const [loading, setloading] = useState<boolean>(false);\n\n    const setLoading = useCallback((isLoading)=>{\n        setloading(isLoading);\n    },[]);\n\n    return (\n        <LoadingContext.Provider value={{ loading, setLoading }}>\n            {children}\n        </LoadingContext.Provider>\n    );\n};\n\nfunction useLoadingContext(): ILoadingContext {\n    const context = useContext(LoadingContext);\n    return context;\n}\n\nexport { LoadingProvider, useLoadingContext };\n"]},"metadata":{},"sourceType":"module"}